#!/usr/bin/env node

/**
 * –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫–∞—Ç–æ—Ä –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –æ—Ç—á–µ—Ç–æ–≤ (CommonJS –≤–µ—Ä—Å–∏—è)
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node generate-report.cjs
 */

const { spawn } = require('child_process');
const path = require('path');

console.log('üöÄ –ó–∞–ø—É—Å–∫ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –æ—Ç—á–µ—Ç–æ–≤ EAP Analyzer...');
console.log('üìÇ –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:', process.cwd());

const generatorPath = path.join(__dirname, 'report-generator.cjs');
const child = spawn('node', [generatorPath], {
    stdio: 'inherit',
    cwd: process.cwd()
});

child.on('close', (code) => {
    if (code === 0) {
        console.log('\n‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
        console.log('üìä Dashboard –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –æ—Ç–∫—Ä—ã—Ç–∏–∏');
        console.log('üåê –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8080 –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
    } else {
        console.log(`\n‚ùå –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –∫–æ–¥–æ–º ${code}`);
    }
});

child.on('error', (error) => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞:', error.message);
});
