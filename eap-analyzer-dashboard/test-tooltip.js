// –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –≤ –≥—Ä–∞—Ñ–∏–∫–∞—Ö
// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ tooltip'–∞—Ö

function testTooltipData() {
  console.log("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö tooltip'–æ–≤ –≥—Ä–∞—Ñ–∏–∫–∞");

  if (!window.dashboardInstance) {
    console.error('‚ùå Dashboard –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    return;
  }

  if (!window.EAPCharts) {
    console.error('‚ùå Charts –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    return;
  }

  // –¢–µ—Å—Ç 1: –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
  console.log('\nüìä –¢–µ—Å—Ç 1: –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã');
  window.dashboardInstance.currentClassificationFilter = 'all';
  const allComponents = window.dashboardInstance.getFilteredComponents();
  console.log(`–í—Å–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: ${allComponents.length}`);

  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
  const categoryStats = {};
  allComponents.forEach(comp => {
    const categoryName = window.EAP_DATA?.categories?.[comp.category]?.name || comp.category;
    if (!categoryStats[categoryName]) {
      categoryStats[categoryName] = { count: 0, totalLogic: 0, totalFunctionality: 0 };
    }
    categoryStats[categoryName].count++;
    categoryStats[categoryName].totalLogic += comp.logic || 0;
    categoryStats[categoryName].totalFunctionality += comp.functionality || 0;
  });

  console.log('–ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:');
  Object.keys(categoryStats).forEach(category => {
    const stats = categoryStats[category];
    const avgLogic = Math.round(stats.totalLogic / stats.count);
    const avgFunctionality = Math.round(stats.totalFunctionality / stats.count);
    console.log(
      `  ${category}: ${stats.count} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (–ª–æ–≥–∏–∫–∞: ${avgLogic}%, —Ñ—É–Ω–∫—Ü: ${avgFunctionality}%)`
    );
  });

  // –¢–µ—Å—Ç 2: –¢–æ–ª—å–∫–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä—ã
  console.log('\nüîç –¢–µ—Å—Ç 2: –¢–æ–ª—å–∫–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä—ã');
  window.dashboardInstance.currentClassificationFilter = 'analyzer';
  const analyzerComponents = window.dashboardInstance.getFilteredComponents();
  console.log(`–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä—ã: ${analyzerComponents.length} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤`);

  // –ü–µ—Ä–µ—Å—á–µ—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–≤
  const analyzerCategoryStats = {};
  analyzerComponents.forEach(comp => {
    const categoryName = window.EAP_DATA?.categories?.[comp.category]?.name || comp.category;
    if (!analyzerCategoryStats[categoryName]) {
      analyzerCategoryStats[categoryName] = { count: 0, totalLogic: 0, totalFunctionality: 0 };
    }
    analyzerCategoryStats[categoryName].count++;
    analyzerCategoryStats[categoryName].totalLogic += comp.logic || 0;
    analyzerCategoryStats[categoryName].totalFunctionality += comp.functionality || 0;
  });

  console.log('–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:');
  Object.keys(analyzerCategoryStats).forEach(category => {
    const stats = analyzerCategoryStats[category];
    const avgLogic = Math.round(stats.totalLogic / stats.count);
    const avgFunctionality = Math.round(stats.totalFunctionality / stats.count);
    console.log(
      `  ${category}: ${stats.count} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ (–ª–æ–≥–∏–∫–∞: ${avgLogic}%, —Ñ—É–Ω–∫—Ü: ${avgFunctionality}%)`
    );
  });

  // –¢–µ—Å—Ç 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
  console.log('\nüìà –¢–µ—Å—Ç 3: –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞');
  if (window.EAPCharts.updateCategoriesChart) {
    window.EAPCharts.updateCategoriesChart();
    console.log('‚úÖ –ì—Ä–∞—Ñ–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–≤');
  } else {
    console.log('‚ùå –§—É–Ω–∫—Ü–∏—è updateCategoriesChart –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
  }

  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –ø–æ–∫–∞–∑—É –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  window.dashboardInstance.currentClassificationFilter = 'all';
  if (window.EAPCharts.updateCategoriesChart) {
    window.EAPCharts.updateCategoriesChart();
  }

  console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é
window.testTooltipData = testTooltipData;

console.log('üß™ –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω. –í—ã–∑–æ–≤–∏—Ç–µ testTooltipData() –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤.');
