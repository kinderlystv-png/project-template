# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
# –ê–≤—Ç–æ—Ä: SHINOMONTAGKA
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\monitor-processes.ps1

param(
    [string]$ProcessName = "node",
    [int]$RefreshSeconds = 5,
    [switch]$Background = $false
)

# –°–Ω–∞—á–∞–ª–∞ –æ—á–∏—â–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ CMD –ø—Ä–æ—Ü–µ—Å—Å—ã
Write-Host "üßπ –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..." -ForegroundColor Yellow
taskkill /F /IM powershell.exe /FI "WINDOWTITLE eq *monitor-processes*" 2>$null
taskkill /F /IM cmd.exe 2>$null
Start-Sleep -Seconds 1

# –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —Ñ–æ–Ω–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞, –∑–∞–ø—É—Å–∫–∞–µ–º –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
if ($Background) {
    Write-Host "üîÑ –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ..." -ForegroundColor Green
    Start-Process powershell -ArgumentList "-File", $PSCommandPath, "-ProcessName", $ProcessName, "-RefreshSeconds", $RefreshSeconds -WindowStyle Minimized
    Write-Host "‚úÖ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ. –¢–µ—Ä–º–∏–Ω–∞–ª —Å–≤–æ–±–æ–¥–µ–Ω –¥–ª—è –¥—Ä—É–≥–∏—Ö –∫–æ–º–∞–Ω–¥." -ForegroundColor Green
    return
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–ø—É—â–µ–Ω –ª–∏ —É–∂–µ –¥—Ä—É–≥–æ–π —ç–∫–∑–µ–º–ø–ª—è—Ä —ç—Ç–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞
$currentPID = $PID
$scriptName = $MyInvocation.MyCommand.Name
$runningInstances = Get-WmiObject Win32_Process | Where-Object { 
    $_.Name -eq "powershell.exe" -and 
    $_.CommandLine -like "*$scriptName*" -and 
    $_.ProcessId -ne $currentPID 
}

if ($runningInstances) {
    Write-Host "‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω —É–∂–µ –∑–∞–ø—É—â–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞!" -ForegroundColor Yellow
    Write-Host "üîÑ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã..." -ForegroundColor Cyan
    $runningInstances | ForEach-Object { Stop-Process -Id $_.ProcessId -Force -ErrorAction SilentlyContinue }
    Start-Sleep -Seconds 1
}

Write-Host "üîç –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: $ProcessName" -ForegroundColor Green
Write-Host "üìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ $RefreshSeconds —Å–µ–∫—É–Ω–¥" -ForegroundColor Yellow
Write-Host "‚èπÔ∏è  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏`n" -ForegroundColor Cyan

while ($true) {
    Clear-Host
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    Write-Host "üïí $timestamp - –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã: $ProcessName" -ForegroundColor Green
    Write-Host "=" * 80
    
    $processes = Get-Process -Name $ProcessName -ErrorAction SilentlyContinue
    
    if ($processes) {
        $processes | Select-Object @{
            Name="PID"; Expression={$_.Id}
        }, @{
            Name="–ò–º—è"; Expression={$_.ProcessName}
        }, @{
            Name="CPU(s)"; Expression={[math]::Round($_.CPU, 2)}
        }, @{
            Name="–ü–∞–º—è—Ç—å(MB)"; Expression={[math]::Round($_.WorkingSet/1MB, 2)}
        }, @{
            Name="–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞"; Expression={$_.StartTime}
        } | Format-Table -AutoSize
        
        Write-Host "üìà –í—Å–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: $($processes.Count)" -ForegroundColor Yellow
    } else {
        Write-Host "‚úÖ –ü—Ä–æ—Ü–µ—Å—Å—ã '$ProcessName' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" -ForegroundColor Green
    }
    
    Write-Host "`nüîÑ –°–ª–µ–¥—É—é—â–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ $RefreshSeconds —Å–µ–∫—É–Ω–¥..."
    Start-Sleep -Seconds $RefreshSeconds
}
