#!/usr/bin/env pwsh

# –û—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ SHINOMONTAGKA

Write-Host "üß™ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –Ω–∞–±–æ—Ä–∞ SHINOMONTAGKA" -ForegroundColor Cyan

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è Node.js –∏ npm
if (-not (Get-Command node -ErrorAction SilentlyContinue)) {
    Write-Error "Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
    exit 1
}

if (-not (Get-Command npm -ErrorAction SilentlyContinue)) {
    Write-Error "npm –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ npm –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è."
    exit 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function Show-TestResults {
    param($TestType, $ExitCode)
    
    if ($ExitCode -eq 0) {
        Write-Host "‚úÖ $TestType: –ü–†–û–ô–î–ï–ù–´" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $TestType: –û–®–ò–ë–ö–ò" -ForegroundColor Red
    }
    return $ExitCode
}

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤
if (-not (Test-Path "tests/reports")) {
    New-Item -ItemType Directory -Path "tests/reports" -Force | Out-Null
}

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
$AllTestsPassed = $true
$TestResults = @{}

Write-Host "`nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤..." -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
$RequiredFiles = @(
    "tests/vitest.config.ts",
    "tests/utils/global-setup.ts",
    "src/tests/setup.ts"
)

foreach ($file in $RequiredFiles) {
    if (-not (Test-Path $file)) {
        Write-Warning "–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $file"
    } else {
        Write-Host "‚úì $file" -ForegroundColor Green
    }
}

Write-Host "`nüîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Yellow
npm install
if ($LASTEXITCODE -ne 0) {
    Write-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
    exit 1
}

# 1. –Æ–Ω–∏—Ç-—Ç–µ—Å—Ç—ã
Write-Host "`nüß™ –ó–∞–ø—É—Å–∫ —é–Ω–∏—Ç-—Ç–µ—Å—Ç–æ–≤..." -ForegroundColor Cyan
npx vitest run tests/unit --config=tests/vitest.config.ts --reporter=verbose
$UnitTestResult = Show-TestResults "–Æ–Ω–∏—Ç-—Ç–µ—Å—Ç—ã" $LASTEXITCODE
$TestResults.Unit = $UnitTestResult
if ($UnitTestResult -ne 0) { $AllTestsPassed = $false }

# 2. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
Write-Host "`nüîó –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..." -ForegroundColor Cyan
npx vitest run tests/integration --config=tests/vitest.config.ts --reporter=verbose
$IntegrationTestResult = Show-TestResults "–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã" $LASTEXITCODE
$TestResults.Integration = $IntegrationTestResult
if ($IntegrationTestResult -ne 0) { $AllTestsPassed = $false }

# 3. –¢–µ—Å—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
Write-Host "`n‚ö° –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏..." -ForegroundColor Cyan
npx vitest run tests/performance --config=tests/vitest.config.ts --reporter=verbose
$PerformanceTestResult = Show-TestResults "–¢–µ—Å—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏" $LASTEXITCODE
$TestResults.Performance = $PerformanceTestResult
if ($PerformanceTestResult -ne 0) { $AllTestsPassed = $false }

# 4. –í–∏–∑—É–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã
Write-Host "`nüé® –ó–∞–ø—É—Å–∫ –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..." -ForegroundColor Cyan
npx vitest run tests/visual --config=tests/vitest.config.ts --reporter=verbose
$VisualTestResult = Show-TestResults "–í–∏–∑—É–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã" $LASTEXITCODE
$TestResults.Visual = $VisualTestResult
if ($VisualTestResult -ne 0) { $AllTestsPassed = $false }

# 5. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ –ø–æ–∫—Ä—ã—Ç–∏–∏
Write-Host "`nüìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ –ø–æ–∫—Ä—ã—Ç–∏–∏ –∫–æ–¥–∞..." -ForegroundColor Cyan
npx vitest run --coverage --config=tests/vitest.config.ts
$CoverageResult = Show-TestResults "–ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞" $LASTEXITCODE
$TestResults.Coverage = $CoverageResult

# 6. –õ–∏–Ω—Ç–∏–Ω–≥ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
Write-Host "`nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞..." -ForegroundColor Cyan
if (Get-Command npx -ErrorAction SilentlyContinue) {
    npx eslint src tests --ext .js,.ts,.svelte
    $LintResult = Show-TestResults "–õ–∏–Ω—Ç–∏–Ω–≥" $LASTEXITCODE
    $TestResults.Lint = $LintResult
    if ($LintResult -ne 0) { $AllTestsPassed = $false }
}

# 7. Type checking
Write-Host "`nüìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ TypeScript..." -ForegroundColor Cyan
npx tsc --noEmit
$TypeCheckResult = Show-TestResults "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤" $LASTEXITCODE
$TestResults.TypeCheck = $TypeCheckResult
if ($TypeCheckResult -ne 0) { $AllTestsPassed = $false }

# –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
Write-Host "`n" + "="*60 -ForegroundColor Cyan
Write-Host "üìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø" -ForegroundColor Cyan
Write-Host "="*60 -ForegroundColor Cyan

foreach ($test in $TestResults.GetEnumerator()) {
    $status = if ($test.Value -eq 0) { "‚úÖ –ü–†–û–ô–î–ï–ù" } else { "‚ùå –ü–†–û–í–ê–õ–ï–ù" }
    $color = if ($test.Value -eq 0) { "Green" } else { "Red" }
    Write-Host "$($test.Key): $status" -ForegroundColor $color
}

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –æ—Ç—á–µ—Ç–∞—Ö
Write-Host "`nüìÅ –û—Ç—á–µ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤:" -ForegroundColor Yellow
Write-Host "   ‚Ä¢ tests/reports/junit.xml (JUnit —Ñ–æ—Ä–º–∞—Ç)" -ForegroundColor Gray
Write-Host "   ‚Ä¢ tests/reports/results.json (JSON —Ñ–æ—Ä–º–∞—Ç)" -ForegroundColor Gray
Write-Host "   ‚Ä¢ tests/reports/index.html (HTML –æ—Ç—á–µ—Ç)" -ForegroundColor Gray
Write-Host "   ‚Ä¢ tests/coverage/ (–ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞)" -ForegroundColor Gray

# –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
if (-not $AllTestsPassed) {
    Write-Host "`nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:" -ForegroundColor Yellow
    Write-Host "   ‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π –æ—à–∏–±–æ–∫" -ForegroundColor Gray
    Write-Host "   ‚Ä¢ –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏:" -ForegroundColor Gray
    Write-Host "     npm run test:unit" -ForegroundColor Gray
    Write-Host "     npm run test:integration" -ForegroundColor Gray
    Write-Host "     npm run test:performance" -ForegroundColor Gray
    Write-Host "   ‚Ä¢ –û—Ç–∫—Ä–æ–π—Ç–µ HTML –æ—Ç—á–µ—Ç –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞" -ForegroundColor Gray
}

# –§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
if ($AllTestsPassed) {
    Write-Host "`nüéâ –í–°–ï –¢–ï–°–¢–´ –£–°–ü–ï–®–ù–û –ü–†–û–ô–î–ï–ù–´!" -ForegroundColor Green
    exit 0
} else {
    Write-Host "`n‚ö†Ô∏è  –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´!" -ForegroundColor Red
    exit 1
}
