#!/usr/bin/env node

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});

function question(prompt) {
  return new Promise(resolve => {
    rl.question(prompt, resolve);
  });
}

async function setupProject() {
  console.log('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –∏–∑ —à–∞–±–ª–æ–Ω–∞\n');

  try {
    // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    const projectName = await question('üìù –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: ');
    const projectDescription = await question('üìÑ –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: ');
    const authorName = await question('üë§ –ê–≤—Ç–æ—Ä: ');
    const gitRepo = await question('üîó Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ): ');

    console.log('\n‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é –ø—Ä–æ–µ–∫—Ç...\n');

    // –û–±–Ω–æ–≤–ª—è–µ–º package.json
    const packagePath = path.join(process.cwd(), 'package.json');
    const packageJson = JSON.parse(fs.readFileSync(packagePath, 'utf8'));

    packageJson.name = projectName.toLowerCase().replace(/[^a-z0-9-]/g, '-');
    packageJson.description = projectDescription;
    packageJson.author = authorName;
    packageJson.version = '0.1.0';

    if (gitRepo) {
      packageJson.repository = {
        type: 'git',
        url: gitRepo,
      };
      packageJson.homepage = gitRepo.replace('.git', '#readme');
      packageJson.bugs = {
        url: gitRepo.replace('.git', '/issues'),
      };
    }

    // –£–¥–∞–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç—ã —à–∞–±–ª–æ–Ω–∞
    delete packageJson.scripts['setup:project'];
    delete packageJson.scripts['template:update'];
    delete packageJson.scripts['template:test'];

    fs.writeFileSync(packagePath, JSON.stringify(packageJson, null, 2));
    console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω package.json');

    // –û–±–Ω–æ–≤–ª—è–µ–º index.html
    const indexPath = path.join(process.cwd(), 'index.html');
    let indexHtml = fs.readFileSync(indexPath, 'utf8');
    indexHtml = indexHtml.replace(/<title>.*<\/title>/, `<title>${projectName}</title>`);
    indexHtml = indexHtml.replace(/SHINOMONTAGKA/g, projectName);
    fs.writeFileSync(indexPath, indexHtml);
    console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω index.html');

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const startPagePath = path.join(process.cwd(), 'src/StartPage.svelte');
    if (fs.existsSync(startPagePath)) {
      let startPage = fs.readFileSync(startPagePath, 'utf8');
      startPage = startPage.replace(/–Ω–∞—á–Ω–µ–º –ø—Ä–æ–µ–∫—Ç/g, projectName);
      startPage = startPage.replace(/SHINOMONTAGKA/g, projectName);
      fs.writeFileSync(startPagePath, startPage);
      console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å—Ç–∞—Ä—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞');
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π README –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
    const readmeContent = `# ${projectName}

${projectDescription}

## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

\`\`\`bash
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
npm install

# –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
npm run dev

# –°–±–æ—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
npm run build
\`\`\`

## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

\`\`\`bash
# –í—Å–µ —Ç–µ—Å—Ç—ã
npm run test

# Unit —Ç–µ—Å—Ç—ã
npm run test:unit

# E2E —Ç–µ—Å—Ç—ã
npm run test:e2e

# –ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞
npm run test:coverage
\`\`\`

## üèóÔ∏è –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

\`\`\`
src/
‚îú‚îÄ‚îÄ lib/           # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞
‚îú‚îÄ‚îÄ components/    # UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
‚îú‚îÄ‚îÄ routes/        # –°—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
‚îî‚îÄ‚îÄ stores/        # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º

tests/
‚îú‚îÄ‚îÄ unit/          # –Æ–Ω–∏—Ç —Ç–µ—Å—Ç—ã
‚îú‚îÄ‚îÄ integration/   # –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
‚îú‚îÄ‚îÄ e2e/           # End-to-End —Ç–µ—Å—Ç—ã
‚îî‚îÄ‚îÄ performance/   # –¢–µ—Å—Ç—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
\`\`\`

## üõ†Ô∏è –í–∫–ª—é—á–µ–Ω–Ω–∞—è –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞

- **üìù –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ** - –ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å 5 —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞–º–∏
- **üîÑ API –∫–ª–∏–µ–Ω—Ç** - –° retry, –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∏ CSRF –∑–∞—â–∏—Ç–æ–π
- **üíæ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ** - LRU –∫—ç—à —Å TTL –∏ —Ç–µ–≥–∞–º–∏
- **üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å** - XSS/CSRF –∑–∞—â–∏—Ç–∞, —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ
- **üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥** - Web Vitals –∏ –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
- **‚ö†Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫** - –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è —Å —Ç–∏–ø–∏–∑–∞—Ü–∏–µ–π
- **‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è** - –¢–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
- **üîÑ –ú–∏–≥—Ä–∞—Ü–∏–∏** - –°–∏—Å—Ç–µ–º–∞ –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö

## üì¶ –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏

- **SvelteKit** - –§—Ä–µ–π–º–≤–æ—Ä–∫
- **TypeScript** - –¢–∏–ø–∏–∑–∞—Ü–∏—è
- **Vite** - –°–±–æ—Ä—â–∏–∫
- **Vitest** - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
- **Playwright** - E2E —Ç–µ—Å—Ç—ã

## üë®‚Äçüíª –ê–≤—Ç–æ—Ä

${authorName}

${gitRepo ? `## üîó –°—Å—ã–ª–∫–∏\n\n- [–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π](${gitRepo})\n` : ''}

---

*–°–æ–∑–¥–∞–Ω–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º [Universal Project Template](https://github.com/alphacore/project-template)*
`;

    fs.writeFileSync(path.join(process.cwd(), 'README.md'), readmeContent);
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω README.md');

    // –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª
    const envContent = `# ${projectName} Environment Variables

# API Configuration
VITE_API_URL=/api
VITE_API_TIMEOUT=30000
VITE_API_RETRY=3

# Application
VITE_APP_NAME="${projectName}"
VITE_APP_VERSION="0.1.0"

# Features
VITE_ENABLE_ANALYTICS=false
VITE_ENABLE_SENTRY=false
VITE_ENABLE_PWA=false

# Development
VITE_DEBUG=true
VITE_LOG_LEVEL=info

# Sentry (if enabled)
VITE_SENTRY_DSN=
VITE_SENTRY_TRACES_RATE=0.1

# Analytics (if enabled)
VITE_GA_ID=
VITE_GTM_ID=
`;

    fs.writeFileSync(path.join(process.cwd(), '.env'), envContent);
    fs.writeFileSync(path.join(process.cwd(), '.env.example'), envContent);
    console.log('‚úÖ –°–æ–∑–¥–∞–Ω—ã .env –∏ .env.example');

    // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã —à–∞–±–ª–æ–Ω–∞
    const filesToRemove = [
      'TEMPLATE_README.md',
      'template.config.json',
      'scripts/setup-project.js', // –£–¥–∞–ª—è–µ–º —Å–∞–º–æ–≥–æ —Å–µ–±—è
      'scripts/update-template.js',
      'scripts/cli.js',
    ];

    filesToRemove.forEach(file => {
      const filePath = path.join(process.cwd(), file);
      if (fs.existsSync(filePath)) {
        fs.unlinkSync(filePath);
      }
    });

    // –£–¥–∞–ª—è–µ–º –ø–∞–ø–∫—É scripts –µ—Å–ª–∏ –æ–Ω–∞ –ø—É—Å—Ç–∞—è
    const scriptsDir = path.join(process.cwd(), 'scripts');
    if (fs.existsSync(scriptsDir) && fs.readdirSync(scriptsDir).length === 0) {
      fs.rmdirSync(scriptsDir);
    }

    console.log('‚úÖ –£–¥–∞–ª–µ–Ω—ã —Ñ–∞–π–ª—ã —à–∞–±–ª–æ–Ω–∞');

    console.log(`
üéâ –ü—Ä–æ–µ–∫—Ç ${projectName} —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!

üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:

1. üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ Git:
   git add .
   git commit -m "Initial commit: ${projectName}"

2. üåê –î–æ–±–∞–≤—å—Ç–µ —É–¥–∞–ª–µ–Ω–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π (–µ—Å–ª–∏ –µ—Å—Ç—å):
   git remote add origin ${gitRepo || '<your-git-repo>'}
   git push -u origin main

3. üöÄ –ù–∞—á–Ω–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É:
   npm run dev

4. üß™ –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã:
   npm run test

–£–¥–∞—á–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏! üöÄ
`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –ø—Ä–æ–µ–∫—Ç–∞:', error.message);
    process.exit(1);
  } finally {
    rl.close();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  setupProject();
}

module.exports = { setupProject };
