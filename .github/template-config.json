{
  "name": "SHINOMONTAGKA Universal Template",
  "description": "🚀 Enterprise-grade SvelteKit template with 12+ infrastructure systems, TypeScript, and comprehensive documentation. Production-ready with 95% Lighthouse score.",
  "labels": [
    "sveltekit",
    "typescript",
    "template",
    "enterprise",
    "production-ready",
    "vite",
    "vitest",
    "infrastructure",
    "performance",
    "frontend",
    "fullstack",
    "web-app",
    "starter",
    "boilerplate",
    "cache",
    "monitoring",
    "logging",
    "security",
    "api-client",
    "testing",
    "quality",
    "documentation",
    "best-practices",
    "modern",
    "scalable"
  ],
  "templateOwner": "kinderlystv-png",
  "templateName": "project-template",
  "includeDependencies": true,
  "includeHistory": false,
  "presets": {
    "web-app": {
      "name": "Web Application",
      "description": "Full-featured web application with all systems enabled",
      "include": ["*"],
      "exclude": []
    },
    "api-backend": {
      "name": "API Backend",
      "description": "Backend-focused template with API, monitoring, and security",
      "include": [
        "src/lib/api/**",
        "src/lib/cache/**",
        "src/lib/logger/**",
        "src/lib/monitoring/**",
        "src/lib/security/**",
        "src/lib/config/**",
        "src/lib/error/**"
      ],
      "exclude": ["src/components/**", "src/routes/**/+page.*"]
    },
    "frontend-only": {
      "name": "Frontend Only",
      "description": "Frontend-focused template with UI components and client features",
      "include": [
        "src/components/**",
        "src/routes/**",
        "src/lib/utils/**",
        "src/lib/cache/**",
        "src/lib/logger/**"
      ],
      "exclude": ["src/lib/api/server/**", "src/lib/monitoring/server/**"]
    },
    "minimal": {
      "name": "Minimal Setup",
      "description": "Basic SvelteKit setup with essential infrastructure only",
      "include": [
        "src/app.html",
        "src/routes/**",
        "src/lib/config/**",
        "src/lib/logger/**",
        "src/lib/utils/**"
      ],
      "exclude": [
        "src/lib/cache/**",
        "src/lib/api/**",
        "src/lib/monitoring/**",
        "src/lib/security/**",
        "docs/**"
      ]
    }
  },
  "setupSteps": [
    {
      "title": "1. Clone and Install",
      "description": "Clone the repository and install dependencies",
      "commands": [
        "git clone https://github.com/{{owner}}/{{repo}}.git {{project-name}}",
        "cd {{project-name}}",
        "npm install"
      ]
    },
    {
      "title": "2. Environment Setup",
      "description": "Configure environment variables",
      "commands": [
        "cp .env.example .env.local",
        "# Edit .env.local with your configuration"
      ]
    },
    {
      "title": "3. Quality Check",
      "description": "Run quality assurance checks",
      "commands": [
        "npm run qa",
        "npm run test"
      ]
    },
    {
      "title": "4. Start Development",
      "description": "Launch development server",
      "commands": [
        "npm run dev",
        "# Open http://localhost:5173"
      ]
    }
  ],
  "postSetupTodos": [
    "📝 Update package.json metadata (name, description, author)",
    "🔧 Configure environment variables in .env.local",
    "📚 Review documentation in ./docs/",
    "🧪 Run tests: npm run test",
    "✅ Run quality check: npm run qa",
    "🚀 Deploy to staging environment",
    "📈 Set up monitoring and logging",
    "🔒 Configure security settings",
    "👥 Add team members to repository",
    "📖 Customize README.md for your project"
  ],
  "features": [
    {
      "name": "Enterprise Architecture",
      "description": "12+ core infrastructure systems with SOLID principles",
      "icon": "🏗️"
    },
    {
      "name": "TypeScript Strict Mode",
      "description": "Advanced TypeScript with comprehensive type safety",
      "icon": "📘"
    },
    {
      "name": "Multi-level Caching",
      "description": "L1/L2/L3 cache system with compression and TTL",
      "icon": "⚡"
    },
    {
      "name": "Structured Logging",
      "description": "Multiple transports with correlation IDs",
      "icon": "📊"
    },
    {
      "name": "API Client",
      "description": "Unified client with retry logic and rate limiting",
      "icon": "🌐"
    },
    {
      "name": "Performance Monitoring",
      "description": "Web Vitals and custom metrics tracking",
      "icon": "📈"
    },
    {
      "name": "Security Framework",
      "description": "Validation, sanitization, and threat detection",
      "icon": "🛡️"
    },
    {
      "name": "Error Handling",
      "description": "Recovery strategies with comprehensive tracking",
      "icon": "🔧"
    },
    {
      "name": "Testing Suite",
      "description": "85% coverage with parallel execution",
      "icon": "🧪"
    },
    {
      "name": "Quality Assurance",
      "description": "Automated quality gates with pre-commit hooks",
      "icon": "✅"
    },
    {
      "name": "CI/CD Ready",
      "description": "GitHub Actions integration out of the box",
      "icon": "🚀"
    },
    {
      "name": "Comprehensive Docs",
      "description": "100% documentation coverage with guides",
      "icon": "📚"
    }
  ],
  "techStack": {
    "frontend": [
      "SvelteKit 2.37+",
      "TypeScript 5.6+",
      "Vite 7.1+",
      "TailwindCSS 3.4+"
    ],
    "build": [
      "Vite with advanced optimization",
      "TypeScript strict mode",
      "ESLint with custom rules",
      "Prettier formatting"
    ],
    "testing": [
      "Vitest 3.2+ for unit tests",
      "Playwright for E2E tests",
      "85% test coverage",
      "Parallel test execution"
    ],
    "infrastructure": [
      "Multi-level caching system",
      "Structured logging framework",
      "Unified API client",
      "Performance monitoring",
      "Security framework",
      "Error handling system"
    ],
    "quality": [
      "Automated QA pipeline",
      "Pre-commit hooks",
      "Code quality gates",
      "Performance benchmarks"
    ],
    "deployment": [
      "Multi-platform support",
      "Docker containerization",
      "CI/CD with GitHub Actions",
      "Environment management"
    ]
  },
  "metrics": {
    "performance": {
      "lighthouse": "95/100",
      "fcp": "< 1.2s",
      "lcp": "< 2.5s",
      "cls": "< 0.1",
      "bundleSize": "~850KB"
    },
    "quality": {
      "testCoverage": "85%",
      "typeScript": "Strict mode",
      "documentation": "100%",
      "codeQuality": "A+ grade"
    }
  },
  "compatibility": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0",
    "browsers": [
      "Chrome >= 90",
      "Firefox >= 88",
      "Safari >= 14",
      "Edge >= 90"
    ]
  },
  "license": "MIT",
  "version": "2.0.0",
  "lastUpdated": "2024-12-19",
  "maintainers": [
    {
      "name": "SHINOMONTAGKA Team",
      "role": "Core maintainer",
      "contact": "github.com/kinderlystv-png"
    }
  ]
}
