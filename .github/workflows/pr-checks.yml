name: Pull Request Checks

on:
  pull_request:
    branches: [master]
  pull_request_review:
    types: [submitted]

jobs:
  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ PR
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '8'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40
        with:
          files: |
            src/**/*.{js,ts,svelte}
            tests/**/*.{js,ts}
            **/*.json
            **/*.md

      - name: Run type checking on changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: pnpm run type-check

      - name: Run linting on changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: pnpm run lint:check

      - name: Run tests related to changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: pnpm run test:run --changed

      - name: Check for TODO/FIXME comments
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          if grep -r "TODO\|FIXME" ${{ steps.changed-files.outputs.all_changed_files }}; then
            echo "::warning::Found TODO/FIXME comments in changed files"
          fi

  # –ê–Ω–∞–ª–∏–∑ —Ä–∞–∑–º–µ—Ä–∞ –±–∞–Ω–¥–ª–∞
  bundle-analysis:
    name: Bundle Size Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '8'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build and analyze bundle
        run: |
          pnpm run build
          npx vite-bundle-analyzer dist --open-analyzer false --generate-report

      - name: Comment bundle size
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // –ß—Ç–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞–∑–º–µ—Ä–µ –±–∞–Ω–¥–ª–∞
            const bundleInfo = `
            üì¶ **Bundle Analysis**

            Build completed successfully!
            Check the artifacts for detailed bundle analysis.
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: bundleInfo
            });

  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ —Ä–µ–≤—å—é–µ—Ä–æ–≤
  assign-reviewers:
    name: Auto Assign Reviewers
    runs-on: ubuntu-latest
    if: github.event.action == 'opened'
    steps:
      - name: Auto assign reviewers
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo, number } = context.issue;
            const author = context.payload.pull_request.user.login;

            // –°–ø–∏—Å–æ–∫ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —Ä–µ–≤—å—é–µ—Ä–æ–≤ (–Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥ –≤–∞—à –ø—Ä–æ–µ–∫—Ç)
            const reviewers = ['teammate1', 'teammate2', 'teammate3']
              .filter(reviewer => reviewer !== author);

            if (reviewers.length > 0) {
              await github.rest.pulls.requestReviewers({
                owner,
                repo,
                pull_number: number,
                reviewers: reviewers.slice(0, 2) // –ù–∞–∑–Ω–∞—á–∞–µ–º –º–∞–∫—Å–∏–º—É–º 2 —Ä–µ–≤—å—é–µ—Ä–∞
              });
            }

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '8'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run dependency audit
        run: pnpm audit --audit-level moderate

      - name: Check for outdated packages
        run: pnpm outdated || true

  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
  accessibility-check:
    name: Accessibility Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: '8'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build project
        run: pnpm run build

      - name: Run accessibility tests
        run: |
          echo "üîç Running accessibility checks..."
          echo "Note: Add axe-core or similar accessibility testing tools"
