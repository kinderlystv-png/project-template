name: Testing Automation

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Запускаем тесты каждый день в 6:00 UTC
    - cron: '0 6 * * *'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run type checking
        run: npm run type-check

      - name: Run unit tests
        run: npm run test

      - name: Run test coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  performance-test:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run performance tests
        run: npm test -- tests/performance --reporter=json > performance-results.json

      - name: Upload performance results
        uses: actions/upload-artifact@v3
        with:
          name: performance-results
          path: performance-results.json

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run integration tests
        run: npm test -- tests/integration

      - name: Test build process
        run: npm run build

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Run dependency check
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install and run security scanner
        run: |
          npm install -g npm-audit-ci-wrapper
          npm-audit-ci-wrapper --moderate

  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [test, performance-test, integration-test, security-scan]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Quality checks
        run: |
          echo "Running quality gate checks..."
          npm run lint
          npm run type-check

          # Проверяем покрытие тестами
          COVERAGE=$(npm run test:coverage -- --reporter=json | jq '.total.lines.pct')
          echo "Test coverage: $COVERAGE%"

          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "❌ Test coverage below 80%"
            exit 1
          else
            echo "✅ Test coverage above 80%"
          fi

      - name: Create quality report
        run: |
          cat > quality-report.md << EOF
          # Quality Report

          ## Test Results
          - Unit Tests: ✅ Passed
          - Integration Tests: ✅ Passed
          - Performance Tests: ✅ Passed
          - Security Scan: ✅ Passed

          ## Metrics
          - Test Coverage: Above 80%
          - Linting: No issues
          - Type Checking: No errors

          ## Build Status
          - Build: ✅ Successful
          - Dependencies: ✅ Secure

          Generated on: $(date)
          EOF

      - name: Upload quality report
        uses: actions/upload-artifact@v3
        with:
          name: quality-report
          path: quality-report.md
