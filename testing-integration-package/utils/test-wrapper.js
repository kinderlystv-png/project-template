/**
 * üß™ –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –û–ë–ï–†–¢–ö–ê –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
 * –ï–¥–∏–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –≤—Å–µ—Ö —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤
 */

import { vi, afterEach, beforeAll } from 'vitest';

/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –Ω—É–∂–Ω—É—é testing library
 */
async function getTestingLibrary() {
  try {
    // –ü—Ä–æ–±—É–µ–º React
    const reactLib = await import('@testing-library/react');
    return { type: 'react', lib: reactLib };
  } catch {
    try {
      // –ü—Ä–æ–±—É–µ–º Vue
      const vueLib = await import('@testing-library/vue');
      return { type: 'vue', lib: vueLib };
    } catch {
      try {
        // –ü—Ä–æ–±—É–µ–º Svelte 5, –∑–∞—Ç–µ–º fallback
        let svelteLib;
        try {
          svelteLib = await import('@testing-library/svelte/svelte5');
        } catch {
          svelteLib = await import('@testing-library/svelte');
        }
        return { type: 'svelte', lib: svelteLib };
      } catch {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—É—é testing library');
      }
    }
  }
}

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
 */
export async function renderWithProviders(component, options = {}) {
  const { type, lib } = await getTestingLibrary();

  switch (type) {
    case 'react':
      return lib.render(component, options);

    case 'vue':
      return lib.render(component, {
        global: {
          plugins: options.plugins || [],
        },
        ...options,
      });

    case 'svelte':
      return lib.render(component, options);

    default:
      throw new Error(`–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø: ${type}`);
  }
}

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–æ–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤
 */
export const universalMocks = {
  // –ú–æ–∫ –¥–ª—è —Ä–æ—É—Ç–µ—Ä–∞ (React/Next.js)
  router: {
    push: vi.fn(),
    replace: vi.fn(),
    pathname: '/',
    query: {},
    asPath: '/',
  },

  // –ú–æ–∫ –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤
  apiResponse: (data, status = 200) => ({
    ok: status >= 200 && status < 300,
    status,
    json: async () => data,
    text: async () => JSON.stringify(data),
  }),

  // –ú–æ–∫ –¥–ª—è localStorage
  localStorage: () => {
    const store = {};
    return {
      getItem: vi.fn(key => store[key] || null),
      setItem: vi.fn((key, value) => {
        store[key] = value;
      }),
      removeItem: vi.fn(key => {
        delete store[key];
      }),
      clear: vi.fn(() => {
        Object.keys(store).forEach(key => delete store[key]);
      }),
    };
  },

  // –ú–æ–∫ –¥–ª—è IntersectionObserver
  intersectionObserver: () =>
    vi.fn().mockImplementation(() => ({
      observe: vi.fn(),
      unobserve: vi.fn(),
      disconnect: vi.fn(),
    })),

  // –ú–æ–∫ –¥–ª—è matchMedia
  matchMedia: () =>
    vi.fn().mockImplementation(query => ({
      matches: false,
      media: query,
      onchange: null,
      addEventListener: vi.fn(),
      removeEventListener: vi.fn(),
    })),
};

/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ —Ö–µ–ª–ø–µ—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
export const testHelpers = {
  // –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  waitForLoad: async (timeout = 5000) => {
    const { lib } = await getTestingLibrary();
    return lib.waitFor(() => {}, { timeout });
  },

  // –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
  findElement: async (selector, timeout = 5000) => {
    const { lib } = await getTestingLibrary();
    return lib.waitFor(
      () => {
        const element = lib.screen.getByTestId(selector);
        if (!element) throw new Error(`–≠–ª–µ–º–µ–Ω—Ç ${selector} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        return element;
      },
      { timeout }
    );
  },

  // –°–∏–º—É–ª—è—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞
  userInput: async (element, value) => {
    const userEvent = await import('@testing-library/user-event');
    const user = userEvent.default.setup();
    await user.clear(element);
    await user.type(element, value);
  },

  // –°–∏–º—É–ª—è—Ü–∏—è –∫–ª–∏–∫–∞
  userClick: async element => {
    const userEvent = await import('@testing-library/user-event');
    const user = userEvent.default.setup();
    await user.click(element);
  },
};

/**
 * –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤
 */
export const frameworkSpecific = {
  // React/Next.js —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –º–æ–∫–∏
  react: {
    mockNextRouter: () => {
      vi.mock('next/router', () => ({
        useRouter: () => universalMocks.router,
      }));
    },

    mockNextImage: () => {
      vi.mock('next/image', () => ({
        default: ({ src, alt, ...props }) => ({
          type: 'img',
          props: { src, alt, ...props },
        }),
      }));
    },
  },

  // Vue/Nuxt —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –º–æ–∫–∏
  vue: {
    mockNuxtRouter: () => {
      global.$nuxt = {
        $router: universalMocks.router,
      };
    },

    createMockStore: (initialState = {}) => ({
      state: initialState,
      commit: vi.fn(),
      dispatch: vi.fn(),
    }),
  },

  // SvelteKit —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –º–æ–∫–∏
  svelte: {
    mockPageStore: async () => {
      const { readable } = await import('svelte/store');
      return readable({
        url: new URL('http://localhost'),
        params: {},
      });
    },

    mockNavigationStore: () => ({
      goto: vi.fn(),
      invalidate: vi.fn(),
    }),
  },
};

/**
 * –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
 */
export const testDataUtils = {
  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID
  generateId: () => crypto.randomUUID(),

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è email
  generateEmail: (prefix = 'test') => `${prefix}-${Date.now()}@example.com`,

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞—Ç—ã
  generateDate: (daysFromNow = 0) => {
    const date = new Date();
    date.setDate(date.getDate() + daysFromNow);
    return date.toISOString();
  },

  // –°–æ–∑–¥–∞–Ω–∏–µ –º–æ–∫-—Ñ—É–Ω–∫—Ü–∏–∏ —Å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
  createMockWithReturns: returnValues => {
    const mock = vi.fn();
    returnValues.forEach(value => {
      mock.mockReturnValueOnce(value);
    });
    return mock;
  },
};

/**
 * –ö–∞—Å—Ç–æ–º–Ω—ã–µ –º–∞—Ç—á–µ—Ä—ã –¥–ª—è –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
export const customMatchers = {
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç–∞
  toBeVisible: element => {
    const isVisible = element.offsetParent !== null;
    return {
      pass: isVisible,
      message: () => `–≠–ª–µ–º–µ–Ω—Ç ${isVisible ? '–≤–∏–¥–∏–º' : '–Ω–µ –≤–∏–¥–∏–º'}`,
    };
  },

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª–∞—Å—Å–∞
  toHaveClass: (element, className) => {
    const hasClass = element.classList.contains(className);
    return {
      pass: hasClass,
      message: () => `–≠–ª–µ–º–µ–Ω—Ç ${hasClass ? '–∏–º–µ–µ—Ç' : '–Ω–µ –∏–º–µ–µ—Ç'} –∫–ª–∞—Å—Å ${className}`,
    };
  },
};

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–∫–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
 */
export async function setupFrameworkMocks() {
  const { type } = await getTestingLibrary();

  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–æ–∫–∏
  global.IntersectionObserver = universalMocks.intersectionObserver();
  Object.defineProperty(window, 'matchMedia', {
    writable: true,
    value: universalMocks.matchMedia(),
  });
  Object.defineProperty(window, 'localStorage', {
    value: universalMocks.localStorage(),
  });

  // –§—Ä–µ–π–º–≤–æ—Ä–∫-—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –º–æ–∫–∏
  switch (type) {
    case 'react':
      frameworkSpecific.react.mockNextRouter();
      frameworkSpecific.react.mockNextImage();
      break;

    case 'vue':
      frameworkSpecific.vue.mockNuxtRouter();
      break;

    case 'svelte':
      // SvelteKit —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      break;
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
 */
export function setupTestEnvironment() {
  // –û—á–∏—Å—Ç–∫–∞ –º–æ–∫–æ–≤ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞
  afterEach(() => {
    vi.clearAllMocks();
  });

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–∫–æ–≤ –ø–µ—Ä–µ–¥ –≤—Å–µ–º–∏ —Ç–µ—Å—Ç–∞–º–∏
  beforeAll(async () => {
    await setupFrameworkMocks();
  });
}

// –≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö —É—Ç–∏–ª–∏—Ç –æ–¥–Ω–∏–º –æ–±—ä–µ–∫—Ç–æ–º
export default {
  renderWithProviders,
  universalMocks,
  testHelpers,
  frameworkSpecific,
  testDataUtils,
  customMatchers,
  setupTestEnvironment,
};
