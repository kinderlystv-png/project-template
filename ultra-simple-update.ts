/**
 * –ó–∞–º–µ–Ω–∞ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞
 */
/* eslint-disable no-console */
import fs from 'fs';
import path from 'path';

async function ultraSimpleUpdate() {
  console.log('üöÄ –£–ª—å—Ç—Ä–∞-–ø—Ä–æ—Å—Ç–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞...');

  const htmlPath = './eap-enhanced-analysis-test.html';
  let html = fs.readFileSync(htmlPath, 'utf8');

  console.log('üîç –ó–∞–º–µ–Ω—è–µ–º "2 checkers" –Ω–∞ "5 checkers"...');

  const before = html.includes('2 checkers');
  console.log(`Before: —Å–æ–¥–µ—Ä–∂–∏—Ç "2 checkers"? ${before}`);

  if (before) {
    html = html.replace('2 checkers', '5 checkers');

    fs.writeFileSync(htmlPath, html);
    const after = fs.readFileSync(htmlPath, 'utf8').includes('5 checkers');
    console.log(`After: —Å–æ–¥–µ—Ä–∂–∏—Ç "5 checkers"? ${after}`);

    if (after) {
      console.log('‚úÖ –ó–∞–º–µ–Ω–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!');

      // –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ
      const { exec } = await import('child_process');
      const { promisify } = await import('util');
      const execAsync = promisify(exec);

      const absolutePath = path.resolve(htmlPath);
      await execAsync(`start "" "${absolutePath}"`);

      console.log('üåê –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–∫—Ä—ã—Ç–∞ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!');
    } else {
      console.log('‚ùå –ó–∞–º–µ–Ω–∞ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞');
    }
  } else {
    console.log('‚ùå "2 checkers" –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Ñ–∞–π–ª–µ');
  }
}

ultraSimpleUpdate().catch(console.error);
