/* eslint-disable no-console */
/**
 * üéØ –ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã —Ç–æ—á–Ω–æ—Å—Ç–∏ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞–º–∏ EAP
 *
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –∑–∞–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Å—Ç—ã–µ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–æ—á–Ω–æ—Å—Ç–∏
 * –Ω–∞ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—É—é —Å–∏—Å—Ç–µ–º—É —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º —Ä–∞—Å—á–µ—Ç–æ–º –∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è–º–∏
 */

import type { AccuracyComponents } from './src/metrics/accuracy-interfaces.ts';
import { AccuracyCalculator } from './src/metrics/accuracy-calculator.ts';

// === –°–¢–ê–†–´–ô –°–ü–û–°–û–ë (–ø—Ä–æ—Å—Ç—ã–µ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è) ===

class OldStructureChecker {
  calculateAccuracy(fileCount: number): number {
    // –°—Ç–∞—Ä–∞—è –ø—Ä–æ—Å—Ç–∞—è —Ñ–æ—Ä–º—É–ª–∞: 85% + –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤/10 ¬± —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å
    const baseAccuracy = 85;
    const fileBonus = Math.min(10, fileCount / 10);
    const randomFactor = (Math.random() - 0.5) * 10; // ¬±5%

    return Math.max(45, Math.min(98, baseAccuracy + fileBonus + randomFactor));
  }
}

// === –ù–û–í–´–ô –°–ü–û–°–û–ë (–ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è —Å–∏—Å—Ç–µ–º–∞) ===

class NewStructureChecker {
  private accuracyCalculator: AccuracyCalculator;

  constructor() {
    this.accuracyCalculator = new AccuracyCalculator();
  }

  async calculateAccuracy(projectPath: string): Promise<{
    accuracy: number;
    confidenceInterval: { lower: number; upper: number };
    explanation: string;
    components: AccuracyComponents;
    recommendations: string[];
  }> {
    const result = await this.accuracyCalculator.calculateAccuracyForAnalyzer(
      'structure',
      projectPath
    );

    return {
      accuracy: result.overall,
      confidenceInterval: result.confidenceInterval,
      explanation: result.explanation,
      components: result.components,
      recommendations: result.recommendations || [],
    };
  }

  /**
   * –°–æ–≤–º–µ—Å—Ç–∏–º–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç–∞—Ä–æ–≥–æ API (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ)
   */
  async calculateSimpleAccuracy(projectPath: string): Promise<number> {
    const result = await this.calculateAccuracy(projectPath);
    return result.accuracy;
  }
}

// === –ü–†–ò–ú–ï–† –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø ===

async function demonstrateImprovement() {
  console.log('üìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–π –∏ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã —Ç–æ—á–Ω–æ—Å—Ç–∏\n');

  // –°—Ç–∞—Ä–∞—è —Å–∏—Å—Ç–µ–º–∞
  const oldChecker = new OldStructureChecker();
  const oldAccuracy = oldChecker.calculateAccuracy(100); // –ü–µ—Ä–µ–¥–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤
  console.log('üî∏ –°—Ç–∞—Ä–∞—è —Å–∏—Å—Ç–µ–º–∞:');
  console.log(`   –¢–æ—á–Ω–æ—Å—Ç—å: ${oldAccuracy.toFixed(1)}%`);
  console.log('   –û–±—ä—è—Å–Ω–µ–Ω–∏–µ: –ü—Ä–æ—Å—Ç–∞—è —Ñ–æ—Ä–º—É–ª–∞ –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞');
  console.log('   –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã: –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ');
  console.log('   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç\n');

  // –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞
  const newChecker = new NewStructureChecker();
  const newResult = await newChecker.calculateAccuracy(process.cwd());

  console.log('üîπ –ù–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞:');
  console.log(`   –¢–æ—á–Ω–æ—Å—Ç—å: ${newResult.accuracy}%`);
  console.log(
    `   –î–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: ${newResult.confidenceInterval.lower}% - ${newResult.confidenceInterval.upper}%`
  );
  console.log(`   –û–±—ä—è—Å–Ω–µ–Ω–∏–µ: ${newResult.explanation}`);
  console.log('   –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:');
  console.log(`     ‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö: ${newResult.components.dataQuality.score.toFixed(1)}%`);
  console.log(`     ‚Ä¢ –ì–ª—É–±–∏–Ω–∞ –∞–Ω–∞–ª–∏–∑–∞: ${newResult.components.analysisDepth.score.toFixed(1)}%`);
  console.log(
    `     ‚Ä¢ –ù–∞–¥—ë–∂–Ω–æ—Å—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤: ${newResult.components.algorithmReliability.score.toFixed(1)}%`
  );
  console.log(
    `     ‚Ä¢ –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å: ${newResult.components.historicalCorrectness?.score.toFixed(1)}%`
  );
  console.log('   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
  newResult.recommendations.forEach((rec, i) => {
    console.log(`     ${i + 1}. ${rec}`);
  });

  console.log('\n‚ú® –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã:');
  console.log('   ‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Ç–æ—á–Ω–æ—Å—Ç–∏');
  console.log('   ‚Ä¢ –û–±—ä—è—Å–Ω–µ–Ω–∏—è –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏');
  console.log('   ‚Ä¢ –î–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã');
  console.log('   ‚Ä¢ –ê–¥–∞–ø—Ç–∞—Ü–∏—è –∫ —Å–ø–µ—Ü–∏—Ñ–∏–∫–µ –ø—Ä–æ–µ–∫—Ç–∞');
  console.log('   ‚Ä¢ –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Å–ª—É—á–∞–π–Ω–æ—Å—Ç–∏');
}

// === –ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ú–ò–ì–†–ê–¶–ò–ò ===

console.log(`
üîÑ **–ò–ù–°–¢–†–£–ö–¶–ò–Ø –ü–û –ú–ò–ì–†–ê–¶–ò–ò**

1. **–ó–∞–º–µ–Ω–∏—Ç–µ –ø—Ä–æ—Å—Ç—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞—Å—á–µ—Ç–∞ —Ç–æ—á–Ω–æ—Å—Ç–∏:**
   \`\`\`typescript
   // –ë—ã–ª–æ:
   const accuracy = 85 + Math.random() * 10;

   // –°—Ç–∞–ª–æ:
   const calculator = new AccuracyCalculator();
   const result = await calculator.calculateAccuracyForAnalyzer('structure', projectPath);
   const accuracy = result.overall;
   \`\`\`

2. **–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:**
   \`\`\`typescript
   // –ü–æ–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ç–æ—á–Ω–æ—Å—Ç–∏
   console.log('–ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö:', result.components.dataQuality.score);
   console.log('–û–±—ä—è—Å–Ω–µ–Ω–∏–µ:', result.explanation);
   console.log('–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:', result.recommendations);
   \`\`\`

3. **–ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ –≤ HTML –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:**
   \`\`\`html
   <div class="accuracy-breakdown">
     <div class="overall">–¢–æ—á–Ω–æ—Å—Ç—å: \${accuracy}% (¬±\${interval}%)</div>
     <div class="components">
       <div>–î–∞–Ω–Ω—ã–µ: \${dataQuality}%</div>
       <div>–ê–Ω–∞–ª–∏–∑: \${analysisDepth}%</div>
       <div>–ê–ª–≥–æ—Ä–∏—Ç–º—ã: \${reliability}%</div>
     </div>
     <div class="explanation">\${explanation}</div>
   </div>
   \`\`\`

4. **–î–æ–±–∞–≤—å—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏:**
   - SecurityAccuracyProvider
   - TestingAccuracyProvider
   - PerformanceAccuracyProvider
   - DocumentationAccuracyProvider
   - AIInsightsAccuracyProvider
`);

// –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
demonstrateImprovement().catch(console.error);
