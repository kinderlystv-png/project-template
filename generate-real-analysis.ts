/**
 * –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è eap-enhanced-analysis-test.html
 * –ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ –Ω–∞—Å—Ç–æ—è—â–µ–º—É AnalysisOrchestrator –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
 */
/* eslint-disable no-console */
import { EapDebugger } from './eap-debugger/src/EapDebugger.js';
import path from 'path';
import fs from 'fs';

async function generateRealAnalysisPage() {
  console.log('üöÄ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ä–µ–∞–ª—å–Ω–æ–º—É AnalysisOrchestrator...');

  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä
    const { AnalysisOrchestrator } = await import('./eap-analyzer/src/core/orchestrator.js');

    console.log('‚úÖ AnalysisOrchestrator –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ');

    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Ä–µ–∞–ª—å–Ω–æ–≥–æ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const realOrchestrator = new AnalysisOrchestrator();
    console.log('‚úÖ –≠–∫–∑–µ–º–ø–ª—è—Ä –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å–æ–∑–¥–∞–Ω');

    // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
    const eapDebugger = new EapDebugger();
    const registration = eapDebugger.getComponentRegistration(realOrchestrator as any);

    console.log('üìä –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:');
    console.log(`  - –ß–µ–∫–µ—Ä–æ–≤: ${registration.checkers.length}`);
    console.log(`  - –ú–æ–¥—É–ª–µ–π: ${registration.modules.length}`);
    console.log(`  - –í—Å–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: ${registration.totalCount}`);

    // –í—ã–≤–æ–¥–∏–º –¥–µ—Ç–∞–ª–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    console.log('\nüîß –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–µ–∫–µ—Ä—ã:');
    registration.checkers.forEach(checker => {
      console.log(`  - ${checker.name} (${checker.type}): ${checker.metadata.className}`);
    });

    console.log('\n‚öôÔ∏è –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏:');
    registration.modules.forEach(module => {
      console.log(`  - ${module.name} (${module.type}): ${module.metadata.className}`);
    });

    // –ß–∏—Ç–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π HTML —Ñ–∞–π–ª
    const originalHtmlPath = './eap-enhanced-analysis-test.html';
    let htmlContent = fs.readFileSync(originalHtmlPath, 'utf8');

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ HTML
    htmlContent = htmlContent.replace(
      /<div class="stat-number">3<\/div>/g,
      `<div class="stat-number">${registration.totalCount}</div>`
    );

    htmlContent = htmlContent.replace(
      /<div class="stat-number">2<\/div>/g,
      `<div class="stat-number">${registration.checkers.length}</div>`
    );

    htmlContent = htmlContent.replace(
      /<div class="stat-number">1<\/div>/g,
      `<div class="stat-number">${registration.modules.length}</div>`
    );

    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ HTML
    const checkersHtml = generateCheckersHtml(registration.checkers);
    const modulesHtml = generateModulesHtml(registration.modules);

    // –ó–∞–º–µ–Ω—è–µ–º —Å–µ–∫—Ü–∏—é —á–µ–∫–µ—Ä–æ–≤
    htmlContent = htmlContent.replace(
      /(<div class="section-header">üîß –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–µ–∫–µ—Ä—ã \(\d+\)<\/div>[\s\S]*?)(<div class="section">)/,
      `<div class="section-header">üîß –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–µ–∫–µ—Ä—ã (${registration.checkers.length})</div>\n${checkersHtml}\n$2`
    );

    // –ó–∞–º–µ–Ω—è–µ–º —Å–µ–∫—Ü–∏—é –º–æ–¥—É–ª–µ–π
    htmlContent = htmlContent.replace(
      /(<div class="section-header">üì¶ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏ \(\d+\)<\/div>[\s\S]*?)(<div class="test-section">)/,
      `<div class="section-header">üì¶ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏ (${registration.modules.length})</div>\n${modulesHtml}\n$2`
    );

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    const timestamp = new Date().toLocaleString('ru-RU');
    htmlContent = htmlContent.replace(
      /–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: [\d\.,\s:]+/g,
      `–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${timestamp}`
    );

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π HTML
    fs.writeFileSync(originalHtmlPath, htmlContent);
    console.log(`\n‚úÖ –§–∞–π–ª ${originalHtmlPath} –æ–±–Ω–æ–≤–ª–µ–Ω —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏!`);
    console.log(`üìä –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${registration.totalCount} –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤`);

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ
    console.log('üåê –û—Ç–∫—Ä—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ...');
    const { exec } = await import('child_process');
    const { promisify } = await import('util');
    const execAsync = promisify(exec);

    const absolutePath = path.resolve(originalHtmlPath);
    await execAsync(`start "" "${absolutePath}"`);

    console.log('üéâ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç–∞!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', error);
    console.error('–î–µ—Ç–∞–ª–∏:', error.message);
  }
}

function generateCheckersHtml(checkers) {
  if (checkers.length === 0) {
    return '<div class="component-list"><div class="no-components">–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —á–µ–∫–µ—Ä–æ–≤</div></div>';
  }

  const checkersHtml = checkers
    .map(
      checker => `
      <div class="component-card checker">
        <div class="component-header">
          <span class="component-icon">üîç</span>
          <div class="component-info">
            <h3 class="component-name">${checker.name}</h3>
            <span class="component-type">${checker.category}</span>
          </div>
        </div>
        <div class="component-details">
          <div class="component-id"><strong>ID:</strong> ${checker.id}</div>
          <div class="component-active"><strong>–ê–∫—Ç–∏–≤–µ–Ω:</strong> ${checker.isActive ? '–î–∞' : '–ù–µ—Ç'}</div>
          <div class="component-registered"><strong>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:</strong> ${checker.registeredAt.toLocaleString('ru-RU')}</div>

          <div class="component-metadata">
            <strong>–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:</strong>
            <pre>${JSON.stringify(checker.metadata, null, 2)}</pre>
          </div>
        </div>
      </div>`
    )
    .join('\n');

  return `<div class="component-list">${checkersHtml}</div>`;
}

function generateModulesHtml(modules) {
  if (modules.length === 0) {
    return '<div class="component-list"><div class="no-components">–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥—É–ª–µ–π</div></div>';
  }

  const modulesHtml = modules
    .map(
      module => `
      <div class="component-card module">
        <div class="component-header">
          <span class="component-icon">‚öôÔ∏è</span>
          <div class="component-info">
            <h3 class="component-name">${module.name}</h3>
            <span class="component-type">${module.category}</span>
          </div>
        </div>
        <div class="component-details">
          <div class="component-id"><strong>ID:</strong> ${module.id}</div>
          <div class="component-active"><strong>–ê–∫—Ç–∏–≤–µ–Ω:</strong> ${module.isActive ? '–î–∞' : '–ù–µ—Ç'}</div>
          <div class="component-registered"><strong>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:</strong> ${module.registeredAt.toLocaleString('ru-RU')}</div>

          <div class="component-metadata">
            <strong>–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:</strong>
            <pre>${JSON.stringify(module.metadata, null, 2)}</pre>
          </div>
        </div>
      </div>`
    )
    .join('\n');

  return `<div class="component-list">${modulesHtml}</div>`;
}

// –ó–∞–ø—É—Å–∫
generateRealAnalysisPage().catch(console.error);
