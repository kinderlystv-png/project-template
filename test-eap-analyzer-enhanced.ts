/**
 * Test script for enhanced EAP analyzer with actual project analysis
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç—É –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º –ø—Ä–æ–µ–∫—Ç–æ–º C:\kinderly-events
 */

import { EapDebugger } from './eap-debugger/src/EapDebugger';
import { ComponentRegistry } from './eap-analyzer/src/core/ComponentRegistry';
import { ConfigLoader } from './eap-analyzer/src/utils/ConfigLoader';
import { CheckContext } from './eap-analyzer/src/types/Context';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

async function testEnhancedAnalyzer(): Promise<void> {
  console.log('üöÄ Starting enhanced EAP analyzer test with real project analysis...');

  try {
    // 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–µ—Å—Ç—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    console.log('\nüìã Initializing component registry...');
    const registry = new ComponentRegistry();

    // 2. –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    console.log('üìÇ Loading configuration...');
    const configPath = path.join(__dirname, 'eap-analyzer', 'config', 'default.config.json');
    const config = await ConfigLoader.loadConfig(configPath);
    console.log(`‚úÖ Configuration loaded: ${config.checkers.length} checkers configured`);

    // 3. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    console.log('\nüîß Registering components...');
    await registry.loadCheckers(config);

    const registrationInfo = registry.getRegistrationInfo();
    console.log(
      `‚úÖ Registry status: ${registrationInfo.checkersCount} checkers, ${registrationInfo.modulesCount} modules`
    );
    console.log(`üìÖ Last updated: ${registrationInfo.lastUpdated.toLocaleString('ru-RU')}`);

    // 4. –°–æ–∑–¥–∞–Ω–∏–µ –¥–µ–±–∞–≥–≥–µ—Ä–∞
    console.log('\nüîç Creating EAP debugger...');
    const eapDebugger = new EapDebugger();

    // 5. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    const projectPath = 'C:\\kinderly-events';
    console.log(`\nüìÅ Preparing analysis context for project: ${projectPath}`);

    const context: CheckContext = {
      projectPath: projectPath,
      outputPath: path.join(__dirname, 'reports'),
      config: config,
      timestamp: new Date(),
    };

    // 6. –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ —Å –ø–æ–∫–∞–∑–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    console.log('\nüéØ Running analysis and generating HTML report...');
    await eapDebugger.runAnalysisAndShow(context);

    console.log('\n‚úÖ Enhanced EAP analyzer test completed successfully!');
    console.log('üìä Check the opened HTML report for detailed analysis results');
  } catch (error) {
    console.error('\n‚ùå Test failed:', error);
    if (error instanceof Error) {
      console.error('Error details:', error.message);
      console.error('Stack trace:', error.stack);
    }
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testEnhancedAnalyzer().catch(console.error);
