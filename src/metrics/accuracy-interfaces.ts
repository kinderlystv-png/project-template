/**
 * üìä –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Ç–æ—á–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑–∞
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∞—Å—á—ë—Ç —Ç–æ—á–Ω–æ—Å—Ç–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
 */

// === –ë–ê–ó–û–í–´–ï –ú–ï–¢–†–ò–ö–ò –ü–†–û–ï–ö–¢–ê ===
export interface ProjectMetrics {
  // –§–∞–π–ª–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
  totalFiles: number;
  totalLines: number;
  averageFileSize: number;
  directoryDepth: number;
  fileTypeDistribution: Record<string, number>;

  // –°–ª–æ–∂–Ω–æ—Å—Ç—å
  averageCyclomaticComplexity: number;
  maxCyclomaticComplexity: number;
  complexityDistribution: { low: number; medium: number; high: number };

  // –ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞
  duplicationPercentage: number;
  testCoverageEstimate: number;
  documentationCoverage: number;

  // –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
  architecturalPatterns: string[];
  layerCompliance: number;
  separationOfConcerns: number;

  // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
  dependencyCount: number;
  vulnerabilityCount: number;
  outdatedDependencies: number;

  // –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
  largeFileCount: number;
  performanceHotspots: number;

  // AI –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–æ–ª–≥
  antiPatternCount: number;
  goodPatternCount: number;
  technicalDebtIndex: number;
}

// === –ö–û–ú–ü–û–ù–ï–ù–¢–´ –¢–û–ß–ù–û–°–¢–ò ===
export interface AccuracyComponents {
  dataQuality: {
    score: number;
    confidence: number;
    factors: string[];
  };
  analysisDepth: {
    score: number;
    coverage: number;
    factors: string[];
  };
  algorithmReliability: {
    score: number;
    stability: number;
    factors: string[];
  };
  historicalCorrectness?: {
    score: number;
    trend: 'improving' | 'stable' | 'declining';
    factors: string[];
  };
}

// === –†–ï–ó–£–õ–¨–¢–ê–¢ –†–ê–°–ß–Å–¢–ê –¢–û–ß–ù–û–°–¢–ò ===
export interface AccuracyResult {
  overall: number;
  confidenceInterval: {
    lower: number;
    upper: number;
  };
  components: AccuracyComponents;
  explanation: string;
  recommendations?: string[];
}

// === –ü–†–û–í–ê–ô–î–ï–† –¢–û–ß–ù–û–°–¢–ò ===
export interface AccuracyProvider {
  analyzerType:
    | 'structure'
    | 'security'
    | 'testing'
    | 'performance'
    | 'documentation'
    | 'ai-insights'
    | 'technical-debt';

  /**
   * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–µ—Ç—Ä–∏–∫ –ø—Ä–æ–µ–∫—Ç–∞
   */
  calculateAccuracy(metrics: ProjectMetrics, projectPath: string): Promise<AccuracyResult>;

  /**
   * –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
   */
  extractSpecificMetrics(
    metrics: ProjectMetrics,
    projectPath: string
  ): Promise<Record<string, unknown>>;

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –≤–µ—Å–æ–≤—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤
   */
  getMetricWeights(): Record<string, number>;

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∞–Ω–∞–ª–∏–∑—É
   */
  isReady(): boolean;
}

// === –ë–ê–ó–û–í–´–ô –ü–†–û–í–ê–ô–î–ï–† ===
export abstract class BaseAccuracyProvider implements AccuracyProvider {
  abstract analyzerType: AccuracyProvider['analyzerType'];

  protected baseAccuracy = 75; // –ë–∞–∑–æ–≤–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  protected maxAccuracy = 98; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–æ—Å—Ç–∏–∂–∏–º–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å
  protected minAccuracy = 45; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å

  abstract calculateAccuracy(metrics: ProjectMetrics, projectPath: string): Promise<AccuracyResult>;
  abstract extractSpecificMetrics(
    metrics: ProjectMetrics,
    projectPath: string
  ): Promise<Record<string, unknown>>;
  abstract getMetricWeights(): Record<string, number>;

  isReady(): boolean {
    return true;
  }

  /**
   * –ó–∞—â–∏—â—ë–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –¥–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞
   */
  protected calculateConfidenceInterval(
    accuracy: number,
    uncertainty: number
  ): { lower: number; upper: number } {
    const margin = uncertainty * 0.01 * accuracy; // uncertainty –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
    return {
      lower: Math.max(this.minAccuracy, Math.round(accuracy - margin)),
      upper: Math.min(this.maxAccuracy, Math.round(accuracy + margin)),
    };
  }

  /**
   * –ó–∞—â–∏—â—ë–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ü–µ–Ω–∫–∏ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω
   */
  protected normalizeScore(score: number, min: number = 0, max: number = 100): number {
    return Math.max(
      this.minAccuracy,
      Math.min(
        this.maxAccuracy,
        this.baseAccuracy + ((score - min) / (max - min)) * (this.maxAccuracy - this.baseAccuracy)
      )
    );
  }
}

// === –§–ê–ë–†–ò–ö–ê –ü–†–û–í–ê–ô–î–ï–†–û–í ===
export interface AccuracyProviderFactory {
  /**
   * –°–æ–∑–¥–∞—ë—Ç –ø—Ä–æ–≤–∞–π–¥–µ—Ä —Ç–æ—á–Ω–æ—Å—Ç–∏ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
   */
  createProvider(analyzerType: AccuracyProvider['analyzerType']): AccuracyProvider;

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ç–∏–ø–æ–≤ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–≤
   */
  getSupportedTypes(): AccuracyProvider['analyzerType'][];
}

// === –ö–ê–õ–¨–ö–£–õ–Ø–¢–û–† –¢–û–ß–ù–û–°–¢–ò ===
export interface AccuracyCalculator {
  /**
   * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ç–æ—á–Ω–æ—Å—Ç—å –¥–ª—è –≤—Å–µ—Ö –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–≤
   */
  calculateForAllAnalyzers(
    metrics: ProjectMetrics,
    projectPath: string
  ): Promise<Map<string, AccuracyResult>>;

  /**
   * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ç–æ—á–Ω–æ—Å—Ç—å –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
   */
  calculateForAnalyzer(
    analyzerType: AccuracyProvider['analyzerType'],
    metrics: ProjectMetrics,
    projectPath: string
  ): Promise<AccuracyResult>;

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–æ—á–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
   */
  getProjectAccuracyStats(results: Map<string, AccuracyResult>): {
    averageAccuracy: number;
    reliabilityIndex: number;
    mostReliableAnalyzer: string;
    leastReliableAnalyzer: string;
  };
}

// === –¢–ò–ü–´ –î–õ–Ø –†–ê–°–®–ò–†–ï–ù–ò–Ø ===
export interface EnhancedAnalysisResult {
  // –ë–∞–∑–æ–≤—ã–µ –ø–æ–ª—è –∏–∑ AnalysisResult
  componentName: string;
  version: string;
  type: 'checker' | 'module';
  status: 'success' | 'error' | 'warning';
  accuracy: number;
  executionTime: number;
  overallScore: string;

  // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Ç–æ—á–Ω–æ—Å—Ç—å
  accuracyDetails?: AccuracyResult;
}
