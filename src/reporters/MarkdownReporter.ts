/**
 * üìù EAP ANALYZER v6.0 - MARKDOWN REPORTER
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown
 */

import type { ReportData, ReportConfig, IReporter } from './types.js';

export class MarkdownReporter implements IReporter {
  async generate(data: ReportData, config: ReportConfig): Promise<string> {
    const markdown = this.generateMarkdown(data, config);

    if (config.outputPath) {
      const fs = await import('fs/promises');
      const path = await import('path');

      const outputFile = path.join(config.outputPath, 'eap-analysis-report.md');
      await fs.writeFile(outputFile, markdown, 'utf8');

      return outputFile;
    }

    return markdown;
  }

  getDefaultConfig(): ReportConfig {
    return {
      format: 'markdown',
      includeDetails: true,
      includeRecommendations: true,
      interactive: false,
      minifyOutput: false,
    };
  }

  getSupportedFormats(): string[] {
    return ['markdown', 'md'];
  }

  private generateMarkdown(data: ReportData, config: ReportConfig): string {
    const sections: string[] = [];

    // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—á–µ—Ç–∞
    sections.push(this.generateHeader(data));

    // –°–≤–æ–¥–∫–∞
    sections.push(this.generateSummary(data));

    // –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    sections.push(this.generateCategories(data, config));

    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if (config.includeRecommendations && data.recommendations.length > 0) {
      sections.push(this.generateRecommendations(data));
    }

    // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    sections.push(this.generateTechnicalInfo(data));

    // –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    sections.push(this.generatePerformanceMetrics(data));

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    sections.push(this.generateSecurityInfo(data));

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    sections.push(this.generateTestingInfo(data));

    // –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    sections.push(this.generateMetadata(data));

    return sections.join('\\n\\n---\\n\\n');
  }

  private generateHeader(data: ReportData): string {
    const date = new Date(data.timestamp);
    const formattedDate = date.toLocaleString('ru-RU');

    return `# üîç EAP Analyzer Report

**–ü—Ä–æ–µ–∫—Ç:** \`${data.projectPath}\`
**–î–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:** ${formattedDate}
**–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä:** EAP Analyzer v${data.metadata.version}

> –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–µ–∫—Ç–∞`;
  }

  private generateSummary(data: ReportData): string {
    const { summary } = data;
    const statusEmoji = this.getStatusEmoji(summary.status);
    const statusText = this.getStatusText(summary.status);

    return `## üìä –û–±—â–∞—è —Å–≤–æ–¥–∫–∞

| –ú–µ—Ç—Ä–∏–∫–∞ | –ó–Ω–∞—á–µ–Ω–∏–µ | –°—Ç–∞—Ç—É—Å |
|---------|----------|--------|
| **–û–±—â–∞—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å** | **${summary.totalReadiness}%** | ${statusEmoji} ${statusText} |
| –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ | ${summary.componentsCount} | üß© |
| –ü—Ä–æ–±–ª–µ–º –Ω–∞–π–¥–µ–Ω–æ | ${summary.issuesCount} | ${summary.issuesCount > 10 ? '‚ö†Ô∏è' : '‚úÖ'} |
| –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π | ${summary.recommendationsCount} | üí° |
| –ö—Ä–∏—Ç–∏—á–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º | ${summary.criticalIssues} | ${summary.criticalIssues > 0 ? 'üö®' : '‚úÖ'} |

### üìà –ü—Ä–æ–≥—Ä–µ—Å—Å-–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
\`\`\`
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà${summary.totalReadiness >= 80 ? '‚ñà‚ñà‚ñà‚ñà' : summary.totalReadiness >= 60 ? '‚ñà‚ñà‚ñà' : summary.totalReadiness >= 40 ? '‚ñà‚ñà' : '‚ñà'}‚ñë‚ñë‚ñë‚ñë ${summary.totalReadiness}%
\`\`\``;
  }

  private generateCategories(data: ReportData, config: ReportConfig): string {
    const sections: string[] = ['## üìÇ –ê–Ω–∞–ª–∏–∑ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º'];

    data.categories.forEach(category => {
      sections.push(this.generateCategorySection(category, config));
    });

    return sections.join('\\n\\n');
  }

  private generateCategorySection(category: any, config: ReportConfig): string {
    const statusEmoji = this.getStatusEmoji(category.status);
    const statusText = this.getStatusText(category.status);

    let section = `### ${this.getCategoryEmoji(category.slug)} ${category.name}

**–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å:** ${category.readiness}% ${statusEmoji}
**–°—Ç–∞—Ç—É—Å:** ${statusText}
**–û–ø–∏—Å–∞–Ω–∏–µ:** ${category.description}`;

    if (config.includeDetails && category.components.length > 0) {
      section += '\\n\\n#### üîß –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã\\n';

      category.components.forEach((component: any) => {
        section += this.generateComponentMarkdown(component, config);
      });
    }

    return section;
  }

  private generateComponentMarkdown(component: any, _config: ReportConfig): string {
    const statusEmoji = this.getStatusEmoji(component.status);

    let markdown = `
##### ${component.name} (${component.readiness}% ${statusEmoji})

| –ü–∞—Ä–∞–º–µ—Ç—Ä | –ó–Ω–∞—á–µ–Ω–∏–µ |
|----------|----------|
| –§–∞–π–ª–æ–≤ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ | ${component.details.filesAnalyzed} |
| –°—Ç—Ä–æ–∫ –∫–æ–¥–∞ | ${component.details.linesOfCode.toLocaleString()} |
| –¢–µ—Å—Ç–æ–≤ | ${component.details.testsCount} |
| –ü–æ–∫—Ä—ã—Ç–∏–µ | ${component.details.coverage ? component.details.coverage + '%' : 'N/A'} |
| –ü—Ä–æ–±–ª–µ–º | ${component.issues.length} |`;

    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º—ã –µ—Å–ª–∏ –µ—Å—Ç—å
    if (component.issues.length > 0) {
      markdown += '\\n\\n**üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:**\\n';

      component.issues.forEach((issue: any) => {
        const severityEmoji = this.getSeverityEmoji(issue.severity);
        markdown += `\\n- ${severityEmoji} **${issue.type.toUpperCase()}:** ${issue.message}`;
        if (issue.file) {
          markdown += `\\n  - üìÅ \`${issue.file}\`${issue.line ? `:${issue.line}` : ''}`;
        }
        if (issue.suggestion) {
          markdown += `\\n  - üí° *–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:* ${issue.suggestion}`;
        }
      });
    }

    // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
    if (component.recommendations.length > 0) {
      markdown += '\\n\\n**üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**\\n';
      component.recommendations.forEach((rec: string) => {
        markdown += `\\n- ${rec}`;
      });
    }

    return markdown;
  }

  private generateRecommendations(data: ReportData): string {
    let section = `## üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é

–ù–∞–π–¥–µ–Ω–æ **${data.recommendations.length}** —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞:

| –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç | –ö–∞—Ç–µ–≥–æ—Ä–∏—è | –ó–∞–≥–æ–ª–æ–≤–æ–∫ | –í—Ä–µ–º—è |
|-----------|-----------|-----------|-------|`;

    data.recommendations.forEach(rec => {
      const priorityEmoji = this.getPriorityEmoji(rec.priority);
      section += `\\n| ${priorityEmoji} ${rec.priority.toUpperCase()} | ${rec.category} | ${rec.title} | ${rec.estimatedTime} |`;
    });

    section += '\\n\\n### üìã –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\\n';

    data.recommendations.forEach((rec, index) => {
      const priorityEmoji = this.getPriorityEmoji(rec.priority);
      section += `
#### ${index + 1}. ${rec.title} ${priorityEmoji}

**–ö–∞—Ç–µ–≥–æ—Ä–∏—è:** ${rec.category} ‚Üí ${rec.component}
**–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:** ${rec.priority.toUpperCase()}
**–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:** ${rec.estimatedTime}
**–û–∂–∏–¥–∞–µ–º—ã–π —ç—Ñ—Ñ–µ–∫—Ç:** ${rec.impact}

**–û–ø–∏—Å–∞–Ω–∏–µ:**
${rec.description}

**–î–µ–π—Å—Ç–≤–∏–µ:**
${rec.action}`;
    });

    return section;
  }

  private generateTechnicalInfo(data: ReportData): string {
    return `## ‚öôÔ∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è

### üèóÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
- **–í—Å–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:** ${data.summary.componentsCount}
- **–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–≤ –∞–∫—Ç–∏–≤–Ω–æ:** ${data.categories.length}
- **–í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞:** ${Math.round(data.metadata.totalAnalysisTime / 1000)}—Å

### üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
- **–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª:** \`${data.metadata.configUsed}\`
- **–í–µ—Ä—Å–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞:** ${data.metadata.version}
- **–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:** ${data.metadata.os}
- **Node.js:** ${data.metadata.nodeVersion}`;
  }

  private generatePerformanceMetrics(data: ReportData): string {
    const { performance } = data;
    const bundleSizeMB = (performance.bundleSize.total / 1024 / 1024).toFixed(2);
    const gzippedSizeMB = (performance.bundleSize.gzipped / 1024 / 1024).toFixed(2);
    const buildTimeSec = (performance.buildTime / 1000).toFixed(1);

    let section = `## ‚ö° –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

### üì¶ –†–∞–∑–º–µ—Ä –±–∞–Ω–¥–ª–∞
- **–û–±—â–∏–π —Ä–∞–∑–º–µ—Ä:** ${bundleSizeMB} MB
- **–°–∂–∞—Ç—ã–π (gzip):** ${gzippedSizeMB} MB
- **–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∂–∞—Ç–∏—è:** ${((1 - performance.bundleSize.gzipped / performance.bundleSize.total) * 100).toFixed(1)}%

### ‚è±Ô∏è –í—Ä–µ–º—è —Å–±–æ—Ä–∫–∏
- **–í—Ä–µ–º—è —Å–±–æ—Ä–∫–∏:** ${buildTimeSec}—Å
- **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:** ${(performance.memoryUsage / 1024 / 1024).toFixed(0)} MB`;

    if (performance.coreWebVitals) {
      section += `

### üåê Core Web Vitals
| –ú–µ—Ç—Ä–∏–∫–∞ | –ó–Ω–∞—á–µ–Ω–∏–µ | –°—Ç–∞—Ç—É—Å |
|---------|----------|--------|
| **LCP** (Largest Contentful Paint) | ${performance.coreWebVitals.lcp}s | ${performance.coreWebVitals.lcp <= 2.5 ? '‚úÖ –•–æ—Ä–æ—à–æ' : performance.coreWebVitals.lcp <= 4 ? '‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è' : '‚ùå –ü–ª–æ—Ö–æ'} |
| **FID** (First Input Delay) | ${performance.coreWebVitals.fid}ms | ${performance.coreWebVitals.fid <= 100 ? '‚úÖ –•–æ—Ä–æ—à–æ' : performance.coreWebVitals.fid <= 300 ? '‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è' : '‚ùå –ü–ª–æ—Ö–æ'} |
| **CLS** (Cumulative Layout Shift) | ${performance.coreWebVitals.cls} | ${performance.coreWebVitals.cls <= 0.1 ? '‚úÖ –•–æ—Ä–æ—à–æ' : performance.coreWebVitals.cls <= 0.25 ? '‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è' : '‚ùå –ü–ª–æ—Ö–æ'} |
| **FCP** (First Contentful Paint) | ${performance.coreWebVitals.fcp}s | ${performance.coreWebVitals.fcp <= 1.8 ? '‚úÖ –•–æ—Ä–æ—à–æ' : performance.coreWebVitals.fcp <= 3 ? '‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è' : '‚ùå –ü–ª–æ—Ö–æ'} |
| **TTFB** (Time to First Byte) | ${performance.coreWebVitals.ttfb}ms | ${performance.coreWebVitals.ttfb <= 600 ? '‚úÖ –•–æ—Ä–æ—à–æ' : performance.coreWebVitals.ttfb <= 1500 ? '‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è' : '‚ùå –ü–ª–æ—Ö–æ'} |`;
    }

    return section;
  }

  private generateSecurityInfo(data: ReportData): string {
    const { security } = data;

    return `## üîí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å

### üìä –û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: ${security.securityScore}/100

| –ö–æ–º–ø–æ–Ω–µ–Ω—Ç | –°—Ç–∞—Ç—É—Å |
|-----------|--------|
| **Content Security Policy** | ${this.getSecurityStatusEmoji(security.cspStatus)} ${security.cspStatus} |
| **HTTPS** | ${this.getSecurityStatusEmoji(security.httpsStatus)} ${security.httpsStatus} |
| **–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è** | ${this.getSecurityStatusEmoji(security.authenticationStatus)} ${security.authenticationStatus} |
| **–ó–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö** | ${this.getSecurityStatusEmoji(security.dataProtectionStatus)} ${security.dataProtectionStatus} |

### üö® –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏: ${security.vulnerabilities.length}

${
  security.vulnerabilities.length > 0
    ? security.vulnerabilities
        .map(
          (vuln: any, index: number) =>
            `${index + 1}. **${vuln.type.toUpperCase()}** (${vuln.severity}) –≤ \`${vuln.file}:${vuln.line}\`
   ${vuln.description}
   üí° *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:* ${vuln.recommendation}`
        )
        .join('\\n\\n')
    : '‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ'
}`;
  }

  private generateTestingInfo(data: ReportData): string {
    const { testing } = data;

    return `## üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ

### üìä –ü–æ–∫—Ä—ã—Ç–∏–µ –∫–æ–¥–∞
| –¢–∏–ø | –ü–æ–∫—Ä—ã—Ç–∏–µ |
|-----|----------|
| **–°—Ç—Ä–æ–∫–∏** | ${testing.coverage.lines}% ${testing.coverage.lines >= 80 ? '‚úÖ' : testing.coverage.lines >= 60 ? '‚ö†Ô∏è' : '‚ùå'} |
| **–§—É–Ω–∫—Ü–∏–∏** | ${testing.coverage.functions}% ${testing.coverage.functions >= 80 ? '‚úÖ' : testing.coverage.functions >= 60 ? '‚ö†Ô∏è' : '‚ùå'} |
| **–í–µ—Ç–∫–∏** | ${testing.coverage.branches}% ${testing.coverage.branches >= 80 ? '‚úÖ' : testing.coverage.branches >= 60 ? '‚ö†Ô∏è' : '‚ùå'} |
| **–í—ã—Ä–∞–∂–µ–Ω–∏—è** | ${testing.coverage.statements}% ${testing.coverage.statements >= 80 ? '‚úÖ' : testing.coverage.statements >= 60 ? '‚ö†Ô∏è' : '‚ùå'} |

### üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤
- **–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤:** ${testing.testResults.total}
- **–ü—Ä–æ–π–¥–µ–Ω–æ:** ${testing.testResults.passed} ‚úÖ
- **–ü—Ä–æ–≤–∞–ª–µ–Ω–æ:** ${testing.testResults.failed} ${testing.testResults.failed > 0 ? '‚ùå' : '‚úÖ'}
- **–ü—Ä–æ–ø—É—â–µ–Ω–æ:** ${testing.testResults.skipped} ‚è≠Ô∏è
- **–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:** ${(testing.testResults.duration / 1000).toFixed(1)}—Å

### üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
- **Mock —Å–∏—Å—Ç–µ–º—ã:** ${this.getTestingStatusEmoji(testing.mockingStatus)} ${testing.mockingStatus}
- **E2E —Ç–µ—Å—Ç—ã:** ${this.getTestingStatusEmoji(testing.e2eStatus)} ${testing.e2eStatus}`;
  }

  private generateMetadata(data: ReportData): string {
    return `## ‚ÑπÔ∏è –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç–∞

**–î–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:** ${new Date(data.timestamp).toLocaleString('ru-RU')}
**–í–µ—Ä—Å–∏—è –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞:** EAP Analyzer v${data.metadata.version}
**–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞:** ${Math.round(data.metadata.totalAnalysisTime / 1000)}—Å
**–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:** \`${data.metadata.configUsed}\`
**–°—Ä–µ–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:** Node.js ${data.metadata.nodeVersion} –Ω–∞ ${data.metadata.os}

---

*–≠—Ç–æ—Ç –æ—Ç—á–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω —Å–∏—Å—Ç–µ–º–æ–π EAP Analyzer v6.0*
*–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –ø—Ä–æ–µ–∫—Ç–∞*`;
  }

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —ç–º–æ–¥–∑–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  private getStatusEmoji(status: string): string {
    const statusMap: Record<string, string> = {
      excellent: '‚úÖ',
      good: 'üëç',
      warning: '‚ö†Ô∏è',
      critical: '‚ùå',
    };
    return statusMap[status] || '‚ùì';
  }

  private getStatusText(status: string): string {
    const statusMap: Record<string, string> = {
      excellent: '–û—Ç–ª–∏—á–Ω–æ',
      good: '–•–æ—Ä–æ—à–æ',
      warning: '–¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è',
      critical: '–ö—Ä–∏—Ç–∏—á–Ω–æ',
    };
    return statusMap[status] || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
  }

  private getCategoryEmoji(slug: string): string {
    const categoryMap: Record<string, string> = {
      security: 'üîí',
      testing: 'üß™',
      performance: '‚ö°',
      quality: '‚ú®',
      documentation: 'üìö',
    };
    return categoryMap[slug] || 'üìä';
  }

  private getSeverityEmoji(severity: string): string {
    const severityMap: Record<string, string> = {
      critical: 'üö®',
      high: 'üî•',
      medium: '‚ö†Ô∏è',
      low: 'üí°',
    };
    return severityMap[severity] || '‚ùì';
  }

  private getPriorityEmoji(priority: string): string {
    const priorityMap: Record<string, string> = {
      critical: 'üö®',
      high: 'üî•',
      medium: '‚ö†Ô∏è',
      low: 'üí°',
    };
    return priorityMap[priority] || 'üìù';
  }

  private getSecurityStatusEmoji(status: string): string {
    const statusMap: Record<string, string> = {
      enabled: '‚úÖ',
      disabled: '‚ùå',
      partial: '‚ö†Ô∏è',
      unknown: '‚ùì',
      basic: '‚ö†Ô∏è',
      'gdpr-compliant': '‚úÖ',
    };
    return statusMap[status] || '‚ùì';
  }

  private getTestingStatusEmoji(status: string): string {
    const statusMap: Record<string, string> = {
      comprehensive: '‚úÖ',
      basic: '‚ö†Ô∏è',
      none: '‚ùå',
      unknown: '‚ùì',
    };
    return statusMap[status] || '‚ùì';
  }
}
