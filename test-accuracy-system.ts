/* eslint-disable no-console */
import { AccuracyCalculator } from './src/metrics/accuracy-calculator.ts';

/**
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã —Ç–æ—á–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑–∞
 */
async function testAccuracySystem() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã —Ç–æ—á–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑–∞...\n');

  const calculator = new AccuracyCalculator();
  const projectPath = process.cwd(); // –¢–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã:');
    const readiness = calculator.checkReadiness();
    console.log(`   –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: ${readiness.ready}`);
    if (readiness.issues.length > 0) {
      console.log(`   –ü—Ä–æ–±–ª–µ–º—ã: ${readiness.issues.join(', ')}`);
    }
    console.log(`   –î–æ—Å—Ç—É–ø–Ω—ã–µ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä—ã: ${calculator.getAvailableAnalyzers().join(', ')}\n`);

    // 2. –ò–∑–≤–ª–µ–∫–∞–µ–º –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
    console.log('2. –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –ø—Ä–æ–µ–∫—Ç–∞:');
    const metrics = await calculator.extractProjectMetrics(projectPath);
    console.log(`   –§–∞–π–ª–æ–≤: ${metrics.totalFiles}`);
    console.log(`   –°—Ç—Ä–æ–∫ –∫–æ–¥–∞: ${metrics.totalLines}`);
    console.log(`   –°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: ${metrics.averageFileSize.toFixed(1)} —Å—Ç—Ä–æ–∫`);
    console.log(`   –°–ª–æ–∂–Ω–æ—Å—Ç—å: ${metrics.averageCyclomaticComplexity.toFixed(2)}`);
    console.log(
      `   –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã: ${metrics.architecturalPatterns.join(', ') || '–ù–µ –Ω–∞–π–¥–µ–Ω—ã'}`
    );
    console.log(`   –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ: ${metrics.duplicationPercentage.toFixed(1)}%\n`);

    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    console.log('3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞:');
    const structureAccuracy = await calculator.calculateAccuracyForAnalyzer(
      'structure',
      projectPath
    );
    console.log(`   –û–±—â–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å: ${structureAccuracy.overall}%`);
    console.log(
      `   –î–æ–≤–µ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: ${structureAccuracy.confidenceInterval.lower}% - ${structureAccuracy.confidenceInterval.upper}%`
    );
    console.log(`   –û–±—ä—è—Å–Ω–µ–Ω–∏–µ: ${structureAccuracy.explanation}`);

    console.log('   –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ç–æ—á–Ω–æ—Å—Ç–∏:');
    console.log(
      `     - –ö–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö: ${structureAccuracy.components.dataQuality.score.toFixed(1)}% (–¥–æ–≤–µ—Ä–∏–µ: ${structureAccuracy.components.dataQuality.confidence.toFixed(1)}%)`
    );
    console.log(
      `     - –ì–ª—É–±–∏–Ω–∞ –∞–Ω–∞–ª–∏–∑–∞: ${structureAccuracy.components.analysisDepth.score.toFixed(1)}% (–ø–æ–∫—Ä—ã—Ç–∏–µ: ${structureAccuracy.components.analysisDepth.coverage.toFixed(1)}%)`
    );
    console.log(
      `     - –ù–∞–¥—ë–∂–Ω–æ—Å—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤: ${structureAccuracy.components.algorithmReliability.score.toFixed(1)}% (—Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å: ${structureAccuracy.components.algorithmReliability.stability.toFixed(1)}%)`
    );

    if (structureAccuracy.components.historicalCorrectness) {
      console.log(
        `     - –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å: ${structureAccuracy.components.historicalCorrectness.score.toFixed(1)}% (—Ç—Ä–µ–Ω–¥: ${structureAccuracy.components.historicalCorrectness.trend})`
      );
    }

    // 4. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if (structureAccuracy.recommendations && structureAccuracy.recommendations.length > 0) {
      console.log('\n   –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
      structureAccuracy.recommendations.forEach((rec, index) => {
        console.log(`     ${index + 1}. ${rec}`);
      });
    }

    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—â—É—é —Ç–æ—á–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã
    console.log('\n4. –û–±—â–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞:');
    const overallResult = await calculator.calculateOverallAccuracy(projectPath);
    console.log(`   –û–±—â–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å: ${overallResult.overall}%`);
    console.log(`   –û–±—ä—è—Å–Ω–µ–Ω–∏–µ: ${overallResult.explanation}`);

    console.log('\n   –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞–º:');
    for (const [analyzer, result] of overallResult.byAnalyzer) {
      console.log(
        `     ${analyzer}: ${result.overall}% (${result.confidenceInterval.lower}%-${result.confidenceInterval.upper}%)`
      );
    }

    // 6. –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
    console.log('\n5. –°–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –º–µ—Ç—Ä–∏–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞:');
    const specificMetrics = await calculator.getAnalyzerSpecificMetrics('structure', projectPath);
    console.log(`   –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤: ${specificMetrics.fileStructureScore}%`);
    console.log(`   –°–ª–æ–∂–Ω–æ—Å—Ç—å: ${specificMetrics.complexityScore}%`);
    console.log(`   –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞: ${specificMetrics.architectureScore}%`);
    console.log(`   –ö–∞—á–µ—Å—Ç–≤–æ: ${specificMetrics.qualityScore}%`);

    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    if (error instanceof Error) {
      console.error('   –î–µ—Ç–∞–ª–∏:', error.message);
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testAccuracySystem().catch(console.error);

export { testAccuracySystem };
