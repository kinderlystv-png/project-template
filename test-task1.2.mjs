/**
 * üß™ –¢–ï–°–¢ –†–ï–ü–û–†–¢–ï–†–û–í EAP ANALYZER v6.0
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ MarkdownReporter –∏ —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ HTMLReporter
 */

import { ReporterEngine } from './src/reporters/ReporterEngine.js';

// –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
const testData = {
  project: {
    name: 'Test Project',
    version: '1.0.0',
    description: '–¢–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–µ–ø–æ—Ä—Ç–µ—Ä–æ–≤',
    author: 'EAP Analyzer Team',
    license: 'MIT',
    repository: 'https://github.com/test/test-project',
    homepage: 'https://test-project.com',
    keywords: ['test', 'demo', 'reporter'],
    dependencies: ['typescript', 'vite', 'svelte'],
    devDependencies: ['eslint', 'prettier', '@types/node'],
    scripts: ['build', 'dev', 'test', 'lint'],
    configFiles: ['package.json', 'tsconfig.json', 'vite.config.ts'],
    buildTools: ['vite', 'typescript'],
    testingFrameworks: ['vitest'],
    totalFiles: 156,
    totalLines: 8420,
    fileTypes: { ts: 45, js: 23, svelte: 12, json: 8, md: 3 },
  },

  summary: {
    totalReadiness: 72,
    categoriesCount: 4,
    componentsCount: 16,
    issuesCount: 8,
    recommendationsCount: 12,
    lastAnalyzed: new Date().toISOString(),
    analysisVersion: '6.0.0',
    configVersion: '2.1.0',
  },

  categories: [
    {
      id: 'security',
      name: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å',
      readiness: 85,
      status: 'good',
      components: [
        {
          id: 'xss-protection',
          name: 'XSS Protection',
          readiness: 90,
          status: 'excellent',
          issues: [
            {
              id: 'xss-1',
              severity: 'medium',
              type: 'vulnerability',
              message: '–ù–∞–π–¥–µ–Ω–æ 2 –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ —É—è–∑–≤–∏–º—ã—Ö –º–µ—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è innerHTML',
              file: 'src/components/UserContent.svelte',
              line: 45,
              recommendation: '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å textContent –≤–º–µ—Å—Ç–æ innerHTML',
            },
          ],
          recommendations: [
            {
              id: 'rec-xss-1',
              component: 'xss-protection',
              action: '–î–æ–±–∞–≤–∏—Ç—å CSP –∑–∞–≥–æ–ª–æ–≤–∫–∏',
              estimatedTime: '2 —á–∞—Å–∞',
              impact: 'high',
              priority: 'high',
            },
          ],
          details: {
            filesAnalyzed: 45,
            linesOfCode: 2340,
            testsCount: 12,
            lastUpdated: new Date().toISOString(),
            dependencies: ['@types/dompurify', 'dompurify'],
          },
        },
      ],
    },
  ],

  recommendations: [
    {
      id: 'global-rec-1',
      component: 'security',
      action: '–í–Ω–µ–¥—Ä–∏—Ç—å —Å–∏—Å—Ç–µ–º—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã',
      estimatedTime: '1 –Ω–µ–¥–µ–ª—è',
      impact: 'high',
      priority: 'high',
    },
  ],

  performance: {
    bundleSize: {
      total: 245000,
      gzipped: 78000,
      assets: [
        { name: 'index.js', size: 145000, gzipped: 45000 },
        { name: 'vendor.js', size: 100000, gzipped: 33000 },
      ],
    },
    buildTime: 2340,
    memoryUsage: 512000000,
  },

  security: {
    vulnerabilities: [
      {
        id: 'vuln-1',
        severity: 'medium',
        type: 'xss',
        description: '–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è XSS —É—è–∑–≤–∏–º–æ—Å—Ç—å',
        file: 'src/lib/utils.ts',
        line: 23,
        cwe: 'CWE-79',
      },
    ],
    securityScore: 85,
    cspStatus: 'implemented',
    httpsStatus: 'enforced',
    authenticationStatus: 'strong',
    dataProtectionStatus: 'compliant',
  },

  testing: {
    coverage: {
      lines: 78,
      functions: 82,
      branches: 65,
      statements: 76,
    },
    testResults: {
      total: 156,
      passed: 148,
      failed: 3,
      skipped: 5,
      duration: 12340,
    },
    testFiles: [
      { name: 'security.test.ts', tests: 45, passed: 43, failed: 2 },
      { name: 'performance.test.ts', tests: 23, passed: 23, failed: 0 },
    ],
    mockingStatus: 'comprehensive',
    e2eStatus: 'basic',
  },

  metadata: {
    generatedAt: new Date().toISOString(),
    generator: 'EAP Analyzer v6.0',
    version: '1.0.0',
    format: 'standard',
    locale: 'ru-RU',
  },
};

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function testReporters() {
  console.log('üß™ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ—Ä—Ç–µ—Ä–æ–≤ Task 1.2...\n');

  try {
    const engine = new ReporterEngine();

    // –¢–µ—Å—Ç MarkdownReporter
    console.log('üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º MarkdownReporter...');
    const markdownReport = await engine.generateReport(testData, 'markdown');
    console.log('‚úÖ MarkdownReporter —Ä–∞–±–æ—Ç–∞–µ—Ç! –î–ª–∏–Ω–∞ –æ—Ç—á–µ—Ç–∞:', markdownReport.length, '—Å–∏–º–≤–æ–ª–æ–≤');

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º Markdown –æ—Ç—á–µ—Ç
    const fs = await import('fs/promises');
    await fs.writeFile('./test-report-task1.2.md', markdownReport, 'utf-8');
    console.log('üíæ Markdown –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ test-report-task1.2.md');

    // –¢–µ—Å—Ç HTMLReporter
    console.log('\nüåê –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π HTMLReporter...');
    const htmlReport = await engine.generateReport(testData, 'html');
    console.log('‚úÖ HTMLReporter —Ä–∞–±–æ—Ç–∞–µ—Ç! –î–ª–∏–Ω–∞ –æ—Ç—á–µ—Ç–∞:', htmlReport.length, '—Å–∏–º–≤–æ–ª–æ–≤');

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –æ—Ç—á–µ—Ç
    await fs.writeFile('./test-report-task1.2.html', htmlReport, 'utf-8');
    console.log('üíæ HTML –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ test-report-task1.2.html');

    console.log('\nüéâ Task 1.2 –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!');
    console.log('\nüìã –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ Task 1.2:');
    console.log('  ‚úÖ MarkdownReporter: –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å —ç–º–æ–¥–∑–∏ –∏ —Ç–∞–±–ª–∏—Ü–∞–º–∏');
    console.log('  ‚úÖ HTMLReporter: –¢–µ–º–Ω–∞—è —Ç–µ–º–∞, –ø–æ–∏—Å–∫, —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è, —É–ª—É—á—à–µ–Ω–Ω—ã–µ —Å—Ç–∏–ª–∏');
    console.log('  ‚úÖ Keyboard shortcuts: Ctrl+F (–ø–æ–∏—Å–∫), Ctrl+D (—Å–º–µ–Ω–∞ —Ç–µ–º—ã)');
    console.log('  ‚úÖ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π –¥–∏–∑–∞–π–Ω –∏ –∞–Ω–∏–º–∞—Ü–∏–∏');
    console.log('  ‚úÖ ReporterEngine –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è');

    console.log('\nüìä –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–∏—Å—Ç–µ–º—ã –æ—Ç—á–µ—Ç–æ–≤:');
    console.log('  ‚Ä¢ Task 1.1: 60% –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ (–±–∞–∑–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞) ‚úÖ');
    console.log('  ‚Ä¢ Task 1.2: 80% –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ (Markdown + HTML —É–ª—É—á—à–µ–Ω–∏—è) ‚úÖ');
    console.log('  ‚Ä¢ –°–ª–µ–¥—É—é—â–∏–π: Task 1.3 (JSONReporter + CI/CD –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è)');

    return { success: true, markdownLength: markdownReport.length, htmlLength: htmlReport.length };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ Task 1.2:', error);
    return { success: false, error: error.message };
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
testReporters().then(result => {
  if (result.success) {
    console.log('\nüöÄ Task 1.2 –≥–æ—Ç–æ–≤ –∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏!');
    process.exit(0);
  } else {
    console.log('\nüí• Task 1.2 —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏');
    process.exit(1);
  }
});
