{
  "projectPath": "C:\\alphacore\\project-template",
  "components": [
    {
      "component": {
        "name": "EMT (Эталонный Модуль Тестирования)",
        "description": "Комплексная система тестирования проекта",
        "weight": 10,
        "checks": [
          {
            "id": "emt.vitest.installed",
            "name": "Vitest установлен",
            "description": "Проверка наличия современного тестового фреймворка Vitest",
            "category": "testing",
            "score": 15,
            "critical": true,
            "level": "critical",
            "tags": ["vitest", "testing", "framework"]
          },
          {
            "id": "emt.vitest.config",
            "name": "Конфигурация Vitest",
            "description": "Наличие файла конфигурации vitest.config.ts",
            "category": "testing",
            "score": 10,
            "level": "high",
            "tags": ["vitest", "config"]
          },
          {
            "id": "emt.unit.tests",
            "name": "Unit тесты",
            "description": "Наличие unit тестов в проекте",
            "category": "testing",
            "score": 15,
            "critical": true,
            "level": "critical",
            "tags": ["unit-tests", "testing"]
          },
          {
            "id": "emt.integration.tests",
            "name": "Integration тесты",
            "description": "Наличие integration тестов",
            "category": "testing",
            "score": 15,
            "level": "high",
            "tags": ["integration-tests", "testing"]
          },
          {
            "id": "emt.e2e.tests",
            "name": "E2E тесты",
            "description": "Наличие end-to-end тестов",
            "category": "testing",
            "score": 15,
            "level": "high",
            "tags": ["e2e-tests", "playwright"]
          },
          {
            "id": "emt.playwright.installed",
            "name": "Playwright установлен",
            "description": "Наличие Playwright для E2E тестирования",
            "category": "testing",
            "score": 10,
            "level": "medium",
            "tags": ["playwright", "e2e"]
          },
          {
            "id": "emt.coverage.config",
            "name": "Настройки покрытия",
            "description": "Конфигурация code coverage",
            "category": "testing",
            "score": 10,
            "level": "high",
            "tags": ["coverage", "quality"]
          },
          {
            "id": "emt.coverage.threshold",
            "name": "Пороги покрытия",
            "description": "Установлены пороги покрытия кода (>=75%)",
            "category": "testing",
            "score": 10,
            "level": "high",
            "tags": ["coverage", "threshold"]
          },
          {
            "id": "emt.test.scripts",
            "name": "NPM скрипты для тестов",
            "description": "Наличие скриптов test, test:coverage, test:watch",
            "category": "testing",
            "score": 5,
            "level": "medium",
            "tags": ["npm-scripts", "automation"]
          },
          {
            "id": "emt.performance.tests",
            "name": "Performance тесты",
            "description": "Наличие тестов производительности",
            "category": "testing",
            "score": 5,
            "level": "optional",
            "tags": ["performance", "benchmarks"]
          }
        ],
        "critical": true
      },
      "score": 110,
      "maxScore": 110,
      "percentage": 100,
      "passed": [
        {
          "check": {
            "id": "emt.vitest.installed",
            "name": "Vitest установлен",
            "description": "Проверка наличия современного тестового фреймворка Vitest",
            "category": "testing",
            "score": 15,
            "critical": true,
            "level": "critical",
            "tags": ["vitest", "testing", "framework"]
          },
          "passed": true,
          "score": 15,
          "maxScore": 15,
          "details": "",
          "recommendations": [],
          "duration": 2
        },
        {
          "check": {
            "id": "emt.vitest.config",
            "name": "Конфигурация Vitest",
            "description": "Наличие файла конфигурации vitest.config.ts",
            "category": "testing",
            "score": 10,
            "level": "high",
            "tags": ["vitest", "config"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "",
          "recommendations": [],
          "duration": 0
        },
        {
          "check": {
            "id": "emt.unit.tests",
            "name": "Unit тесты",
            "description": "Наличие unit тестов в проекте",
            "category": "testing",
            "score": 15,
            "critical": true,
            "level": "critical",
            "tags": ["unit-tests", "testing"]
          },
          "passed": true,
          "score": 15,
          "maxScore": 15,
          "details": "Found 4 unit test files",
          "recommendations": [],
          "duration": 29
        },
        {
          "check": {
            "id": "emt.integration.tests",
            "name": "Integration тесты",
            "description": "Наличие integration тестов",
            "category": "testing",
            "score": 15,
            "level": "high",
            "tags": ["integration-tests", "testing"]
          },
          "passed": true,
          "score": 15,
          "maxScore": 15,
          "details": "Found 1 integration test files",
          "recommendations": [],
          "duration": 6
        },
        {
          "check": {
            "id": "emt.e2e.tests",
            "name": "E2E тесты",
            "description": "Наличие end-to-end тестов",
            "category": "testing",
            "score": 15,
            "level": "high",
            "tags": ["e2e-tests", "playwright"]
          },
          "passed": true,
          "score": 15,
          "maxScore": 15,
          "details": "Found 3 E2E test files",
          "recommendations": [],
          "duration": 2
        },
        {
          "check": {
            "id": "emt.playwright.installed",
            "name": "Playwright установлен",
            "description": "Наличие Playwright для E2E тестирования",
            "category": "testing",
            "score": 10,
            "level": "medium",
            "tags": ["playwright", "e2e"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "",
          "recommendations": [],
          "duration": 1
        },
        {
          "check": {
            "id": "emt.coverage.config",
            "name": "Настройки покрытия",
            "description": "Конфигурация code coverage",
            "category": "testing",
            "score": 10,
            "level": "high",
            "tags": ["coverage", "quality"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "Coverage configured in vitest.config.ts",
          "recommendations": [],
          "duration": 0
        },
        {
          "check": {
            "id": "emt.coverage.threshold",
            "name": "Пороги покрытия",
            "description": "Установлены пороги покрытия кода (>=75%)",
            "category": "testing",
            "score": 10,
            "level": "high",
            "tags": ["coverage", "threshold"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "Coverage thresholds found in vitest.config.ts",
          "recommendations": [],
          "duration": 1
        },
        {
          "check": {
            "id": "emt.test.scripts",
            "name": "NPM скрипты для тестов",
            "description": "Наличие скриптов test, test:coverage, test:watch",
            "category": "testing",
            "score": 5,
            "level": "medium",
            "tags": ["npm-scripts", "automation"]
          },
          "passed": true,
          "score": 5,
          "maxScore": 5,
          "details": "Required: 1/1, Optional: 3/3",
          "recommendations": [],
          "duration": 0
        },
        {
          "check": {
            "id": "emt.performance.tests",
            "name": "Performance тесты",
            "description": "Наличие тестов производительности",
            "category": "testing",
            "score": 5,
            "level": "optional",
            "tags": ["performance", "benchmarks"]
          },
          "passed": true,
          "score": 5,
          "maxScore": 5,
          "details": "Found 1 performance test files",
          "recommendations": [],
          "duration": 1
        }
      ],
      "failed": [],
      "warnings": [],
      "recommendations": [],
      "duration": 43
    },
    {
      "component": {
        "name": "Docker Infrastructure",
        "description": "Контейнеризация и развертывание приложения",
        "weight": 10,
        "checks": [
          {
            "id": "docker.dockerfile",
            "name": "Dockerfile присутствует",
            "description": "Наличие корректного Dockerfile для контейнеризации",
            "category": "docker",
            "score": 15,
            "critical": true,
            "level": "critical",
            "tags": ["docker", "containerization"]
          },
          {
            "id": "docker.compose",
            "name": "Docker Compose конфигурация",
            "description": "Наличие docker-compose.yml для развертывания",
            "category": "docker",
            "score": 15,
            "level": "high",
            "tags": ["docker-compose", "deployment"]
          },
          {
            "id": "docker.multi.stage",
            "name": "Multi-stage сборка",
            "description": "Использование multi-stage сборки для оптимизации",
            "category": "docker",
            "score": 10,
            "level": "high",
            "tags": ["docker", "optimization"]
          },
          {
            "id": "docker.production.ready",
            "name": "Production готовность",
            "description": "Конфигурация для production среды",
            "category": "docker",
            "score": 15,
            "level": "high",
            "tags": ["production", "configuration"]
          },
          {
            "id": "docker.security",
            "name": "Безопасность контейнера",
            "description": "Настройки безопасности и non-root пользователь",
            "category": "security",
            "score": 10,
            "level": "high",
            "tags": ["security", "best-practices"]
          },
          {
            "id": "docker.health.check",
            "name": "Health Check",
            "description": "Конфигурация проверки здоровья контейнера",
            "category": "docker",
            "score": 10,
            "level": "medium",
            "tags": ["health-check", "monitoring"]
          },
          {
            "id": "docker.ignore",
            "name": ".dockerignore файл",
            "description": "Наличие .dockerignore для оптимизации сборки",
            "category": "docker",
            "score": 5,
            "level": "medium",
            "tags": ["optimization", "best-practices"]
          },
          {
            "id": "docker.environments",
            "name": "Множественные окружения",
            "description": "Конфигурации для dev, test, production",
            "category": "docker",
            "score": 10,
            "level": "medium",
            "tags": ["environments", "configuration"]
          },
          {
            "id": "docker.volumes",
            "name": "Управление volumes",
            "description": "Правильная настройка volumes для данных",
            "category": "docker",
            "score": 5,
            "level": "medium",
            "tags": ["volumes", "data-management"]
          },
          {
            "id": "docker.scripts",
            "name": "Скрипты управления",
            "description": "Утилиты для управления Docker контейнерами",
            "category": "docker",
            "score": 5,
            "level": "optional",
            "tags": ["automation", "scripts"]
          }
        ],
        "critical": true
      },
      "score": 100,
      "maxScore": 100,
      "percentage": 100,
      "passed": [
        {
          "check": {
            "id": "docker.dockerfile",
            "name": "Dockerfile присутствует",
            "description": "Наличие корректного Dockerfile для контейнеризации",
            "category": "docker",
            "score": 15,
            "critical": true,
            "level": "critical",
            "tags": ["docker", "containerization"]
          },
          "passed": true,
          "score": 15,
          "maxScore": 15,
          "details": "Basic Dockerfile elements: 6/6 (FROM: true, WORKDIR: true, COPY: true, RUN: true, EXPOSE: true, CMD: true)",
          "recommendations": [],
          "duration": 1
        },
        {
          "check": {
            "id": "docker.compose",
            "name": "Docker Compose конфигурация",
            "description": "Наличие docker-compose.yml для развертывания",
            "category": "docker",
            "score": 15,
            "level": "high",
            "tags": ["docker-compose", "deployment"]
          },
          "passed": true,
          "score": 15,
          "maxScore": 15,
          "details": "Found 1 compose files with 1 service definitions",
          "recommendations": [],
          "duration": 4
        },
        {
          "check": {
            "id": "docker.multi.stage",
            "name": "Multi-stage сборка",
            "description": "Использование multi-stage сборки для оптимизации",
            "category": "docker",
            "score": 10,
            "level": "high",
            "tags": ["docker", "optimization"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "Multi-stage indicators: 5 FROM statements, aliases: true, COPY --from: true",
          "recommendations": [],
          "duration": 1
        },
        {
          "check": {
            "id": "docker.production.ready",
            "name": "Production готовность",
            "description": "Конфигурация для production среды",
            "category": "docker",
            "score": 15,
            "level": "high",
            "tags": ["production", "configuration"]
          },
          "passed": true,
          "score": 15,
          "maxScore": 15,
          "details": "Production files: 1 (docker-compose.prod.yml), ENV config: true",
          "recommendations": [],
          "duration": 1
        },
        {
          "check": {
            "id": "docker.security",
            "name": "Безопасность контейнера",
            "description": "Настройки безопасности и non-root пользователь",
            "category": "security",
            "score": 10,
            "level": "high",
            "tags": ["security", "best-practices"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "Security features: 2/4 (non-root user: true, updates: false, cache cleanup: false, no root: true)",
          "recommendations": [],
          "duration": 0
        },
        {
          "check": {
            "id": "docker.health.check",
            "name": "Health Check",
            "description": "Конфигурация проверки здоровья контейнера",
            "category": "docker",
            "score": 10,
            "level": "medium",
            "tags": ["health-check", "monitoring"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "HEALTHCHECK configured",
          "recommendations": [],
          "duration": 1
        },
        {
          "check": {
            "id": "docker.ignore",
            "name": ".dockerignore файл",
            "description": "Наличие .dockerignore для оптимизации сборки",
            "category": "docker",
            "score": 5,
            "level": "medium",
            "tags": ["optimization", "best-practices"]
          },
          "passed": true,
          "score": 5,
          "maxScore": 5,
          "details": ".dockerignore found",
          "recommendations": [],
          "duration": 0
        },
        {
          "check": {
            "id": "docker.environments",
            "name": "Множественные окружения",
            "description": "Конфигурации для dev, test, production",
            "category": "docker",
            "score": 10,
            "level": "medium",
            "tags": ["environments", "configuration"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "Environment files: 2 (docker-compose.test.yml, docker-compose.prod.yml)",
          "recommendations": [],
          "duration": 1
        },
        {
          "check": {
            "id": "docker.volumes",
            "name": "Управление volumes",
            "description": "Правильная настройка volumes для данных",
            "category": "docker",
            "score": 5,
            "level": "medium",
            "tags": ["volumes", "data-management"]
          },
          "passed": true,
          "score": 5,
          "maxScore": 5,
          "details": "Found volumes in docker-compose.yml",
          "recommendations": [],
          "duration": 0
        },
        {
          "check": {
            "id": "docker.scripts",
            "name": "Скрипты управления",
            "description": "Утилиты для управления Docker контейнерами",
            "category": "docker",
            "score": 5,
            "level": "optional",
            "tags": ["automation", "scripts"]
          },
          "passed": true,
          "score": 5,
          "maxScore": 5,
          "details": "Docker management scripts: 2 (docker/run.sh, docker/run.ps1)",
          "recommendations": [],
          "duration": 2
        }
      ],
      "failed": [],
      "warnings": [],
      "recommendations": [],
      "duration": 11
    },
    {
      "component": {
        "name": "SvelteKit Framework",
        "description": "Анализ компонента SvelteKit Framework",
        "weight": 8,
        "checks": [
          {
            "id": "sveltekit-config",
            "name": "SvelteKit Configuration",
            "description": "Проверка наличия и корректности svelte.config.js",
            "category": "sveltekit",
            "score": 15,
            "critical": true,
            "level": "critical",
            "tags": ["sveltekit", "config", "setup"]
          },
          {
            "id": "sveltekit-version",
            "name": "SvelteKit Version",
            "description": "Проверка версии SvelteKit",
            "category": "sveltekit",
            "score": 10,
            "critical": false,
            "level": "high",
            "tags": ["sveltekit", "version", "dependencies"]
          },
          {
            "id": "vite-config",
            "name": "Vite Configuration",
            "description": "Проверка конфигурации Vite для SvelteKit",
            "category": "sveltekit",
            "score": 10,
            "critical": false,
            "level": "high",
            "tags": ["vite", "config", "sveltekit"]
          },
          {
            "id": "tailwind-config",
            "name": "Tailwind CSS Configuration",
            "description": "Проверка конфигурации Tailwind CSS",
            "category": "sveltekit",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["tailwind", "css", "config"]
          },
          {
            "id": "postcss-config",
            "name": "PostCSS Configuration",
            "description": "Проверка конфигурации PostCSS",
            "category": "sveltekit",
            "score": 5,
            "critical": false,
            "level": "low",
            "tags": ["postcss", "css", "config"]
          },
          {
            "id": "app-html",
            "name": "App HTML Template",
            "description": "Проверка главного HTML шаблона",
            "category": "sveltekit",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["html", "template", "sveltekit"]
          },
          {
            "id": "routes-structure",
            "name": "Routes Structure",
            "description": "Проверка структуры роутинга SvelteKit",
            "category": "sveltekit",
            "score": 12,
            "critical": true,
            "level": "critical",
            "tags": ["routes", "structure", "sveltekit"]
          },
          {
            "id": "lib-structure",
            "name": "Lib Structure",
            "description": "Проверка структуры библиотек и компонентов",
            "category": "sveltekit",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["lib", "structure", "components"]
          },
          {
            "id": "svelte-config",
            "name": "Svelte Configuration",
            "description": "Проверка версии и настройки Svelte",
            "category": "sveltekit",
            "score": 10,
            "critical": false,
            "level": "high",
            "tags": ["svelte", "version", "config"]
          },
          {
            "id": "typescript-config",
            "name": "TypeScript Configuration",
            "description": "Проверка конфигурации TypeScript для SvelteKit",
            "category": "sveltekit",
            "score": 12,
            "critical": false,
            "level": "high",
            "tags": ["typescript", "config", "sveltekit"]
          }
        ]
      },
      "score": 98,
      "maxScore": 98,
      "percentage": 100,
      "passed": [
        {
          "check": {
            "id": "sveltekit-config",
            "name": "SvelteKit Configuration",
            "description": "Проверка наличия и корректности svelte.config.js",
            "category": "sveltekit",
            "score": 15,
            "critical": true,
            "level": "critical",
            "tags": ["sveltekit", "config", "setup"]
          },
          "passed": true,
          "score": 15,
          "maxScore": 15,
          "details": "SvelteKit конфигурация найдена. Размер: 814 символов",
          "recommendations": []
        },
        {
          "check": {
            "id": "sveltekit-version",
            "name": "SvelteKit Version",
            "description": "Проверка версии SvelteKit",
            "category": "sveltekit",
            "score": 10,
            "critical": false,
            "level": "high",
            "tags": ["sveltekit", "version", "dependencies"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "SvelteKit версия: ^2.37.0",
          "recommendations": []
        },
        {
          "check": {
            "id": "vite-config",
            "name": "Vite Configuration",
            "description": "Проверка конфигурации Vite для SvelteKit",
            "category": "sveltekit",
            "score": 10,
            "critical": false,
            "level": "high",
            "tags": ["vite", "config", "sveltekit"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "Vite конфигурация: vite.config.ts. Предупреждение: SvelteKit плагин не найден",
          "recommendations": []
        },
        {
          "check": {
            "id": "tailwind-config",
            "name": "Tailwind CSS Configuration",
            "description": "Проверка конфигурации Tailwind CSS",
            "category": "sveltekit",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["tailwind", "css", "config"]
          },
          "passed": true,
          "score": 8,
          "maxScore": 8,
          "details": "Tailwind конфигурация: tailwind.config.js. Предупреждение: настройки purge могут быть неполными",
          "recommendations": []
        },
        {
          "check": {
            "id": "postcss-config",
            "name": "PostCSS Configuration",
            "description": "Проверка конфигурации PostCSS",
            "category": "sveltekit",
            "score": 5,
            "critical": false,
            "level": "low",
            "tags": ["postcss", "css", "config"]
          },
          "passed": true,
          "score": 5,
          "maxScore": 5,
          "details": "PostCSS конфигурация: postcss.config.js",
          "recommendations": []
        },
        {
          "check": {
            "id": "app-html",
            "name": "App HTML Template",
            "description": "Проверка главного HTML шаблона",
            "category": "sveltekit",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["html", "template", "sveltekit"]
          },
          "passed": true,
          "score": 8,
          "maxScore": 8,
          "details": "app.html найден. Все SvelteKit плейсхолдеры присутствуют",
          "recommendations": []
        },
        {
          "check": {
            "id": "routes-structure",
            "name": "Routes Structure",
            "description": "Проверка структуры роутинга SvelteKit",
            "category": "sveltekit",
            "score": 12,
            "critical": true,
            "level": "critical",
            "tags": ["routes", "structure", "sveltekit"]
          },
          "passed": true,
          "score": 12,
          "maxScore": 12,
          "details": "Директория src/routes найдена. +layout.svelte найден. +page.svelte найден",
          "recommendations": []
        },
        {
          "check": {
            "id": "lib-structure",
            "name": "Lib Structure",
            "description": "Проверка структуры библиотек и компонентов",
            "category": "sveltekit",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["lib", "structure", "components"]
          },
          "passed": true,
          "score": 8,
          "maxScore": 8,
          "details": "Директория src/lib найдена. utils/ (1 поддиректорий)",
          "recommendations": []
        },
        {
          "check": {
            "id": "svelte-config",
            "name": "Svelte Configuration",
            "description": "Проверка версии и настройки Svelte",
            "category": "sveltekit",
            "score": 10,
            "critical": false,
            "level": "high",
            "tags": ["svelte", "version", "config"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "Svelte версия: ^5.38.7. Используется современная версия 5.x",
          "recommendations": []
        },
        {
          "check": {
            "id": "typescript-config",
            "name": "TypeScript Configuration",
            "description": "Проверка конфигурации TypeScript для SvelteKit",
            "category": "sveltekit",
            "score": 12,
            "critical": false,
            "level": "high",
            "tags": ["typescript", "config", "sveltekit"]
          },
          "passed": true,
          "score": 12,
          "maxScore": 12,
          "details": "Ошибка чтения tsconfig.json: SyntaxError: Expected double-quoted property name in JSON at position 804 (line 28 column 5)",
          "recommendations": []
        }
      ],
      "failed": [],
      "warnings": [],
      "recommendations": [],
      "duration": 0
    },
    {
      "component": {
        "name": "CI/CD Pipeline",
        "description": "Анализ компонента CI/CD Pipeline",
        "weight": 8,
        "checks": [
          {
            "id": "github-actions",
            "name": "GitHub Actions Setup",
            "description": "Проверка настройки GitHub Actions",
            "category": "cicd",
            "score": 15,
            "critical": true,
            "level": "critical",
            "tags": ["github-actions", "ci-cd", "automation"]
          },
          {
            "id": "workflow-structure",
            "name": "Workflow Structure",
            "description": "Проверка структуры workflow файлов",
            "category": "cicd",
            "score": 12,
            "critical": false,
            "level": "high",
            "tags": ["workflows", "structure", "ci-cd"]
          },
          {
            "id": "test-workflow",
            "name": "Test Workflow",
            "description": "Проверка workflow для автоматического тестирования",
            "category": "cicd",
            "score": 15,
            "critical": true,
            "level": "critical",
            "tags": ["testing", "automation", "ci"]
          },
          {
            "id": "build-workflow",
            "name": "Build Workflow",
            "description": "Проверка workflow для автоматической сборки",
            "category": "cicd",
            "score": 12,
            "critical": false,
            "level": "high",
            "tags": ["build", "automation", "ci"]
          },
          {
            "id": "deployment-workflow",
            "name": "Deployment Workflow",
            "description": "Проверка workflow для автоматического развертывания",
            "category": "cicd",
            "score": 10,
            "critical": false,
            "level": "medium",
            "tags": ["deployment", "automation", "cd"]
          },
          {
            "id": "security-workflow",
            "name": "Security Workflow",
            "description": "Проверка workflow для автоматических проверок безопасности",
            "category": "cicd",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["security", "automation", "scanning"]
          },
          {
            "id": "dependabot-config",
            "name": "Dependabot Configuration",
            "description": "Проверка настройки Dependabot для автоматических обновлений",
            "category": "cicd",
            "score": 6,
            "critical": false,
            "level": "low",
            "tags": ["dependabot", "automation", "dependencies"]
          },
          {
            "id": "git-hooks",
            "name": "Git Hooks",
            "description": "Проверка настройки git hooks для качества кода",
            "category": "cicd",
            "score": 7,
            "critical": false,
            "level": "medium",
            "tags": ["git-hooks", "husky", "lint-staged"]
          }
        ]
      },
      "score": 85,
      "maxScore": 85,
      "percentage": 100,
      "passed": [
        {
          "check": {
            "id": "github-actions",
            "name": "GitHub Actions Setup",
            "description": "Проверка настройки GitHub Actions",
            "category": "cicd",
            "score": 15,
            "critical": true,
            "level": "critical",
            "tags": ["github-actions", "ci-cd", "automation"]
          },
          "passed": true,
          "score": 15,
          "maxScore": 15,
          "details": "GitHub Actions настроен. Workflows: 3 (ci-cd.yml, docker.yml, pr-checks.yml)",
          "recommendations": []
        },
        {
          "check": {
            "id": "workflow-structure",
            "name": "Workflow Structure",
            "description": "Проверка структуры workflow файлов",
            "category": "cicd",
            "score": 12,
            "critical": false,
            "level": "high",
            "tags": ["workflows", "structure", "ci-cd"]
          },
          "passed": true,
          "score": 12,
          "maxScore": 12,
          "details": "Найдено 3 workflow файлов. CI workflow найден. CD workflow найден",
          "recommendations": []
        },
        {
          "check": {
            "id": "test-workflow",
            "name": "Test Workflow",
            "description": "Проверка workflow для автоматического тестирования",
            "category": "cicd",
            "score": 15,
            "critical": true,
            "level": "critical",
            "tags": ["testing", "automation", "ci"]
          },
          "passed": true,
          "score": 15,
          "maxScore": 15,
          "details": "Тестовый workflow найден: ci-cd.yml. Матричные тесты настроены. Тестирование на разных версиях Node.js. Сбор покрытия кода настроен",
          "recommendations": []
        },
        {
          "check": {
            "id": "build-workflow",
            "name": "Build Workflow",
            "description": "Проверка workflow для автоматической сборки",
            "category": "cicd",
            "score": 12,
            "critical": false,
            "level": "high",
            "tags": ["build", "automation", "ci"]
          },
          "passed": true,
          "score": 12,
          "maxScore": 12,
          "details": "Build workflow найден: ci-cd.yml. Production режим настроен",
          "recommendations": []
        },
        {
          "check": {
            "id": "deployment-workflow",
            "name": "Deployment Workflow",
            "description": "Проверка workflow для автоматического развертывания",
            "category": "cicd",
            "score": 10,
            "critical": false,
            "level": "medium",
            "tags": ["deployment", "automation", "cd"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "Deployment workflow найден: ci-cd.yml (GitHub Pages)",
          "recommendations": []
        },
        {
          "check": {
            "id": "security-workflow",
            "name": "Security Workflow",
            "description": "Проверка workflow для автоматических проверок безопасности",
            "category": "cicd",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["security", "automation", "scanning"]
          },
          "passed": true,
          "score": 8,
          "maxScore": 8,
          "details": "Security workflow найден: ci-cd.yml. Аудит зависимостей",
          "recommendations": []
        },
        {
          "check": {
            "id": "dependabot-config",
            "name": "Dependabot Configuration",
            "description": "Проверка настройки Dependabot для автоматических обновлений",
            "category": "cicd",
            "score": 6,
            "critical": false,
            "level": "low",
            "tags": ["dependabot", "automation", "dependencies"]
          },
          "passed": true,
          "score": 6,
          "maxScore": 6,
          "details": "Dependabot настроен. Расписание настроено. Директория указана. Предупреждение: NPM пакеты не отслеживаются",
          "recommendations": []
        },
        {
          "check": {
            "id": "git-hooks",
            "name": "Git Hooks",
            "description": "Проверка настройки git hooks для качества кода",
            "category": "cicd",
            "score": 7,
            "critical": false,
            "level": "medium",
            "tags": ["git-hooks", "husky", "lint-staged"]
          },
          "passed": true,
          "score": 7,
          "maxScore": 7,
          "details": "Husky git hooks настроены. Hooks: commit-msg, pre-commit, pre-push, _. lint-staged настроен",
          "recommendations": []
        }
      ],
      "failed": [],
      "warnings": [],
      "recommendations": [],
      "duration": 0
    },
    {
      "component": {
        "name": "Code Quality System",
        "description": "Анализ компонента Code Quality System",
        "weight": 8,
        "checks": [
          {
            "id": "eslint-config",
            "name": "ESLint Configuration",
            "description": "Проверка конфигурации ESLint для линтинга кода",
            "category": "code-quality",
            "score": 20,
            "critical": true,
            "level": "critical",
            "tags": ["eslint", "linting", "code-quality"]
          },
          {
            "id": "prettier-config",
            "name": "Prettier Configuration",
            "description": "Проверка конфигурации Prettier для форматирования кода",
            "category": "code-quality",
            "score": 15,
            "critical": false,
            "level": "high",
            "tags": ["prettier", "formatting", "code-style"]
          },
          {
            "id": "typescript-config",
            "name": "TypeScript Configuration",
            "description": "Проверка конфигурации TypeScript для строгой типизации",
            "category": "code-quality",
            "score": 18,
            "critical": true,
            "level": "critical",
            "tags": ["typescript", "type-checking", "strict-mode"]
          },
          {
            "id": "commitlint-config",
            "name": "CommitLint Configuration",
            "description": "Проверка конфигурации CommitLint для качественных коммитов",
            "category": "code-quality",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["commitlint", "git", "commit-quality"]
          },
          {
            "id": "editor-config",
            "name": "EditorConfig",
            "description": "Проверка .editorconfig для единообразия форматирования",
            "category": "code-quality",
            "score": 5,
            "critical": false,
            "level": "low",
            "tags": ["editorconfig", "formatting", "consistency"]
          },
          {
            "id": "linting-scripts",
            "name": "Linting Scripts",
            "description": "Проверка npm скриптов для линтинга кода",
            "category": "code-quality",
            "score": 10,
            "critical": false,
            "level": "high",
            "tags": ["npm-scripts", "linting", "automation"]
          },
          {
            "id": "formatting-scripts",
            "name": "Formatting Scripts",
            "description": "Проверка npm скриптов для форматирования кода",
            "category": "code-quality",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["npm-scripts", "formatting", "prettier"]
          },
          {
            "id": "pre-commit-hooks",
            "name": "Pre-commit Hooks",
            "description": "Проверка настройки pre-commit hooks для качества кода",
            "category": "code-quality",
            "score": 12,
            "critical": false,
            "level": "high",
            "tags": ["git-hooks", "pre-commit", "automation"]
          },
          {
            "id": "code-style-consistency",
            "name": "Code Style Consistency",
            "description": "Проверка последовательности настройки стиля кода",
            "category": "code-quality",
            "score": 10,
            "critical": false,
            "level": "medium",
            "tags": ["consistency", "code-style", "configuration"]
          }
        ]
      },
      "score": 106,
      "maxScore": 106,
      "percentage": 100,
      "passed": [
        {
          "check": {
            "id": "eslint-config",
            "name": "ESLint Configuration",
            "description": "Проверка конфигурации ESLint для линтинга кода",
            "category": "code-quality",
            "score": 20,
            "critical": true,
            "level": "critical",
            "tags": ["eslint", "linting", "code-quality"]
          },
          "passed": true,
          "score": 20,
          "maxScore": 20,
          "details": "ESLint конфигурация: .eslintrc.cjs. Svelte правила настроены. TypeScript правила настроены",
          "recommendations": []
        },
        {
          "check": {
            "id": "prettier-config",
            "name": "Prettier Configuration",
            "description": "Проверка конфигурации Prettier для форматирования кода",
            "category": "code-quality",
            "score": 15,
            "critical": false,
            "level": "high",
            "tags": ["prettier", "formatting", "code-style"]
          },
          "passed": true,
          "score": 15,
          "maxScore": 15,
          "details": "Prettier конфигурация: .prettierrc. .prettierignore найден",
          "recommendations": []
        },
        {
          "check": {
            "id": "typescript-config",
            "name": "TypeScript Configuration",
            "description": "Проверка конфигурации TypeScript для строгой типизации",
            "category": "code-quality",
            "score": 18,
            "critical": true,
            "level": "critical",
            "tags": ["typescript", "type-checking", "strict-mode"]
          },
          "passed": true,
          "score": 18,
          "maxScore": 18,
          "details": "Ошибка чтения tsconfig.json: SyntaxError: Expected double-quoted property name in JSON at position 804 (line 28 column 5)",
          "recommendations": []
        },
        {
          "check": {
            "id": "commitlint-config",
            "name": "CommitLint Configuration",
            "description": "Проверка конфигурации CommitLint для качественных коммитов",
            "category": "code-quality",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["commitlint", "git", "commit-quality"]
          },
          "passed": true,
          "score": 8,
          "maxScore": 8,
          "details": "CommitLint конфигурация: commitlint.config.js. Conventional Commits стандарт. Кастомные правила настроены",
          "recommendations": []
        },
        {
          "check": {
            "id": "editor-config",
            "name": "EditorConfig",
            "description": "Проверка .editorconfig для единообразия форматирования",
            "category": "code-quality",
            "score": 5,
            "critical": false,
            "level": "low",
            "tags": ["editorconfig", "formatting", "consistency"]
          },
          "passed": true,
          "score": 5,
          "maxScore": 5,
          "details": ".editorconfig найден. Настроек: 4/4. Хорошая конфигурация",
          "recommendations": []
        },
        {
          "check": {
            "id": "linting-scripts",
            "name": "Linting Scripts",
            "description": "Проверка npm скриптов для линтинга кода",
            "category": "code-quality",
            "score": 10,
            "critical": false,
            "level": "high",
            "tags": ["npm-scripts", "linting", "automation"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "Скрипты линтинга найдены. lint. lint:fix. type-check. ESLint настроен",
          "recommendations": []
        },
        {
          "check": {
            "id": "formatting-scripts",
            "name": "Formatting Scripts",
            "description": "Проверка npm скриптов для форматирования кода",
            "category": "code-quality",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["npm-scripts", "formatting", "prettier"]
          },
          "passed": true,
          "score": 8,
          "maxScore": 8,
          "details": "Скрипты форматирования найдены. format. format:check. Prettier настроен. Автоматическое исправление включено",
          "recommendations": []
        },
        {
          "check": {
            "id": "pre-commit-hooks",
            "name": "Pre-commit Hooks",
            "description": "Проверка настройки pre-commit hooks для качества кода",
            "category": "code-quality",
            "score": 12,
            "critical": false,
            "level": "high",
            "tags": ["git-hooks", "pre-commit", "automation"]
          },
          "passed": true,
          "score": 12,
          "maxScore": 12,
          "details": "Pre-commit hooks настроены (Husky). lint-staged интегрирован. Проверки качества кода включены. Конфигурация lint-staged найдена. Типы файлов: 0",
          "recommendations": []
        },
        {
          "check": {
            "id": "code-style-consistency",
            "name": "Code Style Consistency",
            "description": "Проверка последовательности настройки стиля кода",
            "category": "code-quality",
            "score": 10,
            "critical": false,
            "level": "medium",
            "tags": ["consistency", "code-style", "configuration"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "Конфигурации найдены: 4/4 (.eslintrc.cjs, .prettierrc, .editorconfig, tsconfig.json). Полная настройка качества кода",
          "recommendations": []
        }
      ],
      "failed": [],
      "warnings": [],
      "recommendations": [],
      "duration": 0
    },
    {
      "component": {
        "name": "Vitest Testing Framework",
        "description": "Анализ компонента Vitest Testing Framework",
        "weight": 8,
        "checks": [
          {
            "id": "vitest-config",
            "name": "Vitest Configuration",
            "description": "Проверка конфигурации Vitest тестового фреймворка",
            "category": "vitest",
            "score": 20,
            "critical": true,
            "level": "critical",
            "tags": ["vitest", "config", "testing"]
          },
          {
            "id": "vitest-version",
            "name": "Vitest Version",
            "description": "Проверка версии Vitest и сопутствующих пакетов",
            "category": "vitest",
            "score": 15,
            "critical": false,
            "level": "high",
            "tags": ["vitest", "version", "dependencies"]
          },
          {
            "id": "testing-libraries",
            "name": "Testing Libraries",
            "description": "Проверка установленных тестовых библиотек",
            "category": "vitest",
            "score": 12,
            "critical": false,
            "level": "high",
            "tags": ["testing-library", "dependencies", "dom-testing"]
          },
          {
            "id": "coverage-config",
            "name": "Coverage Configuration",
            "description": "Проверка настройки сбора покрытия кода",
            "category": "vitest",
            "score": 15,
            "critical": false,
            "level": "high",
            "tags": ["coverage", "code-quality", "metrics"]
          },
          {
            "id": "test-scripts",
            "name": "Test Scripts",
            "description": "Проверка npm скриптов для тестирования",
            "category": "vitest",
            "score": 10,
            "critical": false,
            "level": "medium",
            "tags": ["npm-scripts", "testing", "automation"]
          },
          {
            "id": "test-file-structure",
            "name": "Test File Structure",
            "description": "Проверка структуры и организации тестовых файлов",
            "category": "vitest",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["file-structure", "organization", "tests"]
          },
          {
            "id": "mocking-setup",
            "name": "Mocking Setup",
            "description": "Проверка настройки мокинга для изоляции тестов",
            "category": "vitest",
            "score": 6,
            "critical": false,
            "level": "low",
            "tags": ["mocking", "isolation", "testing"]
          },
          {
            "id": "e2e-integration",
            "name": "E2E Integration",
            "description": "Проверка интеграции с E2E тестированием",
            "category": "vitest",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["e2e", "integration", "playwright"]
          },
          {
            "id": "ci-integration",
            "name": "CI Integration",
            "description": "Проверка интеграции Vitest с CI/CD pipeline",
            "category": "vitest",
            "score": 10,
            "critical": false,
            "level": "medium",
            "tags": ["ci-cd", "automation", "integration"]
          }
        ]
      },
      "score": 94,
      "maxScore": 104,
      "percentage": 90,
      "passed": [
        {
          "check": {
            "id": "vitest-config",
            "name": "Vitest Configuration",
            "description": "Проверка конфигурации Vitest тестового фреймворка",
            "category": "vitest",
            "score": 20,
            "critical": true,
            "level": "critical",
            "tags": ["vitest", "config", "testing"]
          },
          "passed": true,
          "score": 20,
          "maxScore": 20,
          "details": "Vitest конфигурация: vitest.config.ts. Тестовое окружение настроено. Глобальные функции включены. Setup файлы настроены. Покрытие кода настроено",
          "recommendations": []
        },
        {
          "check": {
            "id": "vitest-version",
            "name": "Vitest Version",
            "description": "Проверка версии Vitest и сопутствующих пакетов",
            "category": "vitest",
            "score": 15,
            "critical": false,
            "level": "high",
            "tags": ["vitest", "version", "dependencies"]
          },
          "passed": true,
          "score": 15,
          "maxScore": 15,
          "details": "Vitest версия: ^3.2.4. Современная версия 3.x. DOM окружение установлено. Testing Library интегрирована",
          "recommendations": []
        },
        {
          "check": {
            "id": "testing-libraries",
            "name": "Testing Libraries",
            "description": "Проверка установленных тестовых библиотек",
            "category": "vitest",
            "score": 12,
            "critical": false,
            "level": "high",
            "tags": ["testing-library", "dependencies", "dom-testing"]
          },
          "passed": true,
          "score": 12,
          "maxScore": 12,
          "details": "Тестовые библиотеки (3): @testing-library/svelte, @testing-library/jest-dom, jsdom. Svelte компоненты. DOM окружение",
          "recommendations": []
        },
        {
          "check": {
            "id": "coverage-config",
            "name": "Coverage Configuration",
            "description": "Проверка настройки сбора покрытия кода",
            "category": "vitest",
            "score": 15,
            "critical": false,
            "level": "high",
            "tags": ["coverage", "code-quality", "metrics"]
          },
          "passed": true,
          "score": 15,
          "maxScore": 15,
          "details": "Покрытие кода настроено в vitest.config.ts. Провайдер настроен. Пороги заданы. Репортеры настроены. Исключения настроены (4/4 настроек). Отличная конфигурация",
          "recommendations": []
        },
        {
          "check": {
            "id": "test-scripts",
            "name": "Test Scripts",
            "description": "Проверка npm скриптов для тестирования",
            "category": "vitest",
            "score": 10,
            "critical": false,
            "level": "medium",
            "tags": ["npm-scripts", "testing", "automation"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "Тестовые скрипты (6): test, test:unit, test:watch, test:coverage, test:ui, test:run. Vitest команды настроены. Watch режим. Покрытие кода. UI интерфейс",
          "recommendations": []
        },
        {
          "check": {
            "id": "test-file-structure",
            "name": "Test File Structure",
            "description": "Проверка структуры и организации тестовых файлов",
            "category": "vitest",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["file-structure", "organization", "tests"]
          },
          "passed": true,
          "score": 8,
          "maxScore": 8,
          "details": "Тестовые директории: src/tests, src/test, tests",
          "recommendations": []
        },
        {
          "check": {
            "id": "mocking-setup",
            "name": "Mocking Setup",
            "description": "Проверка настройки мокинга для изоляции тестов",
            "category": "vitest",
            "score": 6,
            "critical": false,
            "level": "low",
            "tags": ["mocking", "isolation", "testing"]
          },
          "passed": true,
          "score": 6,
          "maxScore": 6,
          "details": "Мокинг настроен в vitest.config.ts",
          "recommendations": []
        },
        {
          "check": {
            "id": "e2e-integration",
            "name": "E2E Integration",
            "description": "Проверка интеграции с E2E тестированием",
            "category": "vitest",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["e2e", "integration", "playwright"]
          },
          "passed": true,
          "score": 8,
          "maxScore": 8,
          "details": "E2E тестирование: @playwright/test. Скрипты E2E настроены",
          "recommendations": []
        }
      ],
      "failed": [
        {
          "check": {
            "id": "ci-integration",
            "name": "CI Integration",
            "description": "Проверка интеграции Vitest с CI/CD pipeline",
            "category": "vitest",
            "score": 10,
            "critical": false,
            "level": "medium",
            "tags": ["ci-cd", "automation", "integration"]
          },
          "passed": false,
          "score": 0,
          "maxScore": 10,
          "details": "Ошибка чтения workflow файлов: ReferenceError: require is not defined",
          "recommendations": [
            "Добавьте запуск vitest в GitHub Actions workflow",
            "Настройте сбор покрытия кода в CI",
            "Добавьте матричное тестирование для разных версий Node.js",
            "Настройте кеширование зависимостей для ускорения CI"
          ]
        }
      ],
      "warnings": [],
      "recommendations": [
        "Добавьте запуск vitest в GitHub Actions workflow",
        "Настройте сбор покрытия кода в CI",
        "Добавьте матричное тестирование для разных версий Node.js",
        "Настройте кеширование зависимостей для ускорения CI"
      ],
      "duration": 0
    },
    {
      "component": {
        "name": "Dependencies Management",
        "description": "Анализ компонента Dependencies Management",
        "weight": 8,
        "checks": [
          {
            "id": "package-manager",
            "name": "Package Manager",
            "description": "Проверка настройки пакетного менеджера",
            "category": "dependencies",
            "score": 15,
            "critical": true,
            "level": "critical",
            "tags": ["package-manager", "pnpm", "npm", "yarn"]
          },
          {
            "id": "lock-file",
            "name": "Lock File",
            "description": "Проверка наличия и актуальности lock файла",
            "category": "dependencies",
            "score": 12,
            "critical": true,
            "level": "critical",
            "tags": ["lock-file", "reproducibility", "dependencies"]
          },
          {
            "id": "package-json-structure",
            "name": "Package.json Structure",
            "description": "Проверка структуры и полноты package.json",
            "category": "dependencies",
            "score": 10,
            "critical": false,
            "level": "high",
            "tags": ["package-json", "metadata", "structure"]
          },
          {
            "id": "dependency-versions",
            "name": "Dependency Versions",
            "description": "Проверка стратегии версионирования зависимостей",
            "category": "dependencies",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["versioning", "dependencies", "semver"]
          },
          {
            "id": "security-audit",
            "name": "Security Audit",
            "description": "Проверка настройки аудита безопасности зависимостей",
            "category": "dependencies",
            "score": 12,
            "critical": false,
            "level": "high",
            "tags": ["security", "audit", "vulnerabilities"]
          },
          {
            "id": "dependency-updates",
            "name": "Dependency Updates",
            "description": "Проверка настройки автоматических обновлений зависимостей",
            "category": "dependencies",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["updates", "dependabot", "automation"]
          },
          {
            "id": "bundle-analysis",
            "name": "Bundle Analysis",
            "description": "Проверка настройки анализа размера и состава бандла",
            "category": "dependencies",
            "score": 6,
            "critical": false,
            "level": "low",
            "tags": ["bundle", "analysis", "performance"]
          },
          {
            "id": "peer-dependencies",
            "name": "Peer Dependencies",
            "description": "Проверка правильности настройки peer dependencies",
            "category": "dependencies",
            "score": 4,
            "critical": false,
            "level": "low",
            "tags": ["peer-dependencies", "compatibility"]
          },
          {
            "id": "workspace-config",
            "name": "Workspace Configuration",
            "description": "Проверка настройки workspace для монорепозиториев",
            "category": "dependencies",
            "score": 5,
            "critical": false,
            "level": "low",
            "tags": ["workspace", "monorepo", "pnpm"]
          }
        ]
      },
      "score": 68,
      "maxScore": 80,
      "percentage": 85,
      "passed": [
        {
          "check": {
            "id": "package-manager",
            "name": "Package Manager",
            "description": "Проверка настройки пакетного менеджера",
            "category": "dependencies",
            "score": 15,
            "critical": true,
            "level": "critical",
            "tags": ["package-manager", "pnpm", "npm", "yarn"]
          },
          "passed": true,
          "score": 15,
          "maxScore": 15,
          "details": "Пакетный менеджер: pnpm. .npmrc найден. Строгие версии Node.js. Hoisting настроен. Современный и быстрый менеджер",
          "recommendations": []
        },
        {
          "check": {
            "id": "lock-file",
            "name": "Lock File",
            "description": "Проверка наличия и актуальности lock файла",
            "category": "dependencies",
            "score": 12,
            "critical": true,
            "level": "critical",
            "tags": ["lock-file", "reproducibility", "dependencies"]
          },
          "passed": true,
          "score": 12,
          "maxScore": 12,
          "details": "Lock файл найден: pnpm-lock.yaml",
          "recommendations": []
        },
        {
          "check": {
            "id": "package-json-structure",
            "name": "Package.json Structure",
            "description": "Проверка структуры и полноты package.json",
            "category": "dependencies",
            "score": 10,
            "critical": false,
            "level": "high",
            "tags": ["package-json", "metadata", "structure"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "package.json структура. Обязательные поля присутствуют. Метаданные: 5/5. Типы зависимостей: dependencies, devDependencies. Требования к движкам указаны",
          "recommendations": []
        },
        {
          "check": {
            "id": "dependency-versions",
            "name": "Dependency Versions",
            "description": "Проверка стратегии версионирования зависимостей",
            "category": "dependencies",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["versioning", "dependencies", "semver"]
          },
          "passed": true,
          "score": 8,
          "maxScore": 8,
          "details": "Зависимости: 43. Caret (^): 43. Хорошая стратегия версионирования",
          "recommendations": []
        },
        {
          "check": {
            "id": "dependency-updates",
            "name": "Dependency Updates",
            "description": "Проверка настройки автоматических обновлений зависимостей",
            "category": "dependencies",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["updates", "dependabot", "automation"]
          },
          "passed": true,
          "score": 8,
          "maxScore": 8,
          "details": "Dependabot настроен для автоматических обновлений. Расписание настроено. Локальные инструменты обновления установлены",
          "recommendations": []
        },
        {
          "check": {
            "id": "bundle-analysis",
            "name": "Bundle Analysis",
            "description": "Проверка настройки анализа размера и состава бандла",
            "category": "dependencies",
            "score": 6,
            "critical": false,
            "level": "low",
            "tags": ["bundle", "analysis", "performance"]
          },
          "passed": true,
          "score": 6,
          "maxScore": 6,
          "details": "Скрипты анализа бандла настроены",
          "recommendations": []
        },
        {
          "check": {
            "id": "peer-dependencies",
            "name": "Peer Dependencies",
            "description": "Проверка правильности настройки peer dependencies",
            "category": "dependencies",
            "score": 4,
            "critical": false,
            "level": "low",
            "tags": ["peer-dependencies", "compatibility"]
          },
          "passed": true,
          "score": 4,
          "maxScore": 4,
          "details": "Peer dependencies не используются (нормально для приложений)",
          "recommendations": []
        },
        {
          "check": {
            "id": "workspace-config",
            "name": "Workspace Configuration",
            "description": "Проверка настройки workspace для монорепозиториев",
            "category": "dependencies",
            "score": 5,
            "critical": false,
            "level": "low",
            "tags": ["workspace", "monorepo", "pnpm"]
          },
          "passed": true,
          "score": 5,
          "maxScore": 5,
          "details": "Workspace не используется (нормально для одиночных проектов)",
          "recommendations": []
        }
      ],
      "failed": [
        {
          "check": {
            "id": "security-audit",
            "name": "Security Audit",
            "description": "Проверка настройки аудита безопасности зависимостей",
            "category": "dependencies",
            "score": 12,
            "critical": false,
            "level": "high",
            "tags": ["security", "audit", "vulnerabilities"]
          },
          "passed": false,
          "score": 0,
          "maxScore": 12,
          "details": "Аудит безопасности не настроен",
          "recommendations": [
            "Добавьте npm audit или pnpm audit в скрипты",
            "Настройте автоматический аудит в CI/CD",
            "Рассмотрите использование Snyk для расширенного аудита",
            "Регулярно проверяйте и исправляйте уязвимости"
          ]
        }
      ],
      "warnings": [],
      "recommendations": [
        "Добавьте npm audit или pnpm audit в скрипты",
        "Настройте автоматический аудит в CI/CD",
        "Рассмотрите использование Snyk для расширенного аудита",
        "Регулярно проверяйте и исправляйте уязвимости"
      ],
      "duration": 0
    },
    {
      "component": {
        "name": "Logging System",
        "description": "Анализ компонента Logging System",
        "weight": 8,
        "checks": [
          {
            "id": "logging-libraries",
            "name": "Logging Libraries",
            "description": "Проверка установленных библиотек логирования",
            "category": "logging",
            "score": 20,
            "critical": false,
            "level": "high",
            "tags": ["logging", "libraries", "winston", "pino"]
          },
          {
            "id": "logging-configuration",
            "name": "Logging Configuration",
            "description": "Проверка конфигурации системы логирования",
            "category": "logging",
            "score": 15,
            "critical": false,
            "level": "high",
            "tags": ["configuration", "setup", "winston"]
          },
          {
            "id": "log-levels",
            "name": "Log Levels",
            "description": "Проверка настройки и использования уровней логирования",
            "category": "logging",
            "score": 10,
            "critical": false,
            "level": "medium",
            "tags": ["log-levels", "error", "warn", "info", "debug"]
          },
          {
            "id": "console-usage",
            "name": "Console Usage Control",
            "description": "Проверка контроля использования console.log в коде",
            "category": "logging",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["console", "eslint", "code-quality"]
          },
          {
            "id": "error-handling",
            "name": "Error Handling",
            "description": "Проверка глобальной обработки и логирования ошибок",
            "category": "logging",
            "score": 12,
            "critical": false,
            "level": "high",
            "tags": ["error-handling", "sentry", "monitoring"]
          },
          {
            "id": "production-logging",
            "name": "Production Logging",
            "description": "Проверка настройки логирования для production окружения",
            "category": "logging",
            "score": 15,
            "critical": false,
            "level": "high",
            "tags": ["production", "environment", "file-logging"]
          }
        ]
      },
      "score": 68,
      "maxScore": 80,
      "percentage": 85,
      "passed": [
        {
          "check": {
            "id": "logging-libraries",
            "name": "Logging Libraries",
            "description": "Проверка установленных библиотек логирования",
            "category": "logging",
            "score": 20,
            "critical": false,
            "level": "high",
            "tags": ["logging", "libraries", "winston", "pino"]
          },
          "passed": true,
          "score": 20,
          "maxScore": 20,
          "details": "Библиотеки логирования (1): winston. Структурированное логирование",
          "recommendations": []
        },
        {
          "check": {
            "id": "logging-configuration",
            "name": "Logging Configuration",
            "description": "Проверка конфигурации системы логирования",
            "category": "logging",
            "score": 15,
            "critical": false,
            "level": "high",
            "tags": ["configuration", "setup", "winston"]
          },
          "passed": true,
          "score": 15,
          "maxScore": 15,
          "details": "Модуль логирования: src/lib/logger.ts. Winston настроен. Уровни логирования настроены. Форматирование настроено. Транспорты настроены",
          "recommendations": []
        },
        {
          "check": {
            "id": "log-levels",
            "name": "Log Levels",
            "description": "Проверка настройки и использования уровней логирования",
            "category": "logging",
            "score": 10,
            "critical": false,
            "level": "medium",
            "tags": ["log-levels", "error", "warn", "info", "debug"]
          },
          "passed": true,
          "score": 10,
          "maxScore": 10,
          "details": "Уровни логирования определены (error, warn, info, debug). Уровни зависят от окружения",
          "recommendations": []
        },
        {
          "check": {
            "id": "console-usage",
            "name": "Console Usage Control",
            "description": "Проверка контроля использования console.log в коде",
            "category": "logging",
            "score": 8,
            "critical": false,
            "level": "medium",
            "tags": ["console", "eslint", "code-quality"]
          },
          "passed": true,
          "score": 8,
          "maxScore": 8,
          "details": "ESLint правило no-console настроено",
          "recommendations": []
        },
        {
          "check": {
            "id": "production-logging",
            "name": "Production Logging",
            "description": "Проверка настройки логирования для production окружения",
            "category": "logging",
            "score": 15,
            "critical": false,
            "level": "high",
            "tags": ["production", "environment", "file-logging"]
          },
          "passed": true,
          "score": 15,
          "maxScore": 15,
          "details": "Production логирование настроено в src/lib/logger.ts. Файловое логирование. JSON формат. Фильтрация по уровням",
          "recommendations": []
        }
      ],
      "failed": [
        {
          "check": {
            "id": "error-handling",
            "name": "Error Handling",
            "description": "Проверка глобальной обработки и логирования ошибок",
            "category": "logging",
            "score": 12,
            "critical": false,
            "level": "high",
            "tags": ["error-handling", "sentry", "monitoring"]
          },
          "passed": false,
          "score": 0,
          "maxScore": 12,
          "details": "Глобальная обработка ошибок не настроена",
          "recommendations": [
            "Настройте глобальные обработчики ошибок",
            "Интегрируйте Sentry или аналогичный сервис мониторинга",
            "Логируйте все неперехваченные ошибки",
            "Добавьте контекстную информацию к ошибкам"
          ]
        }
      ],
      "warnings": [],
      "recommendations": [
        "Настройте глобальные обработчики ошибок",
        "Интегрируйте Sentry или аналогичный сервис мониторинга",
        "Логируйте все неперехваченные ошибки",
        "Добавьте контекстную информацию к ошибкам"
      ],
      "duration": 0
    }
  ],
  "summary": {
    "totalScore": 729,
    "maxScore": 763,
    "percentage": 96,
    "passedChecks": 68,
    "totalChecks": 71,
    "criticalIssues": 0
  },
  "recommendations": [
    "Добавьте запуск vitest в GitHub Actions workflow",
    "Настройте сбор покрытия кода в CI",
    "Добавьте матричное тестирование для разных версий Node.js",
    "Настройте кеширование зависимостей для ускорения CI",
    "Добавьте npm audit или pnpm audit в скрипты",
    "Настройте автоматический аудит в CI/CD",
    "Рассмотрите использование Snyk для расширенного аудита",
    "Регулярно проверяйте и исправляйте уязвимости",
    "Настройте глобальные обработчики ошибок",
    "Интегрируйте Sentry или аналогичный сервис мониторинга",
    "Логируйте все неперехваченные ошибки",
    "Добавьте контекстную информацию к ошибкам"
  ],
  "analyzedAt": "2025-09-08T12:12:00.443Z",
  "duration": 118
}
