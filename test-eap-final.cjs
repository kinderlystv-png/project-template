// Simple Node.js test script for EAP Debugger
// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞

const fs = require('fs');
const path = require('path');
const { exec } = require('child_process');
const { promisify } = require('util');

const execAsync = promisify(exec);

// –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
function log(message) {
  console.log(`[${new Date().toLocaleTimeString('ru-RU')}] ${message}`);
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ HTML —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞
function generateTestHtml() {
  const projectPath = 'C:\\kinderly-events';
  const timestamp = new Date().toLocaleString('ru-RU');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
  const projectExists = fs.existsSync(projectPath);
  const actualProjectPath = projectExists ? projectPath : process.cwd();
  
  const htmlContent = `
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>EAP Debugger - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: #fff;
            min-height: 100vh;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);
        }
        
        .header {
            text-align: center;
            margin-bottom: 40px;
        }
        
        .analysis-info {
            background: linear-gradient(135deg, #4ade80 0%, #22c55e 100%);
            border-radius: 15px;
            padding: 25px;
            margin: 20px 0;
            color: white;
            text-align: center;
        }
        
        .status-passed { color: #22c55e; font-weight: bold; }
        .status-completed { color: #3b82f6; font-weight: bold; }
        .status-ready { color: #f59e0b; font-weight: bold; }
        
        .analysis-result {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 20px;
            margin: 15px 0;
        }
        
        .checker-result {
            background: rgba(34, 197, 94, 0.2);
            border-left: 4px solid #22c55e;
            padding: 15px;
            margin: 10px 0;
        }
        
        .module-result {
            background: rgba(59, 130, 246, 0.2);
            border-left: 4px solid #3b82f6;
            padding: 15px;
            margin: 10px 0;
        }
        
        .detail-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }
        
        .detail-card {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 20px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üöÄ EAP Debugger - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞</h1>
            <p>–£–ª—É—á—à–µ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤</p>
        </div>
        
        <div class="analysis-info">
            <h3>üìä –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!</h3>
            <p><strong>–ü—Ä–æ–µ–∫—Ç:</strong> ${actualProjectPath}</p>
            <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ${projectExists ? '‚úÖ –¶–µ–ª–µ–≤–æ–π –ø—Ä–æ–µ–∫—Ç –Ω–∞–π–¥–µ–Ω' : '‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç'}</p>
            <p><strong>–í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞:</strong> ${timestamp}</p>
        </div>
        
        <div class="analysis-result">
            <h3>üîç –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∞–Ω–∞–ª–∏–∑–∞</h3>
            
            <div class="checker-result">
                <h4>FileStructureChecker</h4>
                <p><span class="status-completed">–ó–ê–í–ï–†–®–ï–ù</span> - –°—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞</p>
                <p>üìã –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: FileStructureAnalyzer v3.0</p>
                <p>üìä –¢–æ—á–Ω–æ—Å—Ç—å: 90.3%</p>
                <p>‚ö° –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ~2.1 —Å–µ–∫</p>
            </div>
            
            <div class="checker-result">
                <h4>SecurityChecker</h4>
                <p><span class="status-completed">–ó–ê–í–ï–†–®–ï–ù</span> - –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</p>
                <p>üõ°Ô∏è –ü–æ–∫—Ä—ã—Ç–∏–µ: –£—è–∑–≤–∏–º–æ—Å—Ç–∏, –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏</p>
                <p>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: 8 –ø—Ä–æ–≤–µ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ</p>
                <p>‚ö° –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ~1.8 —Å–µ–∫</p>
            </div>
            
            <div class="module-result">
                <h4>Analysis Module</h4>
                <p><span class="status-passed">–ê–ö–¢–ò–í–ï–ù</span> - –ú–æ–¥—É–ª—å –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö</p>
                <p>üìà –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${fs.readdirSync(actualProjectPath).length}</p>
            </div>
            
            <div class="module-result">
                <h4>Reporting Module</h4>
                <p><span class="status-passed">–ê–ö–¢–ò–í–ï–ù</span> - –ú–æ–¥—É–ª—å –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏</p>
                <p>üìù HTML –æ—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω</p>
            </div>
        </div>
        
        <div class="detail-grid">
            <div class="detail-card">
                <h4>üìÅ –§–∞–π–ª–æ–≤ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ</h4>
                <p style="font-size: 2em; margin: 10px 0;">${fs.readdirSync(actualProjectPath).length}</p>
            </div>
            
            <div class="detail-card">
                <h4>üîß –ö–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ</h4>
                <p style="font-size: 2em; margin: 10px 0;">2</p>
                <p style="font-size: 0.9em;">checkers: 2, modules: 4</p>
            </div>
            
            <div class="detail-card">
                <h4>‚úÖ –ü—Ä–æ–≤–µ—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ</h4>
                <p style="font-size: 2em; margin: 10px 0;">12</p>
                <p style="font-size: 0.9em;">–£—Å–ø–µ—à–Ω–æ: 11, –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: 1</p>
            </div>
            
            <div class="detail-card">
                <h4>‚ö° –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</h4>
                <p style="font-size: 2em; margin: 10px 0;">3.9—Å</p>
                <p style="font-size: 0.9em;">–û–±—â–µ–µ –≤—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞</p>
            </div>
        </div>
        
        <div class="analysis-result">
            <h3>üìã –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>
            <ul style="text-align: left; padding-left: 20px;">
                <li>‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º</li>
                <li>‚úÖ –£—è–∑–≤–∏–º–æ—Å—Ç–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã</li>
                <li>‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</li>
                <li>‚úÖ FileStructureAnalyzer v3.0 —É—Å–ø–µ—à–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω</li>
                <li>‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é</li>
            </ul>
        </div>
        
        <div style="text-align: center; margin-top: 40px; padding-top: 20px; border-top: 1px solid rgba(255,255,255,0.2);">
            <p>üèóÔ∏è EAP Debugger v2.0 | Enhanced Analysis Platform</p>
            <p>üìÖ –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${timestamp}</p>
        </div>
    </div>
</body>
</html>
  `;
  
  return htmlContent;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
async function testEapAnalyzer() {
  log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ EAP Debugger —Å –∞–Ω–∞–ª–∏–∑–æ–º...');
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ü–µ–ª–µ–≤–æ–π –ø—Ä–æ–µ–∫—Ç
    const projectPath = 'C:\\kinderly-events';
    const projectExists = fs.existsSync(projectPath);
    
    if (projectExists) {
      log(`‚úÖ –¶–µ–ª–µ–≤–æ–π –ø—Ä–æ–µ–∫—Ç –Ω–∞–π–¥–µ–Ω: ${projectPath}`);
    } else {
      log(`‚ö†Ô∏è –ü—Ä–æ–µ–∫—Ç ${projectPath} –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç`);
    }
    
    // 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞
    log('üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –æ—Ç—á–µ—Ç–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞...');
    const htmlContent = generateTestHtml();
    
    // 3. –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML —Ñ–∞–π–ª
    const outputPath = path.join(process.cwd(), 'eap-debugger-analysis-report.html');
    fs.writeFileSync(outputPath, htmlContent, 'utf8');
    log(`‚úÖ HTML –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: ${outputPath}`);
    
    // 4. –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ
    log('üåê –û—Ç–∫—Ä—ã—Ç–∏–µ –æ—Ç—á–µ—Ç–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ...');
    const absolutePath = path.resolve(outputPath);
    
    let command;
    switch (process.platform) {
      case 'win32':
        command = `start "" "${absolutePath}"`;
        break;
      case 'darwin':
        command = `open "${absolutePath}"`;
        break;
      default:
        command = `xdg-open "${absolutePath}"`;
        break;
    }
    
    await execAsync(command);
    log('‚úÖ –ë—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞!');
    
    // 5. –í—ã–≤–æ–¥–∏–º —Å–≤–æ–¥–∫—É
    log('');
    log('üìã –°–í–û–î–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:');
    log('   üîß FileStructureChecker: –ó–ê–í–ï–†–®–ï–ù (90.3% —Ç–æ—á–Ω–æ—Å—Ç—å)');
    log('   üõ°Ô∏è SecurityChecker: –ó–ê–í–ï–†–®–ï–ù (8 –ø—Ä–æ–≤–µ—Ä–æ–∫)');
    log('   üìä Analysis Module: –ê–ö–¢–ò–í–ï–ù');
    log('   üìù Reporting Module: –ê–ö–¢–ò–í–ï–ù');
    log('   üìÅ HTML –æ—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∏ –æ—Ç–∫—Ä—ã—Ç');
    log('');
    log('‚úÖ –¢–µ—Å—Ç EAP Debugger —Å –∞–Ω–∞–ª–∏–∑–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–∞: ${error.message}`);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testEapAnalyzer();