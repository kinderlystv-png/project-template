/**
 * –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ EAP Debugger –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 */
/* eslint-disable no-console */
/* eslint-disable @typescript-eslint/no-explicit-any */

import { EapDebugger } from './eap-debugger/src/EapDebugger.js';

// –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –≤–µ—Ä—Å–∏—é –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const createTestOrchestrator = () => {
  return {
    checkers: new Map([
      [
        'StructureChecker',
        {
          constructor: { name: 'StructureChecker' },
          check: () =>
            Promise.resolve({ passed: true, report: '–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞' }),
          getName(): string {
            return 'Updated File Structure Checker';
          },
        },
      ],
      [
        'SecurityChecker',
        {
          constructor: { name: 'SecurityChecker' },
          check: () => Promise.resolve({ passed: true, report: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ—Ä–µ–Ω–∞' }),
          getName(): string {
            return 'Security Analysis Checker';
          },
        },
      ],
    ]),
    modules: new Map([
      [
        'TechnicalDebtAnalyzer',
        {
          constructor: { name: 'SimpleTechnicalDebtAnalyzer' },
          analyze: () => Promise.resolve({ score: 75, debt: 12000 }),
          getName(): string {
            return 'Updated Technical Debt Analyzer';
          },
        },
      ],
    ]),
  };
};

const runDebugger = async () => {
  console.log('üîç –ó–∞–ø—É—Å–∫ EAP Debugger –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞...\n');

  try {
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä (–∏–º–∏—Ç–∞—Ü–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è)
    const orchestrator = createTestOrchestrator();

    console.log('üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:');
    console.log(`  - –ß–µ–∫–µ—Ä–æ–≤: ${orchestrator.checkers.size}`);
    console.log(`  - –ú–æ–¥—É–ª–µ–π: ${orchestrator.modules.size}\n`);

    // –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–±–∞–≥–≥–µ—Ä —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ—Ç–∫—Ä—ã—Ç–∏–µ–º –±—Ä–∞—É–∑–µ—Ä–∞
    console.log('üåê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞...');

    const html = await EapDebugger.quickGenerateAndOpen(
      orchestrator,
      './eap-current-orchestrator-debug.html'
    );

    console.log(`‚úÖ HTML —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: ${html.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    console.log('üìÅ –§–∞–π–ª: eap-current-orchestrator-debug.html');
    console.log('üåê –ë—Ä–∞—É–∑–µ—Ä –¥–æ–ª–∂–µ–Ω –æ—Ç–∫—Ä—ã—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π!');

    // –¢–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const eapDebugger = new EapDebugger();
    await eapDebugger.generateComponentsHtml(orchestrator);

    const stats = eapDebugger.getComponentStats();
    console.log('\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:');
    console.log(JSON.stringify(stats, null, 2));

    const state = eapDebugger.getState();
    console.log('\nüîç –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–µ–±–∞–≥–≥–µ—Ä–∞:');
    console.log(`  - –í—Å–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: ${state.components.totalCount}`);
    console.log(
      `  - –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${state.components.lastUpdated.toLocaleString('ru-RU')}`
    );
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –¥–µ–±–∞–≥–≥–µ—Ä–∞:', error);
  }
};

console.log('üöÄ –ó–∞–ø—É—Å–∫ –æ—Ç–ª–∞–¥—á–∏–∫–∞ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞...\n');
runDebugger().catch(console.error);
