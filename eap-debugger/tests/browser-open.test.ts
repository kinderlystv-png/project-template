/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –∞–≤—Ç–æ–æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞
 */
/* eslint-disable no-console */
/* eslint-disable @typescript-eslint/no-explicit-any */

import { EapDebugger } from '../src/EapDebugger.js';

const testAutoOpen = async () => {
  console.log('üß™ –¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è –±—Ä–∞—É–∑–µ—Ä–∞\n');

  // –ü—Ä–æ—Å—Ç–æ–π –º–æ–∫ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  const mockOrchestrator: any = {
    checkers: new Map([
      [
        'TestChecker',
        {
          constructor: { name: 'TestChecker' },
          check: () => Promise.resolve({ passed: true }),
          getName() {
            return 'Test Browser Opener Checker';
          },
        },
      ],
    ]),
    modules: new Map([
      [
        'TestModule',
        {
          constructor: { name: 'TestModule' },
          analyze: () => Promise.resolve({ score: 95 }),
          getName() {
            return 'Test Browser Opener Module';
          },
        },
      ],
    ]),
  };

  try {
    console.log('üìÑ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ...');

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥ —Å –∞–≤—Ç–æ–æ—Ç–∫—Ä—ã—Ç–∏–µ–º –±—Ä–∞—É–∑–µ—Ä–∞
    const html = await EapDebugger.quickGenerateAndOpen(
      mockOrchestrator,
      './eap-auto-browser-test.html'
    );

    console.log(`‚úÖ HTML —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: ${html.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    console.log('üìÅ –§–∞–π–ª: eap-auto-browser-test.html');
    console.log('üåê –ë—Ä–∞—É–∑–µ—Ä –¥–æ–ª–∂–µ–Ω –±—ã–ª –æ—Ç–∫—Ä—ã—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!');

    // –¢–∞–∫–∂–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä–Ω—ã–π –º–µ—Ç–æ–¥
    console.log('\nüîß –¢–µ—Å—Ç —Å —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–º –∫–ª–∞—Å—Å–∞...');
    const eapDebugger = new EapDebugger();

    await eapDebugger.generateComponentsHtmlWithAutoOpen(
      mockOrchestrator,
      './eap-instance-test.html',
      true
    );

    console.log('‚úÖ –í—Ç–æ—Ä–æ–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
    console.log('üìÅ –§–∞–π–ª: eap-instance-test.html');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ:', error);
  }
};

testAutoOpen().catch(console.error);
