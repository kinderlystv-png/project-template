/**
 * OrchestratorIntegration - –º–æ–¥—É–ª—å –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ EapDebugger —Å AnalysisOrchestrator
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π HTML –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∞–Ω–∞–ª–∏–∑–∞
 */
/* eslint-disable no-console */
/* eslint-disable @typescript-eslint/no-explicit-any */

import { EapDebugger } from '../EapDebugger.js';

export interface OrchestratorHooks {
  onAnalysisStart?: (orchestrator: any) => Promise<void>;
  onAnalysisComplete?: (orchestrator: any, results?: any) => Promise<void>;
  onComponentRegistered?: (orchestrator: any, componentName: string) => Promise<void>;
}

/**
 * –ö–ª–∞—Å—Å –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ EapDebugger —Å AnalysisOrchestrator
 */
export class OrchestratorIntegration {
  private static instance: OrchestratorIntegration;
  private eapDebugger: EapDebugger;
  private isEnabled: boolean = true;
  private autoOpenBrowser: boolean = true;
  private debugHtmlPath: string;

  private constructor() {
    this.eapDebugger = new EapDebugger();
    this.debugHtmlPath = './eap-live-debug.html';
  }

  /**
   * Singleton pattern –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
   */
  public static getInstance(): OrchestratorIntegration {
    if (!OrchestratorIntegration.instance) {
      OrchestratorIntegration.instance = new OrchestratorIntegration();
    }
    return OrchestratorIntegration.instance;
  }

  /**
   * –í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –æ—Ç–ª–∞–¥–∫—É
   */
  public setEnabled(enabled: boolean): void {
    this.isEnabled = enabled;
  }

  /**
   * –í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
   */
  public setAutoOpenBrowser(autoOpen: boolean): void {
    this.autoOpenBrowser = autoOpen;
  }

  /**
   * –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø—É—Ç—å –¥–ª—è HTML —Ñ–∞–π–ª–∞ –æ—Ç–ª–∞–¥–∫–∏
   */
  public setDebugHtmlPath(path: string): void {
    this.debugHtmlPath = path;
  }

  /**
   * –•—É–∫ –¥–ª—è –≤—ã–∑–æ–≤–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –∞–Ω–∞–ª–∏–∑–∞
   */
  public async onAnalysisStart(orchestrator: any): Promise<void> {
    if (!this.isEnabled) return;

    try {
      console.log('üöÄ EAP Integration: –ê–Ω–∞–ª–∏–∑ –Ω–∞—á–∞—Ç, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π HTML...');

      if (this.autoOpenBrowser) {
        await this.eapDebugger.generateComponentsHtmlWithAutoOpen(
          orchestrator,
          this.debugHtmlPath,
          true
        );
      } else {
        await this.eapDebugger.generateComponentsHtml(orchestrator, this.debugHtmlPath);
      }

      // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã –≤–æ –≤—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞
      this.eapDebugger.startAutoRefresh(orchestrator, this.debugHtmlPath, 3000);
    } catch (error) {
      console.error('‚ùå EAP Integration: –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–≥–æ HTML:', error);
    }
  }

  /**
   * –•—É–∫ –¥–ª—è –≤—ã–∑–æ–≤–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏–∑–∞
   */
  public async onAnalysisComplete(orchestrator: any, _results?: any): Promise<void> {
    if (!this.isEnabled) return;

    try {
      console.log('‚úÖ EAP Integration: –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω, –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–ª–∞–¥–æ—á–Ω—ã–π HTML...');

      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
      this.eapDebugger.stopAutoRefresh();

      // –§–∏–Ω–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ HTML —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
      await this.eapDebugger.generateComponentsHtml(orchestrator, this.debugHtmlPath);

      console.log(`üìÑ EAP Integration: –û—Ç–ª–∞–¥–æ—á–Ω—ã–π HTML –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –ø—É—Ç–∏: ${this.debugHtmlPath}`);
    } catch (error) {
      console.error('‚ùå EAP Integration: –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ HTML:', error);
    }
  }

  /**
   * –•—É–∫ –¥–ª—è –≤—ã–∑–æ–≤–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–≤–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
   */
  public async onComponentRegistered(orchestrator: any, componentName: string): Promise<void> {
    if (!this.isEnabled) return;

    try {
      console.log(`üîß EAP Integration: –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: ${componentName}`);

      // –û–±–Ω–æ–≤–ª—è–µ–º HTML –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      await this.eapDebugger.generateComponentsHtml(orchestrator, this.debugHtmlPath);
    } catch (error) {
      console.error(
        '‚ùå EAP Integration: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ HTML –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:',
        error
      );
    }
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Å —Ö—É–∫–∞–º–∏ –¥–ª—è —É–¥–æ–±–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
   */
  public getHooks(): OrchestratorHooks {
    return {
      onAnalysisStart: this.onAnalysisStart.bind(this),
      onAnalysisComplete: this.onAnalysisComplete.bind(this),
      onComponentRegistered: this.onComponentRegistered.bind(this),
    };
  }

  /**
   * –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
   */
  public static setupQuickIntegration(
    autoOpenBrowser = true,
    htmlPath = './eap-live-debug.html'
  ): OrchestratorHooks {
    const integration = OrchestratorIntegration.getInstance();
    integration.setAutoOpenBrowser(autoOpenBrowser);
    integration.setDebugHtmlPath(htmlPath);
    return integration.getHooks();
  }

  /**
   * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–ª–∞–¥–æ—á–Ω–æ–≥–æ HTML (—Ä—É—á–Ω–æ–π –≤—ã–∑–æ–≤)
   */
  public async generateDebugHtmlNow(orchestrator: any, openInBrowser = false): Promise<string> {
    if (openInBrowser) {
      return await this.eapDebugger.generateComponentsHtmlWithAutoOpen(
        orchestrator,
        this.debugHtmlPath,
        true
      );
    } else {
      return await this.eapDebugger.generateComponentsHtml(orchestrator, this.debugHtmlPath);
    }
  }

  /**
   * Cleanup –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã
   */
  public destroy(): void {
    this.eapDebugger.destroy();
  }
}
