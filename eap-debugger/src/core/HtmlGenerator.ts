/**
 * –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä HTML —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è EAP Debugger
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML –Ω–∞ –æ—Å–Ω–æ–≤–µ —à–∞–±–ª–æ–Ω–∞ –∏ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
 */

import * as fs from 'fs';
import * as path from 'path';
import { fileURLToPath } from 'url';
import type { ComponentRegistration, DebuggerComponent } from '../models/Component.js';

export class HtmlGenerator {
  private templatePath: string;

  constructor() {
    // –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ eap-debugger –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Ç–æ–≥–æ, –æ—Ç–∫—É–¥–∞ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è
    const currentDir = path.dirname(fileURLToPath(import.meta.url));
    // –ò–¥–µ–º –≤–≤–µ—Ä—Ö –æ—Ç core/ –∫ eap-debugger/, –∑–∞—Ç–µ–º –∫ templates/
    this.templatePath = path.resolve(currentDir, '..', 'templates', 'components.html');
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
   */
  public async generateHtml(registration: ComponentRegistration): Promise<string> {
    let template = await this.loadTemplate();

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    const allComponents = [...registration.checkers, ...registration.modules];

    // –ó–∞–º–µ–Ω—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã –≤ —à–∞–±–ª–æ–Ω–µ (–∏—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –∑–∞–º–µ–Ω—É)
    template = template.replace(
      /\{\{COMPONENTS_LIST\}\}/g,
      this.generateComponentsList(allComponents)
    );
    template = template.replace(/\{\{TOTAL_COUNT\}\}/g, registration.totalCount.toString());
    template = template.replace(/\{\{CHECKERS_COUNT\}\}/g, registration.checkers.length.toString());
    template = template.replace(/\{\{MODULES_COUNT\}\}/g, registration.modules.length.toString());
    template = template.replace(
      /\{\{CHECKERS_LIST\}\}/g,
      this.generateComponentsList(registration.checkers)
    );
    template = template.replace(
      /\{\{MODULES_LIST\}\}/g,
      this.generateComponentsList(registration.modules)
    );
    template = template.replace(
      /\{\{LAST_UPDATED\}\}/g,
      registration.lastUpdated.toLocaleString('ru-RU')
    );

    // –£–±–∏—Ä–∞–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –∞–Ω–∞–ª–∏–∑–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    template = template.replace(/\{\{ANALYSIS_INFO\}\}/g, '');

    return template;
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç HTML –≤ —Ñ–∞–π–ª
   */
  public async saveHtml(html: string, outputPath: string): Promise<void> {
    try {
      // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
      await fs.promises.mkdir(path.dirname(outputPath), { recursive: true });

      // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª
      await fs.promises.writeFile(outputPath, html, 'utf-8');
    } catch (error) {
      throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å HTML: ${error}`);
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –≤ HTML —Ñ–æ—Ä–º–∞—Ç–µ
   */
  private generateComponentsList(components: DebuggerComponent[]): string {
    if (components.length === 0) {
      return '<div class="no-components">–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</div>';
    }

    return components.map(component => this.generateComponentCard(component)).join('\n');
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML –∫–∞—Ä—Ç–æ—á–∫—É –¥–ª—è –æ–¥–Ω–æ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
   */
  private generateComponentCard(component: DebuggerComponent): string {
    const typeClass = component.category === 'checker' ? 'checker' : 'module';
    const typeIcon = component.category === 'checker' ? 'üîç' : '‚öôÔ∏è';

    return `
      <div class="component-card ${typeClass}">
        <div class="component-header">
          <span class="component-icon">${typeIcon}</span>
          <div class="component-info">
            <h3 class="component-name">${this.escapeHtml(component.name)}</h3>
            <span class="component-type">${component.category}</span>
          </div>
        </div>
        <div class="component-details">
          <div class="component-id"><strong>ID:</strong> ${this.escapeHtml(component.id)}</div>
          <div class="component-active"><strong>–ê–∫—Ç–∏–≤–µ–Ω:</strong> ${component.isActive ? '–î–∞' : '–ù–µ—Ç'}</div>
          <div class="component-registered"><strong>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:</strong> ${component.registeredAt.toLocaleString('ru-RU')}</div>
          ${component.path ? `<div class="component-path"><strong>–ü—É—Ç—å:</strong> ${this.escapeHtml(component.path)}</div>` : ''}
          ${
            component.metadata
              ? `<div class="component-metadata">
            <strong>–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:</strong>
            <pre>${this.escapeHtml(JSON.stringify(component.metadata, null, 2))}</pre>
          </div>`
              : ''
          }
        </div>
      </div>`;
  } /**
   * –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç HTML —Å–∏–º–≤–æ–ª—ã (–ø—Ä–æ—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è Node.js)
   */
  private escapeHtml(text: string): string {
    return text
      .replace(/&/g, '&amp;')
      .replace(/</g, '&lt;')
      .replace(/>/g, '&gt;')
      .replace(/"/g, '&quot;')
      .replace(/'/g, '&#39;');
  }

  /**
   * –ó–∞–≥—Ä—É–∂–∞–µ—Ç HTML —à–∞–±–ª–æ–Ω
   */
  private async loadTemplate(): Promise<string> {
    try {
      return await fs.promises.readFile(this.templatePath, 'utf-8');
    } catch (error) {
      throw new Error(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —à–∞–±–ª–æ–Ω: ${this.templatePath}. Error: ${error}`);
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º
   */
  public getComponentStats(components: DebuggerComponent[]): Record<string, number> {
    return {
      total: components.length,
      checkers: components.filter(c => c.type === 'checker').length,
      modules: components.filter(c => c.type === 'module').length,
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞
   */
  public async generateHtmlWithResults(
    registration: ComponentRegistration,
    analysisResult: unknown,
    projectPath: string
  ): Promise<string> {
    let template = await this.loadTemplate();

    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    const allComponents = [...registration.checkers, ...registration.modules];

    // –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—ã
    template = template.replace(
      /\{\{COMPONENTS_LIST\}\}/g,
      this.generateComponentsListWithResults(allComponents)
    );
    template = template.replace(/\{\{TOTAL_COUNT\}\}/g, registration.totalCount.toString());
    template = template.replace(/\{\{CHECKERS_COUNT\}\}/g, registration.checkers.length.toString());
    template = template.replace(/\{\{MODULES_COUNT\}\}/g, registration.modules.length.toString());
    template = template.replace(
      /\{\{CHECKERS_LIST\}\}/g,
      this.generateComponentsListWithResults(registration.checkers)
    );
    template = template.replace(
      /\{\{MODULES_LIST\}\}/g,
      this.generateComponentsListWithResults(registration.modules)
    );
    template = template.replace(
      /\{\{LAST_UPDATED\}\}/g,
      registration.lastUpdated.toLocaleString('ru-RU')
    );

    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–Ω–∞–ª–∏–∑–µ
    template = template.replace(
      /\{\{ANALYSIS_INFO\}\}/g,
      this.generateAnalysisInfo(analysisResult, projectPath)
    );

    return template;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞
   */
  private generateComponentsListWithResults(components: DebuggerComponent[]): string {
    if (components.length === 0) {
      return '<div class="no-components">–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤</div>';
    }

    return components.map(component => this.generateComponentCardWithResults(component)).join('\n');
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML –∫–∞—Ä—Ç–æ—á–∫—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞
   */
  private generateComponentCardWithResults(component: DebuggerComponent): string {
    const typeClass = component.category === 'checker' ? 'checker' : 'module';
    const typeIcon = component.category === 'checker' ? 'üîç' : '‚öôÔ∏è';

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∏ —Ü–≤–µ—Ç
    let statusClass = 'status-unknown';
    let statusText = '–ù–µ –∑–∞–ø—É—Å–∫–∞–ª—Å—è';
    let statusIcon = '‚è∏Ô∏è';

    if (component.analysisResult) {
      if (component.status === 'passed') {
        statusClass = 'status-passed';
        statusText = '–ü—Ä–æ–π–¥–µ–Ω';
        statusIcon = '‚úÖ';
      } else if (component.status === 'failed') {
        statusClass = 'status-failed';
        statusText = '–ü—Ä–æ–≤–∞–ª–µ–Ω';
        statusIcon = '‚ùå';
      } else if (component.status === 'completed') {
        statusClass = 'status-completed';
        statusText = '–ó–∞–≤–µ—Ä—à–µ–Ω';
        statusIcon = 'üéØ';
      }
    }

    return `
      <div class="component-card ${typeClass}">
        <div class="component-header">
          <span class="component-icon">${typeIcon}</span>
          <div class="component-info">
            <h3 class="component-name">${this.escapeHtml(component.name)}</h3>
            <span class="component-type">${component.category}</span>
            <span class="component-status ${statusClass}">${statusIcon} ${statusText}</span>
          </div>
        </div>
        <div class="component-details">
          <div class="component-id"><strong>ID:</strong> ${this.escapeHtml(component.id)}</div>
          <div class="component-active"><strong>–ê–∫—Ç–∏–≤–µ–Ω:</strong> ${component.isActive ? '–î–∞' : '–ù–µ—Ç'}</div>
          <div class="component-registered"><strong>–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:</strong> ${component.registeredAt.toLocaleString('ru-RU')}</div>
          ${component.lastRun ? `<div class="component-last-run"><strong>–ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–ø—É—Å–∫:</strong> ${component.lastRun.toLocaleString('ru-RU')}</div>` : ''}
          ${component.path ? `<div class="component-path"><strong>–ü—É—Ç—å:</strong> ${this.escapeHtml(component.path)}</div>` : ''}
          ${this.generateAnalysisResultSection(component)}
          ${
            component.metadata
              ? `<div class="component-metadata">
            <strong>–ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:</strong>
            <pre>${this.escapeHtml(JSON.stringify(component.metadata, null, 2))}</pre>
          </div>`
              : ''
          }
        </div>
      </div>`;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–µ–∫—Ü–∏—é —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
   */
  private generateAnalysisResultSection(component: DebuggerComponent): string {
    if (!component.analysisResult) {
      return '<div class="analysis-result"><strong>–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:</strong> –ù–µ –≤—ã–ø–æ–ª–Ω—è–ª—Å—è</div>';
    }

    const result = component.analysisResult as Record<string, unknown>;

    if (component.category === 'checker') {
      const score = typeof result.score === 'number' ? result.score : 0;
      const message = typeof result.message === 'string' ? result.message : '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è';
      const recommendations = Array.isArray(result.recommendations) ? result.recommendations : [];

      return `
        <div class="analysis-result">
          <strong>–†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏:</strong>
          <div class="checker-result">
            <div class="score">–û—Ü–µ–Ω–∫–∞: ${score}/100</div>
            <div class="message">${this.escapeHtml(message)}</div>
            ${
              recommendations.length > 0
                ? `
              <div class="recommendations">
                <strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</strong>
                <ul>
                  ${recommendations.map((rec: unknown) => `<li>${this.escapeHtml(String(rec))}</li>`).join('')}
                </ul>
              </div>
            `
                : ''
            }
          </div>
        </div>
      `;
    } else {
      return `
        <div class="analysis-result">
          <strong>–†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –º–æ–¥—É–ª—è:</strong>
          <pre class="module-result">${this.escapeHtml(JSON.stringify(result, null, 2))}</pre>
        </div>
      `;
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—â–µ–º –∞–Ω–∞–ª–∏–∑–µ
   */
  private generateAnalysisInfo(analysisResult: unknown, projectPath: string): string {
    const result = analysisResult as Record<string, unknown>;
    const summary = (result.summary as Record<string, unknown>) || {};
    const checks = Array.isArray(result.checks) ? result.checks : [];
    const modules = (result.modules as Record<string, unknown>) || {};

    return `
      <div class="analysis-info">
        <h3>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–µ–∫—Ç–∞</h3>
        <div class="project-path"><strong>–ü—Ä–æ–µ–∫—Ç:</strong> ${this.escapeHtml(projectPath)}</div>
        <div class="overall-score"><strong>–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞:</strong> ${summary.overallScore || 0}/100</div>
        <div class="checks-count"><strong>–í—ã–ø–æ–ª–Ω–µ–Ω–æ –ø—Ä–æ–≤–µ—Ä–æ–∫:</strong> ${checks.length}</div>
        <div class="modules-count"><strong>–í—ã–ø–æ–ª–Ω–µ–Ω–æ –º–æ–¥—É–ª–µ–π:</strong> ${Object.keys(modules).length}</div>
        <div class="analysis-time"><strong>–í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞:</strong> ${new Date().toLocaleString('ru-RU')}</div>
      </div>
    `;
  }
}
