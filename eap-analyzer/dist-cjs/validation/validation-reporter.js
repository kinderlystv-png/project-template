"use strict";
/**
 * –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–æ–≤ –æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
 * –°–æ–∑–¥–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –±–∞–≥–æ–≤
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ValidationReporter = void 0;
const fs = __importStar(require("fs"));
const path = __importStar(require("path"));
class ValidationReporter {
    /**
     * –°–æ–∑–¥–∞–µ—Ç –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç –æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
     */
    async generateCombinedReport(bugFixReport, metricsReport) {
        const criticalIssuesCount = bugFixReport.criticalIssues.length + metricsReport.summary.criticalViolations;
        const warningsCount = bugFixReport.rules.warnings + metricsReport.summary.warningViolations;
        const confidence = this.calculateConfidence(bugFixReport, metricsReport);
        const isValid = criticalIssuesCount === 0;
        const combinedRecommendations = [
            ...bugFixReport.recommendations,
            ...this.extractMetricsRecommendations(metricsReport),
        ].filter((rec, index, arr) => arr.indexOf(rec) === index); // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        return {
            projectPath: bugFixReport.projectPath,
            reportGeneratedAt: new Date(),
            bugFixValidation: bugFixReport,
            metricsValidation: metricsReport,
            overall: {
                isValid,
                confidence,
                criticalIssuesCount,
                warningsCount,
                summary: this.generateOverallSummary(isValid, confidence, criticalIssuesCount, warningsCount),
            },
            recommendations: combinedRecommendations,
        };
    }
    /**
     * –í—ã–≤–æ–¥–∏—Ç –æ—Ç—á–µ—Ç –≤ –∫–æ–Ω—Å–æ–ª—å
     */
    async printConsoleReport(report, options = {}) {
        const opts = { includeDetails: true, includeRecommendations: true, ...options };
        console.log('\n' + '='.repeat(80));
        console.log('üìä –û–¢–ß–ï–¢ –û –í–ê–õ–ò–î–ê–¶–ò–ò –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô EAP');
        console.log('='.repeat(80));
        if (opts.includeTimestamp) {
            console.log(`üïí –í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${report.reportGeneratedAt.toLocaleString()}`);
        }
        console.log(`üìÇ –ü—Ä–æ–µ–∫—Ç: ${report.projectPath}`);
        console.log('');
        // –û–±—â–∞—è —Å–≤–æ–¥–∫–∞
        console.log('üéØ –û–ë–©–ê–Ø –°–í–û–î–ö–ê:');
        console.log(`   ${report.overall.isValid ? '‚úÖ –í–ê–õ–ò–î–ê–¶–ò–Ø –ü–†–û–®–õ–ê' : '‚ùå –í–ê–õ–ò–î–ê–¶–ò–Ø –ù–ï –ü–†–û–®–õ–ê'}`);
        console.log(`   üéØ –£—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è: ${report.overall.confidence.toFixed(1)}%`);
        console.log(`   üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã: ${report.overall.criticalIssuesCount}`);
        console.log(`   ‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: ${report.overall.warningsCount}`);
        console.log(`   üìù ${report.overall.summary}`);
        console.log('');
        // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –±–∞–≥—Ñ–∏–∫—Å–æ–≤
        console.log('üîß –í–ê–õ–ò–î–ê–¶–ò–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ë–ê–ì–û–í:');
        console.log(`   üìã –ü—Ä–∞–≤–∏–ª: ${report.bugFixValidation.rules.total}`);
        console.log(`   ‚úÖ –ü—Ä–æ—à–ª–æ: ${report.bugFixValidation.rules.passed}`);
        console.log(`   ‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${report.bugFixValidation.rules.failed}`);
        console.log(`   ‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è: ${report.bugFixValidation.rules.warnings}`);
        if (opts.includeDetails) {
            console.log('\n   üìä –ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:');
            for (const [category, results] of Object.entries(report.bugFixValidation.categories)) {
                const total = results.passed + results.failed;
                console.log(`   ${category}: ${results.passed}/${total} ‚úÖ`);
            }
        }
        // –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –º–µ—Ç—Ä–∏–∫
        console.log('\nüìä –í–ê–õ–ò–î–ê–¶–ò–Ø –ú–ï–¢–†–ò–ö:');
        console.log(`   üìã –ú–µ—Ç—Ä–∏–∫: ${report.metricsValidation.totalMetrics}`);
        console.log(`   ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö: ${report.metricsValidation.validMetrics}`);
        console.log(`   ‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö: ${report.metricsValidation.invalidMetrics}`);
        console.log(`   üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è: ${report.metricsValidation.summary.criticalViolations}`);
        if (opts.includeDetails) {
            console.log('\n   üìä –ü–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:');
            for (const [category, stats] of Object.entries(report.metricsValidation.summary.byCategory)) {
                const total = stats.valid + stats.invalid;
                console.log(`   ${category}: ${stats.valid}/${total} ‚úÖ`);
            }
        }
        // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
        if (report.overall.criticalIssuesCount > 0) {
            console.log('\nüö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´:');
            for (const issue of report.bugFixValidation.criticalIssues) {
                console.log(`   ‚ùå ${issue.message}`);
                console.log(`      –ü–æ–ª—É—á–µ–Ω–æ: ${issue.value}, –û–∂–∏–¥–∞–ª–æ—Å—å: ${issue.expected}`);
            }
            const criticalMetrics = report.metricsValidation.results.filter(r => !r.isValid && r.violations.some(v => this.isCriticalViolation(v)));
            for (const metric of criticalMetrics) {
                console.log(`   ‚ùå ${metric.metric}: ${metric.value}`);
                metric.violations.forEach(violation => console.log(`      ${violation}`));
            }
        }
        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if (opts.includeRecommendations && report.recommendations.length > 0) {
            console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
            report.recommendations.forEach(rec => console.log(`   ${rec}`));
        }
        console.log('\n' + '='.repeat(80));
    }
    /**
     * –°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç—á–µ—Ç –≤ —Ñ–∞–π–ª
     */
    async saveReport(report, options) {
        let content;
        let filename;
        switch (options.format) {
            case 'json':
                content = JSON.stringify(report, null, 2);
                filename = 'validation-report.json';
                break;
            case 'markdown':
                content = this.generateMarkdownReport(report, options);
                filename = 'validation-report.md';
                break;
            case 'html':
                content = this.generateHtmlReport(report, options);
                filename = 'validation-report.html';
                break;
            default:
                throw new Error(`–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: ${options.format}`);
        }
        const outputPath = options.outputPath || './reports';
        const fullPath = path.join(outputPath, filename);
        // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if (!fs.existsSync(outputPath)) {
            fs.mkdirSync(outputPath, { recursive: true });
        }
        fs.writeFileSync(fullPath, content, 'utf-8');
        console.log(`üìÑ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${fullPath}`);
        return fullPath;
    }
    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç Markdown –æ—Ç—á–µ—Ç
     */
    generateMarkdownReport(report, options) {
        const { includeDetails, includeRecommendations, includeTimestamp } = options;
        let md = `# üìä –û—Ç—á–µ—Ç –æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π EAP\n\n`;
        if (includeTimestamp) {
            md += `**–í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:** ${report.reportGeneratedAt.toLocaleString()}\n`;
        }
        md += `**–ü—Ä–æ–µ–∫—Ç:** \`${report.projectPath}\`\n\n`;
        // –û–±—â–∞—è —Å–≤–æ–¥–∫–∞
        md += `## üéØ –û–±—â–∞—è —Å–≤–æ–¥–∫–∞\n\n`;
        md += `| –ü–∞—Ä–∞–º–µ—Ç—Ä | –ó–Ω–∞—á–µ–Ω–∏–µ |\n`;
        md += `|----------|----------|\n`;
        md += `| –°—Ç–∞—Ç—É—Å | ${report.overall.isValid ? '‚úÖ –ü–†–û–®–õ–ê' : '‚ùå –ù–ï –ü–†–û–®–õ–ê'} |\n`;
        md += `| –£—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è | ${report.overall.confidence.toFixed(1)}% |\n`;
        md += `| –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã | ${report.overall.criticalIssuesCount} |\n`;
        md += `| –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è | ${report.overall.warningsCount} |\n\n`;
        md += `**–†–µ–∑—é–º–µ:** ${report.overall.summary}\n\n`;
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –±–∞–≥—Ñ–∏–∫—Å–æ–≤
        md += `## üîß –í–∞–ª–∏–¥–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –±–∞–≥–æ–≤\n\n`;
        md += `| –ú–µ—Ç—Ä–∏–∫–∞ | –ó–Ω–∞—á–µ–Ω–∏–µ |\n`;
        md += `|---------|----------|\n`;
        md += `| –í—Å–µ–≥–æ –ø—Ä–∞–≤–∏–ª | ${report.bugFixValidation.rules.total} |\n`;
        md += `| –ü—Ä–æ—à–ª–æ | ${report.bugFixValidation.rules.passed} |\n`;
        md += `| –ü—Ä–æ–≤–∞–ª–µ–Ω–æ | ${report.bugFixValidation.rules.failed} |\n`;
        md += `| –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è | ${report.bugFixValidation.rules.warnings} |\n\n`;
        if (includeDetails) {
            md += `### –î–µ—Ç–∞–ª–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º\n\n`;
            for (const [category, results] of Object.entries(report.bugFixValidation.categories)) {
                const total = results.passed + results.failed;
                md += `- **${category}**: ${results.passed}/${total} ‚úÖ\n`;
            }
            md += '\n';
        }
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –º–µ—Ç—Ä–∏–∫
        md += `## üìä –í–∞–ª–∏–¥–∞—Ü–∏—è –º–µ—Ç—Ä–∏–∫\n\n`;
        md += `| –ú–µ—Ç—Ä–∏–∫–∞ | –ó–Ω–∞—á–µ–Ω–∏–µ |\n`;
        md += `|---------|----------|\n`;
        md += `| –í—Å–µ–≥–æ –º–µ—Ç—Ä–∏–∫ | ${report.metricsValidation.totalMetrics} |\n`;
        md += `| –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö | ${report.metricsValidation.validMetrics} |\n`;
        md += `| –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö | ${report.metricsValidation.invalidMetrics} |\n`;
        md += `| –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è | ${report.metricsValidation.summary.criticalViolations} |\n\n`;
        // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
        if (report.overall.criticalIssuesCount > 0) {
            md += `## üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã\n\n`;
            for (const issue of report.bugFixValidation.criticalIssues) {
                md += `### ${issue.message}\n`;
                md += `- **–ü–æ–ª—É—á–µ–Ω–æ:** ${issue.value}\n`;
                md += `- **–û–∂–∏–¥–∞–ª–æ—Å—å:** ${issue.expected}\n\n`;
            }
        }
        // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        if (includeRecommendations && report.recommendations.length > 0) {
            md += `## üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n\n`;
            report.recommendations.forEach(rec => (md += `- ${rec}\n`));
            md += '\n';
        }
        return md;
    }
    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML –æ—Ç—á–µ—Ç
     */
    generateHtmlReport(report, options) {
        const title = '–û—Ç—á–µ—Ç –æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π EAP';
        const statusColor = report.overall.isValid ? '#28a745' : '#dc3545';
        const statusIcon = report.overall.isValid ? '‚úÖ' : '‚ùå';
        return `
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${title}</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; line-height: 1.6; }
        .header { border-bottom: 3px solid #007bff; padding-bottom: 20px; margin-bottom: 30px; }
        .status { color: ${statusColor}; font-weight: bold; font-size: 1.2em; }
        .section { margin: 30px 0; padding: 20px; border: 1px solid #ddd; border-radius: 5px; }
        .critical { background-color: #fff5f5; border-left: 4px solid #dc3545; }
        .warning { background-color: #fffbf0; border-left: 4px solid #ffc107; }
        .success { background-color: #f0fff4; border-left: 4px solid #28a745; }
        table { width: 100%; border-collapse: collapse; margin: 15px 0; }
        th, td { padding: 12px; text-align: left; border-bottom: 1px solid #ddd; }
        th { background-color: #f8f9fa; }
        .metric-value { font-family: monospace; background-color: #f8f9fa; padding: 2px 6px; border-radius: 3px; }
        ul { padding-left: 20px; }
        .confidence-bar {
            width: 100%; height: 20px; background-color: #e9ecef; border-radius: 10px; overflow: hidden;
        }
        .confidence-fill {
            height: 100%; background: linear-gradient(90deg, #dc3545 0%, #ffc107 50%, #28a745 100%);
            width: ${report.overall.confidence}%; transition: width 0.3s ease;
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>üìä ${title}</h1>
        <p><strong>–ü—Ä–æ–µ–∫—Ç:</strong> <code>${report.projectPath}</code></p>
        ${options.includeTimestamp ? `<p><strong>–í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:</strong> ${report.reportGeneratedAt.toLocaleString()}</p>` : ''}
    </div>

    <div class="section ${report.overall.isValid ? 'success' : 'critical'}">
        <h2>üéØ –û–±—â–∞—è —Å–≤–æ–¥–∫–∞</h2>
        <p class="status">${statusIcon} –°—Ç–∞—Ç—É—Å: ${report.overall.isValid ? '–í–ê–õ–ò–î–ê–¶–ò–Ø –ü–†–û–®–õ–ê' : '–í–ê–õ–ò–î–ê–¶–ò–Ø –ù–ï –ü–†–û–®–õ–ê'}</p>

        <h3>–£—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è: ${report.overall.confidence.toFixed(1)}%</h3>
        <div class="confidence-bar">
            <div class="confidence-fill"></div>
        </div>

        <table>
            <tr><td><strong>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã</strong></td><td class="metric-value">${report.overall.criticalIssuesCount}</td></tr>
            <tr><td><strong>–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è</strong></td><td class="metric-value">${report.overall.warningsCount}</td></tr>
        </table>

        <p><strong>–†–µ–∑—é–º–µ:</strong> ${report.overall.summary}</p>
    </div>

    <div class="section">
        <h2>üîß –í–∞–ª–∏–¥–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –±–∞–≥–æ–≤</h2>
        <table>
            <tr><th>–ú–µ—Ç—Ä–∏–∫–∞</th><th>–ó–Ω–∞—á–µ–Ω–∏–µ</th></tr>
            <tr><td>–í—Å–µ–≥–æ –ø—Ä–∞–≤–∏–ª</td><td class="metric-value">${report.bugFixValidation.rules.total}</td></tr>
            <tr><td>–ü—Ä–æ—à–ª–æ</td><td class="metric-value">${report.bugFixValidation.rules.passed}</td></tr>
            <tr><td>–ü—Ä–æ–≤–∞–ª–µ–Ω–æ</td><td class="metric-value">${report.bugFixValidation.rules.failed}</td></tr>
            <tr><td>–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è</td><td class="metric-value">${report.bugFixValidation.rules.warnings}</td></tr>
        </table>
    </div>

    <div class="section">
        <h2>üìä –í–∞–ª–∏–¥–∞—Ü–∏—è –º–µ—Ç—Ä–∏–∫</h2>
        <table>
            <tr><th>–ú–µ—Ç—Ä–∏–∫–∞</th><th>–ó–Ω–∞—á–µ–Ω–∏–µ</th></tr>
            <tr><td>–í—Å–µ–≥–æ –º–µ—Ç—Ä–∏–∫</td><td class="metric-value">${report.metricsValidation.totalMetrics}</td></tr>
            <tr><td>–ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö</td><td class="metric-value">${report.metricsValidation.validMetrics}</td></tr>
            <tr><td>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö</td><td class="metric-value">${report.metricsValidation.invalidMetrics}</td></tr>
            <tr><td>–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è</td><td class="metric-value">${report.metricsValidation.summary.criticalViolations}</td></tr>
        </table>
    </div>

    ${report.overall.criticalIssuesCount > 0
            ? `
    <div class="section critical">
        <h2>üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã</h2>
        <ul>
            ${report.bugFixValidation.criticalIssues
                .map(issue => `
                <li><strong>${issue.message}</strong><br>
                –ü–æ–ª—É—á–µ–Ω–æ: <code>${issue.value}</code>, –û–∂–∏–¥–∞–ª–æ—Å—å: <code>${issue.expected}</code></li>
            `)
                .join('')}
        </ul>
    </div>`
            : ''}

    ${options.includeRecommendations && report.recommendations.length > 0
            ? `
    <div class="section">
        <h2>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h2>
        <ul>
            ${report.recommendations.map(rec => `<li>${rec}</li>`).join('')}
        </ul>
    </div>`
            : ''}

</body>
</html>`;
    }
    /**
     * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —É—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è –∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
     */
    calculateConfidence(bugFixReport, metricsReport) {
        const bugFixConfidence = bugFixReport.rules.total > 0
            ? (bugFixReport.rules.passed / bugFixReport.rules.total) * 100
            : 100;
        const metricsConfidence = metricsReport.totalMetrics > 0
            ? (metricsReport.validMetrics / metricsReport.totalMetrics) * 100
            : 100;
        // –í–∑–≤–µ—à–µ–Ω–Ω–æ–µ —Å—Ä–µ–¥–Ω–µ–µ —Å —É—á–µ—Ç–æ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
        const criticalPenalty = Math.min(20, (bugFixReport.criticalIssues.length + metricsReport.summary.criticalViolations) * 5);
        return Math.max(0, Math.min(100, (bugFixConfidence + metricsConfidence) / 2 - criticalPenalty));
    }
    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–±—â–µ–µ —Ä–µ–∑—é–º–µ
     */
    generateOverallSummary(isValid, confidence, criticalCount, warningsCount) {
        if (isValid && confidence > 90) {
            return '–í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –º–µ—Ç—Ä–∏–∫–∏ –≤ –Ω–æ—Ä–º–µ.';
        }
        else if (isValid && confidence > 70) {
            return '–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç, –Ω–æ –µ—Å—Ç—å –Ω–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã.';
        }
        else if (criticalCount > 0) {
            return `–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã (${criticalCount}), —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.`;
        }
        else {
            return '–ö–∞—á–µ—Å—Ç–≤–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Ç—Ä–µ–±—É–µ—Ç —É–ª—É—á—à–µ–Ω–∏—è.';
        }
    }
    /**
     * –ò–∑–≤–ª–µ–∫–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏–∑ –æ—Ç—á–µ—Ç–∞ –æ –º–µ—Ç—Ä–∏–∫–∞—Ö
     */
    extractMetricsRecommendations(report) {
        const recommendations = new Set();
        for (const result of report.results) {
            if (!result.isValid) {
                result.suggestions.forEach(suggestion => recommendations.add(suggestion));
            }
        }
        return Array.from(recommendations);
    }
    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º
     */
    isCriticalViolation(violation) {
        const criticalKeywords = ['–Ω–µ–≤–æ–∑–º–æ–∂–Ω—ã–π', '–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π', '–ø—Ä–µ–≤—ã—à–∞–µ—Ç', 'NaN', 'infinite'];
        return criticalKeywords.some(keyword => violation.toLowerCase().includes(keyword.toLowerCase()));
    }
}
exports.ValidationReporter = ValidationReporter;
//# sourceMappingURL=validation-reporter.js.map