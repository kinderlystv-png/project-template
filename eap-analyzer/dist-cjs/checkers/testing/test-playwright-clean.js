'use strict';
/**
 * –¢–µ—Å—Ç PlaywrightCheckerAdapter - –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä E2E —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å Playwright
 */
Object.defineProperty(exports, '__esModule', { value: true });
exports.testPlaywrightChecker = testPlaywrightChecker;
const PlaywrightCheckerAdapter_js_1 = require('./checkers/PlaywrightCheckerAdapter.js');
const SimpleOrchestrator_js_1 = require('./SimpleOrchestrator.js');
/**
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç PlaywrightCheckerAdapter –Ω–∞–ø—Ä—è–º—É—é –∏ —á–µ—Ä–µ–∑ SimpleOrchestrator
 */
async function testPlaywrightChecker() {
  console.log('\nüé≠ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ PlaywrightCheckerAdapter...\n');
  const projectPath = 'C:/alphacore/project-template';
  const checker = new PlaywrightCheckerAdapter_js_1.PlaywrightCheckerAdapter();
  // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const context = {
    projectPath,
    additionalData: {},
  };
  let directResult;
  let orchestratorResult;
  // –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
  console.log('üß™ –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ PlaywrightCheckerAdapter');
  try {
    const result = await checker.check(context);
    directResult = {
      name: 'PlaywrightChecker Direct',
      passed: result.passed,
      score: result.score,
      message: result.message,
      details: result.details,
      recommendations: result.recommendations,
    };
    console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${result.passed ? '–£–°–ü–ï–•' : '–ù–ï–£–î–ê–ß–ê'}`);
    console.log(`üìä –û—Ü–µ–Ω–∫–∞: ${result.score}/100`);
    console.log(`üìù –°–æ–æ–±—â–µ–Ω–∏–µ: ${result.message}`);
    if (result.details) {
      console.log('üìã –î–µ—Ç–∞–ª–∏:');
      console.log(`   ‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞: ${result.details.configFound ? '–¥–∞' : '–Ω–µ—Ç'}`);
      if (result.details.configFound) {
        console.log(`   ‚Ä¢ –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${result.details.configPath}`);
        console.log(`   ‚Ä¢ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Ç–µ—Å—Ç–æ–≤: ${result.details.testDir || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`);
        console.log(`   ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤: ${result.details.testsFound}`);
        console.log(`   ‚Ä¢ –ë—Ä–∞—É–∑–µ—Ä—ã: ${result.details.browsers?.join(', ') || '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}`);
        console.log(`   ‚Ä¢ –û—Ç—á–µ—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã: ${result.details.hasReports ? '–¥–∞' : '–Ω–µ—Ç'}`);
        console.log(`   ‚Ä¢ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ—Å—Ç—å: ${result.details.parallelConfig ? '–¥–∞' : '–Ω–µ—Ç'}`);
        console.log(`   ‚Ä¢ Retry –º–µ—Ö–∞–Ω–∏–∑–º: ${result.details.retryConfig ? '–¥–∞' : '–Ω–µ—Ç'}`);
      } else {
        console.log(`   ‚Ä¢ –ü—Ä–∏—á–∏–Ω–∞: ${result.details.reason}`);
        if (result.details.searchedPaths) {
          console.log(`   ‚Ä¢ –ò—Å–∫–∞–ª–∏: ${result.details.searchedPaths.join(', ')}`);
        }
      }
    }
    if (result.recommendations && result.recommendations.length > 0) {
      console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
      result.recommendations.forEach(rec => console.log(`   ‚Ä¢ ${rec}`));
    }
  } catch (error) {
    directResult = {
      name: 'PlaywrightChecker Direct',
      passed: false,
      score: 0,
      message: `–û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : String(error)}`,
    };
    console.log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä—è–º–æ–º –≤—ã–∑–æ–≤–µ: ${directResult.message}`);
  }
  console.log('\n' + '‚îÄ'.repeat(60) + '\n');
  // –¢–µ—Å—Ç 2: –í—ã–∑–æ–≤ —á–µ—Ä–µ–∑ SimpleOrchestrator
  console.log('üß™ –¢–µ—Å—Ç 2: –í—ã–∑–æ–≤ —á–µ—Ä–µ–∑ SimpleOrchestrator');
  try {
    const orchestrator = new SimpleOrchestrator_js_1.SimpleOrchestrator();
    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ PlaywrightChecker
    orchestrator.registerChecker('playwright-checker', checker);
    console.log('üìã –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–µ–∫–µ—Ä—ã:', orchestrator.getRegisteredCheckers());
    const result = await orchestrator.analyzeProject(projectPath);
    if (Object.keys(result.checks).length === 0) {
      orchestratorResult = {
        name: 'PlaywrightChecker Orchestrator',
        passed: false,
        score: 0,
        message: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã –æ—Ç –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
      };
    } else {
      const checkResult = result.checks['playwright-checker'];
      orchestratorResult = {
        name: 'PlaywrightChecker Orchestrator',
        passed: checkResult.passed,
        score: checkResult.score,
        message: checkResult.message,
        details: checkResult.details,
        recommendations: checkResult.recommendations,
      };
    }
    console.log(`‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${orchestratorResult.passed ? '–£–°–ü–ï–•' : '–ù–ï–£–î–ê–ß–ê'}`);
    console.log(`üìä –û—Ü–µ–Ω–∫–∞: ${orchestratorResult.score}/100`);
    console.log(`üìù –°–æ–æ–±—â–µ–Ω–∏–µ: ${orchestratorResult.message}`);
    if (orchestratorResult.details) {
      console.log('üìã –î–µ—Ç–∞–ª–∏ —á–µ—Ä–µ–∑ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä:');
      console.log(
        `   ‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞: ${orchestratorResult.details.configFound ? '–¥–∞' : '–Ω–µ—Ç'}`
      );
      if (orchestratorResult.details.configFound) {
        console.log(`   ‚Ä¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤: ${orchestratorResult.details.testsFound}`);
        console.log(
          `   ‚Ä¢ –ë—Ä–∞—É–∑–µ—Ä—ã: ${orchestratorResult.details.browsers?.join(', ') || '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}`
        );
      }
    }
  } catch (error) {
    orchestratorResult = {
      name: 'PlaywrightChecker Orchestrator',
      passed: false,
      score: 0,
      message: `–û—à–∏–±–∫–∞ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ${error instanceof Error ? error.message : String(error)}`,
    };
    console.log(`‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–µ: ${orchestratorResult.message}`);
  }
  console.log('\n' + '='.repeat(60) + '\n');
  // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  console.log('üìä –°–†–ê–í–ù–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:');
  console.log('‚îÄ'.repeat(60));
  console.log(`–ú–µ—Ç–æ–¥                  | –£—Å–ø–µ—Ö | –û—Ü–µ–Ω–∫–∞ | –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ`);
  console.log('‚îÄ'.repeat(60));
  console.log(
    `–ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤          | ${directResult.passed ? '‚úÖ' : '‚ùå'}    | ${directResult.score.toString().padStart(3)}    | -`
  );
  console.log(
    `–ß–µ—Ä–µ–∑ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä     | ${orchestratorResult.passed ? '‚úÖ' : '‚ùå'}    | ${orchestratorResult.score.toString().padStart(3)}    | ${directResult.score === orchestratorResult.score ? '‚úÖ' : '‚ùå'}`
  );
  console.log('‚îÄ'.repeat(60));
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
  const scoresMatch = directResult.score === orchestratorResult.score;
  const statusMatch = directResult.passed === orchestratorResult.passed;
  if (scoresMatch && statusMatch) {
    console.log('üéâ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü–æ–ª–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ - –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
  } else {
    console.log('‚ö†Ô∏è  –†–ï–ó–£–õ–¨–¢–ê–¢: –ï—Å—Ç—å —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏—è –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö');
    if (!scoresMatch) {
      console.log(`   ‚Ä¢ –û—Ü–µ–Ω–∫–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç: ${directResult.score} vs ${orchestratorResult.score}`);
    }
    if (!statusMatch) {
      console.log(
        `   ‚Ä¢ –°—Ç–∞—Ç—É—Å—ã –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç: ${directResult.passed} vs ${orchestratorResult.passed}`
      );
    }
  }
  console.log('\nüé≠ –ê–ù–ê–õ–ò–ó PLAYWRIGHT:');
  if (directResult.details?.configFound) {
    console.log('‚úÖ Playwright –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞ –∏ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    console.log(`üìÅ –ù–∞–π–¥–µ–Ω–æ ${directResult.details.testsFound} E2E —Ç–µ—Å—Ç–æ–≤`);
    console.log(
      `üåê –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã: ${directResult.details.browsers?.join(', ') || 'chromium (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)'}`
    );
    if (directResult.details.hasReports) {
      console.log('üìä –û—Ç—á–µ—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }
    if (directResult.details.parallelConfig) {
      console.log('‚ö° –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ');
    }
  } else {
    console.log('‚ö†Ô∏è  Playwright –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
    if (directResult.details?.reason === 'no_dependency') {
      console.log('üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Playwright: npm install --save-dev @playwright/test');
    } else if (directResult.details?.reason === 'no_config') {
      console.log('üí° –°–æ–∑–¥–∞–π—Ç–µ playwright.config.ts');
    } else if (directResult.details?.reason === 'no_tests') {
      console.log('üí° –î–æ–±–∞–≤—å—Ç–µ E2E —Ç–µ—Å—Ç—ã –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é tests/e2e');
    }
  }
  return {
    directResult,
    orchestratorResult,
    scoresMatch,
    statusMatch,
    success: scoresMatch && statusMatch,
  };
}
// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
if (import.meta.url === `file://${process.argv[1].replace(/\\/g, '/')}`) {
  testPlaywrightChecker()
    .then(results => {
      console.log(`\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: ${results.success ? '–£–°–ü–ï–•' : '–û–®–ò–ë–ö–ê'}`);
      process.exit(results.success ? 0 : 1);
    })
    .catch(error => {
      console.error('\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
      process.exit(1);
    });
}
//# sourceMappingURL=test-playwright-clean.js.map
