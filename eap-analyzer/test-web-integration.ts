/**
 * –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ WebSecurityChecker —Å –æ—Å–Ω–æ–≤–Ω—ã–º SecurityChecker
 *
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –≤–µ–±-–∞–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω
 * –∏ –≤–µ–±-—É—è–∑–≤–∏–º–æ—Å—Ç–∏ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
 */

import { SecurityChecker } from './src/checkers/security/SecurityChecker.js';
import { CheckContext } from './src/types/index.js';

async function testWebSecurityIntegration() {
  console.log('üîó –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ WebSecurity —Å SecurityChecker...\n');

  try {
    const context: CheckContext = {
      projectPath: process.cwd(),
      projectInfo: {
        name: 'test-project',
        version: '1.0.0',
        hasTypeScript: true,
        hasTests: true,
        hasDocker: true,
        hasCICD: true,
        dependencies: { production: 0, development: 0, total: 0 },
      },
      options: {
        projectPath: process.cwd(),
        verbose: true,
      },
    };

    console.log('üìä –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...');
    const result = await SecurityChecker.checkComponent(context);

    console.log('\nüìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:');
    console.log(`üìà –û–±—â–∏–π –±–∞–ª–ª: ${result.percentage}% (${result.score}/${result.maxScore})`);
    console.log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${result.passed.length} –ø—Ä–æ–≤–µ—Ä–æ–∫`);
    console.log(`‚ùå –ù–µ –ø—Ä–æ–π–¥–µ–Ω–æ: ${result.failed.length} –ø—Ä–æ–≤–µ—Ä–æ–∫`);
    console.log(`‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${result.duration}ms\n`);

    // –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞–ª–∏—á–∏–µ –≤–µ–±-–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
    const webSecurityCheck =
      result.passed.find(check => check.check.id === 'security-web') ||
      result.failed.find(check => check.check.id === 'security-web');

    if (webSecurityCheck) {
      console.log('üåê Web Security –∞–Ω–∞–ª–∏–∑ –Ω–∞–π–¥–µ–Ω:');
      console.log(`   üìä –°—Ç–∞—Ç—É—Å: ${webSecurityCheck.passed ? '‚úÖ –ü—Ä–æ–π–¥–µ–Ω' : '‚ùå –ù–µ –ø—Ä–æ–π–¥–µ–Ω'}`);
      console.log(`   üìù –î–µ—Ç–∞–ª–∏: ${webSecurityCheck.details}`);
      console.log(`   üìà –ë–∞–ª–ª: ${webSecurityCheck.score}/${webSecurityCheck.maxScore}`);

      if (webSecurityCheck.recommendations && webSecurityCheck.recommendations.length > 0) {
        console.log('   üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
        webSecurityCheck.recommendations.slice(0, 3).forEach(rec => {
          console.log(`      ‚Ä¢ ${rec}`);
        });
      }
    } else {
      console.log('‚ùå Web Security –∞–Ω–∞–ª–∏–∑ –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö!');
      return false;
    }

    // –ü—Ä–æ–≤–µ—Ä–∏–º overall security score
    const overallCheck =
      result.passed.find(check => check.check.id === 'security-overall') ||
      result.failed.find(check => check.check.id === 'security-overall');

    if (overallCheck) {
      console.log('\nüèÜ Overall Security Score:');
      console.log(`   üìä –ë–∞–ª–ª: ${overallCheck.score}%`);
      console.log(`   üìù ${overallCheck.details}`);
    }

    // –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    console.log('\nüìä –î–µ—Ç–∞–ª—å–Ω–∞—è —Ä–∞–∑–±–∏–≤–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:');

    const categories = [
      'security-dependencies',
      'security-code',
      'security-config',
      'security-web',
    ];
    categories.forEach(catId => {
      const catCheck =
        result.passed.find(c => c.check.id === catId) ||
        result.failed.find(c => c.check.id === catId);
      if (catCheck) {
        const status = catCheck.passed ? '‚úÖ' : '‚ùå';
        console.log(
          `   ${status} ${catCheck.check.name}: ${catCheck.score}% - ${catCheck.details}`
        );
      }
    });

    console.log('\nüéâ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è WebSecurity —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    console.log('üìà Web Security —Ç–µ–ø–µ—Ä—å —è–≤–ª—è–µ—Ç—Å—è —á–∞—Å—Ç—å—é –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.');

    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:', error);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testWebSecurityIntegration()
  .then(success => {
    if (success) {
      console.log('\n‚úÖ –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê: WebSecurity ‚Üí SecurityChecker');
      process.exit(0);
    } else {
      console.log('\n‚ùå –ò–ù–¢–ï–ì–†–ê–¶–ò–Ø –ù–ï –£–î–ê–õ–ê–°–¨');
      process.exit(1);
    }
  })
  .catch(error => {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });
