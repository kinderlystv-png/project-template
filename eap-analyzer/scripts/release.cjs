#!/usr/bin/env node

/**
 * üöÄ EAP Analyzer Release Script
 * –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ –≤—ã–ø—É—Å–∫ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏ –ø–∞–∫–µ—Ç–∞
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

console.log('üöÄ Ultimate EAP Analyzer v3.0 - Release Script');
console.log('='.repeat(50));

// –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥
function run(command, options = {}) {
  console.log(`üìù –í—ã–ø–æ–ª–Ω—è—é: ${command}`);
  try {
    const result = execSync(command, {
      stdio: 'inherit',
      encoding: 'utf8',
      ...options,
    });
    return result;
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    process.exit(1);
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–µ–ª–∏–∑—É
function checkReadiness() {
  console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ —Ä–µ–ª–∏–∑—É...');

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–∞–ø–∫–µ
  if (!fs.existsSync('package.json')) {
    console.error('‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø–∞–∫–µ—Ç–∞.');
    process.exit(1);
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–±–æ—Ä–∫—É
  if (!fs.existsSync('dist') || !fs.existsSync('bin/quick-analyze.cjs')) {
    console.error('‚ùå –°–±–æ—Ä–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –ó–∞–ø—É—Å—Ç–∏—Ç–µ npm run build');
    process.exit(1);
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä...');
  run('node bin/quick-analyze.cjs .', { stdio: 'pipe' });

  console.log('‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!');
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞
function createTransferPackage() {
  console.log('\nüì¶ –°–æ–∑–¥–∞—é –ø–∞–∫–µ—Ç –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ –≤ GitHub...');

  const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
  const version = packageJson.version;

  // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞
  const transferDir = `../eap-analyzer-transfer-v${version}`;

  if (fs.existsSync(transferDir)) {
    run(`rmdir /s /q "${transferDir}"`);
  }

  run(`mkdir "${transferDir}"`);

  // –ö–æ–ø–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã (Windows —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ –∫–æ–º–∞–Ω–¥—ã)
  const filesToCopy = [
    'package.json',
    'README-GITHUB.md',
    '.npmignore',
    'Dockerfile',
    'dist',
    'dist-cjs',
    'bin',
    'templates',
    '.github',
    'READY-TO-USE.md',
    'EAP-QUICK-START.md',
    'HOW-TO-USE-SIMPLE.md',
  ];

  filesToCopy.forEach(file => {
    if (fs.existsSync(file)) {
      if (fs.statSync(file).isDirectory()) {
        run(`xcopy /E /I /H /Y "${file}" "${transferDir}\\${file}"`);
      } else {
        run(`copy "${file}" "${transferDir}\\"`);
      }
      console.log(`‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: ${file}`);
    } else {
      console.log(`‚ö†Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω: ${file} (–Ω–µ –Ω–∞–π–¥–µ–Ω)`);
    }
  });

  // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º README –¥–ª—è GitHub
  if (fs.existsSync(`${transferDir}\\README-GITHUB.md`)) {
    run(`move "${transferDir}\\README-GITHUB.md" "${transferDir}\\README.md"`);
  }

  // –°–æ–∑–¥–∞–µ–º .gitignore
  const gitignore = `
# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Build outputs
*.tsbuildinfo
.nyc_output
coverage/

# OS
.DS_Store
.DS_Store?
._*
Thumbs.db

# IDEs
.vscode/
.idea/
*.swp
*.swo

# Logs
logs/
*.log

# Temporary files
tmp/
temp/
.tmp

# Analysis reports (examples)
eap-analysis-*.json
optimization-status*.json
qa-report*.json
`;

  fs.writeFileSync(`${transferDir}/.gitignore`, gitignore.trim());

  console.log(`\nüéâ –ü–∞–∫–µ—Ç –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å–æ–∑–¥–∞–Ω: ${transferDir}`);
  console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
  console.log(`1. cd ${transferDir}`);
  console.log('2. git init');
  console.log('3. git add .');
  console.log('4. git commit -m "Initial release v' + version + '"');
  console.log('5. git remote add origin https://github.com/kinderlystv-png/eap-analyzer.git');
  console.log('6. git push -u origin main');
  console.log('7. git tag v' + version);
  console.log('8. git push origin v' + version);

  return transferDir;
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–µ—Ä–µ–Ω–æ—Å—É
function createTransferInstructions(transferDir) {
  const instructions = `# üöÄ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–µ—Ä–µ–Ω–æ—Å—É EAP Analyzer –≤ GitHub

## üì¶ –ß—Ç–æ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ:
- ‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã
- ‚úÖ README.md –¥–ª—è GitHub —Å–æ–∑–¥–∞–Ω
- ‚úÖ .npmignore –¥–ª—è NPM –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
- ‚úÖ GitHub Actions –¥–ª—è CI/CD
- ‚úÖ Dockerfile –¥–ª—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏–∏
- ‚úÖ .gitignore –Ω–∞—Å—Ç—Ä–æ–µ–Ω

## üéØ –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞:

\`\`\`bash
# 1. –ü–µ—Ä–µ–π—Ç–∏ –≤ –ø–∞–ø–∫—É –ø–µ—Ä–µ–Ω–æ—Å–∞
cd ${path.basename(transferDir)}

# 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
git init

# 3. –î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã
git add .

# 4. –ü–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç
git commit -m "üéâ Initial release Ultimate EAP Analyzer v3.0.0"

# 5. –ü–æ–¥–∫–ª—é—á–∏—Ç—å GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
git remote add origin https://github.com/kinderlystv-png/eap-analyzer.git

# 6. –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ GitHub
git branch -M main
git push -u origin main

# 7. –°–æ–∑–¥–∞—Ç—å —Ç–µ–≥ –¥–ª—è —Ä–µ–ª–∏–∑–∞
git tag v3.0.0
git push origin v3.0.0
\`\`\`

## üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:

### 1. Secrets –¥–ª—è GitHub Actions:
- \`NPM_TOKEN\` - —Ç–æ–∫–µ–Ω –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ NPM
- \`DOCKER_USERNAME\` - –ª–æ–≥–∏–Ω Docker Hub
- \`DOCKER_PASSWORD\` - –ø–∞—Ä–æ–ª—å Docker Hub

### 2. –ü–æ–ª—É—á–µ–Ω–∏–µ NPM —Ç–æ–∫–µ–Ω–∞:
\`\`\`bash
npm login
npm token create --read-only
\`\`\`

### 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤ GitHub:
1. –ü–µ—Ä–µ–π—Ç–∏ –≤ Settings ‚Üí Secrets and variables ‚Üí Actions
2. –î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ secrets
3. GitHub Actions –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å—Ç—è—Ç—Å—è –ø—Ä–∏ push —Ç–µ–≥–∞

## üöÄ –ü–æ—Å–ª–µ –ø–µ—Ä–µ–Ω–æ—Å–∞:

### –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:
\`\`\`bash
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏–∑ GitHub
npm install -g https://github.com/kinderlystv-png/eap-analyzer.git

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
eap analyze /path/to/test/project
\`\`\`

### –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ NPM:
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ GitHub Actions –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ–≥–∞
- –ò–ª–∏ –≤—Ä—É—á–Ω—É—é: \`npm publish --access public\`

## üéâ –ì–æ—Ç–æ–≤–æ!

–ü–æ—Å–ª–µ –ø–µ—Ä–µ–Ω–æ—Å–∞ –ø–∞–∫–µ—Ç –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω:
- üì¶ NPM: \`npm install -g @kinderlystv-png/eap-analyzer\`
- üê≥ Docker: \`docker pull kinderlystvpng/eap-analyzer\`
- üìÅ GitHub: \`git clone https://github.com/kinderlystv-png/eap-analyzer.git\`
`;

  fs.writeFileSync(`${transferDir}/TRANSFER-INSTRUCTIONS.md`, instructions);
  console.log('\nüìã –°–æ–∑–¥–∞–Ω–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: TRANSFER-INSTRUCTIONS.md');
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function main() {
  checkReadiness();
  const transferDir = createTransferPackage();
  createTransferInstructions(transferDir);

  console.log('\nüéâ –†–µ–ª–∏–∑ –≥–æ—Ç–æ–≤!');
  console.log(`üìÅ –ü–∞–ø–∫–∞ –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞: ${transferDir}`);
  console.log('üìã –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –≤ TRANSFER-INSTRUCTIONS.md');
}

// –ó–∞–ø—É—Å–∫
if (require.main === module) {
  main();
}

module.exports = { checkReadiness, createTransferPackage, createTransferInstructions };
