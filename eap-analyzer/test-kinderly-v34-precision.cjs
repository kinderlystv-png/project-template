/**
 * –¢–µ—Å—Ç FileStructureAnalyzer v3.4 PRECISION
 * –¢–æ—á–Ω–∞—è –∫–∞–ª–∏–±—Ä–æ–≤–∫–∞ –¥–ª—è –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä—É—á–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–∏
 */

const { FileStructureAnalyzerV34 } = require('./FileStructureAnalyzerV34.cjs');
const fs = require('fs');

console.log('üéØ –¢–ï–°–¢ FileStructureAnalyzer v3.4 PRECISION');
console.log('='.repeat(60));
console.log('üîß –¶–µ–ª—å: –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è');
console.log('üìä –¶–µ–ª–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:');
console.log('   ‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ—Å—Ç—å: 30/100 (–∫—Ä–∏—Ç–∏—á–Ω–æ –Ω–∏–∑–∫–∏–µ —Ç–µ—Å—Ç—ã)');
console.log('   ‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–æ–ª–≥: 40/100 (—É–º–µ—Ä–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã)');
console.log('   ‚Ä¢ –ú–æ–¥—É–ª—å–Ω–æ—Å—Ç—å: 72/100 (—Ö–æ—Ä–æ—à–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)');
console.log('   ‚Ä¢ –°–ª–æ–∂–Ω–æ—Å—Ç—å: 55/100 (—Å—Ä–µ–¥–Ω—è—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å)');
console.log('');

async function testAnalyzerV34() {
  const startTime = Date.now();
  const projectPath = 'C:\\kinderly-events';

  try {
    console.log(`üìÅ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º—ã–π –ø—Ä–æ–µ–∫—Ç: ${projectPath}`);
    console.log('‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ v3.4...\n');

    const analyzer = new FileStructureAnalyzerV34();
    const result = await analyzer.analyzeProject(projectPath);

    const duration = Date.now() - startTime;

    // –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    console.log('üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê v3.4:');
    console.log('='.repeat(50));

    console.log(`üîß –ü–û–î–î–ï–†–ñ–ò–í–ê–ï–ú–û–°–¢–¨: ${result.metrics.maintainability.score}/100`);
    if (result.metrics.maintainability.details) {
      const d = result.metrics.maintainability.details;
      console.log(`   ‚Ä¢ –ò—Å—Ö–æ–¥–Ω—ã–µ —Ñ–∞–π–ª—ã: ${d.sourceFiles}`);
      console.log(`   ‚Ä¢ –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã: ${d.testFiles}`);
      console.log(`   ‚Ä¢ –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏: ${d.testCoverage}%`);
      if (d.testPenalty) console.log(`   ‚Ä¢ –®—Ç—Ä–∞—Ñ –∑–∞ —Ç–µ—Å—Ç—ã: ${d.testPenalty}`);
      if (d.docPenalty) console.log(`   ‚Ä¢ –®—Ç—Ä–∞—Ñ –∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é: ${d.docPenalty}`);
      if (d.backupPenalty) console.log(`   ‚Ä¢ –®—Ç—Ä–∞—Ñ –∑–∞ backup: ${d.backupPenalty}`);
      if (d.readmeBonus) console.log(`   ‚Ä¢ –ë–æ–Ω—É—Å –∑–∞ README: ${d.readmeBonus}`);
    }

    console.log(`\nüí≥ –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ô –î–û–õ–ì: ${result.metrics.technicalDebt.score}/100`);
    if (result.metrics.technicalDebt.details) {
      const d = result.metrics.technicalDebt.details;
      console.log(`   ‚Ä¢ –ë–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤: ${d.largeFilePercent}%`);
      console.log(`   ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞: ${d.maxDepth}`);
      console.log(`   ‚Ä¢ –°—Ä–µ–¥–Ω—è—è –≥–ª—É–±–∏–Ω–∞: ${d.avgDepth}`);
      if (d.largeFilesPenalty) console.log(`   ‚Ä¢ –®—Ç—Ä–∞—Ñ –∑–∞ —Ñ–∞–π–ª—ã: ${d.largeFilesPenalty}`);
      if (d.depthPenalty) console.log(`   ‚Ä¢ –®—Ç—Ä–∞—Ñ –∑–∞ –≥–ª—É–±–∏–Ω—É: ${d.depthPenalty}`);
      if (d.structurePenalty) console.log(`   ‚Ä¢ –®—Ç—Ä–∞—Ñ –∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—É: ${d.structurePenalty}`);
    }

    console.log(`\nüì¶ –ú–û–î–£–õ–¨–ù–û–°–¢–¨: ${result.metrics.modularity.score}/100`);
    if (result.metrics.modularity.details) {
      const d = result.metrics.modularity.details;
      console.log(`   ‚Ä¢ –ú–æ–¥—É–ª–µ–π –≤ src/: ${d.moduleCount}`);
      console.log(`   ‚Ä¢ –°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä: ${d.avgModuleSize} —Ñ–∞–π–ª–æ–≤`);
      if (d.moduleBonus) console.log(`   ‚Ä¢ –ë–æ–Ω—É—Å –∑–∞ –º–æ–¥—É–ª–∏: ${d.moduleBonus}`);
      if (d.sizeBonus) console.log(`   ‚Ä¢ –ë–æ–Ω—É—Å –∑–∞ —Ä–∞–∑–º–µ—Ä: ${d.sizeBonus}`);
      if (d.patternBonus) console.log(`   ‚Ä¢ –ë–æ–Ω—É—Å –∑–∞ –ø–∞—Ç—Ç–µ—Ä–Ω—ã: ${d.patternBonus}`);
    }

    console.log(`\nüîÑ –°–õ–û–ñ–ù–û–°–¢–¨: ${result.metrics.complexity.score}/100`);
    if (result.metrics.complexity.details) {
      const d = result.metrics.complexity.details;
      console.log(`   ‚Ä¢ –°—Ä–µ–¥–Ω—è—è –≥–ª—É–±–∏–Ω–∞: ${d.avgDepth}`);
      console.log(`   ‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞: ${d.maxDepth}`);
      console.log(`   ‚Ä¢ –ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è: ${d.namingConsistency}%`);
      if (d.avgDepthPenalty) console.log(`   ‚Ä¢ –®—Ç—Ä–∞—Ñ –∑–∞ —Å—Ä–µ–¥–Ω—é—é –≥–ª—É–±–∏–Ω—É: ${d.avgDepthPenalty}`);
      if (d.maxDepthPenalty) console.log(`   ‚Ä¢ –®—Ç—Ä–∞—Ñ –∑–∞ –º–∞–∫—Å –≥–ª—É–±–∏–Ω—É: ${d.maxDepthPenalty}`);
      if (d.namingPenalty) console.log(`   ‚Ä¢ –®—Ç—Ä–∞—Ñ –∑–∞ –∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: ${d.namingPenalty}`);
    }

    console.log(`\nüèÜ –û–ë–©–ò–ô –ë–ê–õ–õ: ${result.metrics.overallScore}/100`);
    console.log(`‚è±Ô∏è  –í—Ä–µ–º—è –∞–Ω–∞–ª–∏–∑–∞: ${duration} –º—Å`);

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–∞–π–ª–æ–≤
    console.log('\nüìÅ –°–¢–ê–¢–ò–°–¢–ò–ö–ê –§–ê–ô–õ–û–í:');
    console.log('-'.repeat(30));
    console.log(`–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: ${result.metrics.fileStats.total}`);
    console.log(`–ò—Å—Ö–æ–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (src/): ${result.metrics.fileStats.source}`);
    console.log(`–¢–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤: ${result.metrics.fileStats.tests}`);
    console.log(`–§–∞–π–ª–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏: ${result.metrics.fileStats.docs}`);
    console.log(`Backup —Ñ–∞–π–ª–æ–≤: ${result.metrics.fileStats.backup}`);
    console.log(`–ë–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤: ${result.metrics.fileStats.large}`);

    // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ä—É—á–Ω–æ–π –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
    console.log('\nüìä –°–†–ê–í–ù–ï–ù–ò–ï –° –†–£–ß–ù–û–ô –í–ê–õ–ò–î–ê–¶–ò–ï–ô:');
    console.log('='.repeat(50));

    const manual = {
      maintainability: 30,
      technicalDebt: 40,
      modularity: 72,
      complexity: 55,
    };

    const analyzer_v34 = {
      maintainability: result.metrics.maintainability.score,
      technicalDebt: result.metrics.technicalDebt.score,
      modularity: result.metrics.modularity.score,
      complexity: result.metrics.complexity.score,
    };

    const comparison = {};
    Object.keys(manual).forEach(key => {
      const diff = Math.abs(manual[key] - analyzer_v34[key]);
      const accuracy = Math.max(0, 100 - diff);
      comparison[key] = { manual: manual[key], analyzer: analyzer_v34[key], diff, accuracy };
    });

    Object.entries(comparison).forEach(([metric, data]) => {
      const status =
        data.accuracy >= 95
          ? 'üü¢ –û–¢–õ–ò–ß–ù–û'
          : data.accuracy >= 90
            ? 'üü° –û–ß–ï–ù–¨ –•–û–†–û–®–û'
            : data.accuracy >= 85
              ? 'üü† –•–û–†–û–®–û'
              : data.accuracy >= 75
                ? 'üü® –ü–†–ò–ï–ú–õ–ï–ú–û'
                : 'üî¥ –¢–†–ï–ë–£–ï–¢ –£–õ–£–ß–®–ï–ù–ò–Ø';

      console.log(`${metric.toUpperCase()}:`);
      console.log(
        `  –†—É—á–Ω–∞—è: ${data.manual}/100 | v3.4: ${data.analyzer}/100 | –†–∞–∑–Ω–∏—Ü–∞: ${data.diff} | –¢–æ—á–Ω–æ—Å—Ç—å: ${data.accuracy.toFixed(1)}% ${status}`
      );
    });

    const overallAccuracy =
      Object.values(comparison).reduce((sum, data) => sum + data.accuracy, 0) /
      Object.values(comparison).length;

    console.log(`\nüéØ –û–ë–©–ê–Ø –¢–û–ß–ù–û–°–¢–¨ v3.4: ${overallAccuracy.toFixed(1)}%`);

    const improvementStatus =
      overallAccuracy >= 95
        ? 'üü¢ –û–¢–õ–ò–ß–ù–ê–Ø –ö–ê–õ–ò–ë–†–û–í–ö–ê'
        : overallAccuracy >= 90
          ? 'üü° –û–ß–ï–ù–¨ –•–û–†–û–®–ê–Ø –ö–ê–õ–ò–ë–†–û–í–ö–ê'
          : overallAccuracy >= 85
            ? 'üü† –•–û–†–û–®–ê–Ø –ö–ê–õ–ò–ë–†–û–í–ö–ê'
            : overallAccuracy >= 75
              ? 'üü® –ü–†–ò–ï–ú–õ–ï–ú–ê–Ø –ö–ê–õ–ò–ë–†–û–í–ö–ê'
              : 'üî¥ –ù–£–ñ–ù–ê –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –†–ê–ë–û–¢–ê';

    console.log(`–°—Ç–∞—Ç—É—Å: ${improvementStatus}`);

    // –≠–≤–æ–ª—é—Ü–∏—è –≤–µ—Ä—Å–∏–π
    console.log('\nüìà –≠–í–û–õ–Æ–¶–ò–Ø –¢–û–ß–ù–û–°–¢–ò:');
    console.log('-'.repeat(35));
    console.log('v3.0: ~40% (–ø–µ—Ä–µ–æ—Ü–µ–Ω–∫–∞)');
    console.log('v3.2: 88.3% (—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–æ)');
    console.log('v3.3: 80.3% (—É—Ö—É–¥—à–µ–Ω–∏–µ)');
    console.log(`v3.4: ${overallAccuracy.toFixed(1)}% (—Ç–æ—á–Ω–∞—è –∫–∞–ª–∏–±—Ä–æ–≤–∫–∞)`);

    const improvement = overallAccuracy - 88.3;
    if (improvement > 0) {
      console.log(`üöÄ –£–ª—É—á—à–µ–Ω–∏–µ: +${improvement.toFixed(1)}% –æ—Ç v3.2`);
    } else {
      console.log(`üìâ –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ: ${improvement.toFixed(1)}% –æ—Ç v3.2`);
    }

    // –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    console.log('\nüîç –ê–ù–ê–õ–ò–ó –ö–ê–ß–ï–°–¢–í–ê –ù–ê–°–¢–†–û–ô–ö–ò:');
    console.log('-'.repeat(40));

    const excellentMetrics = Object.values(comparison).filter(d => d.accuracy >= 95).length;
    const goodMetrics = Object.values(comparison).filter(d => d.accuracy >= 85).length;

    console.log(`–û—Ç–ª–∏—á–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ (‚â•95%): ${excellentMetrics}/4`);
    console.log(`–•–æ—Ä–æ—à–∏–µ –º–µ—Ç—Ä–∏–∫–∏ (‚â•85%): ${goodMetrics}/4`);

    if (excellentMetrics >= 3) {
      console.log('‚ú® –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –±–ª–∏–∑–∫–∞ –∫ –∏–¥–µ–∞–ª—å–Ω–æ–π!');
    } else if (goodMetrics >= 3) {
      console.log('‚úÖ –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è');
    } else {
      console.log('‚ö†Ô∏è  –ö–∞–ª–∏–±—Ä–æ–≤–∫–∞ —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–∞–±–æ—Ç–∫–∏');
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const reportPath = `./reports/precision-test-${Date.now()}.json`;
    try {
      if (!fs.existsSync('./reports')) {
        fs.mkdirSync('./reports');
      }

      fs.writeFileSync(
        reportPath,
        JSON.stringify(
          {
            version: '3.4 PRECISION',
            timestamp: new Date().toISOString(),
            projectPath,
            duration,
            metrics: result.metrics,
            comparison,
            overallAccuracy,
            improvements: {
              'v3.2_to_v3.4': improvement,
              'v3.3_to_v3.4': overallAccuracy - 80.3,
            },
            qualityMetrics: {
              excellentMetrics,
              goodMetrics,
              totalMetrics: 4,
            },
          },
          null,
          2
        )
      );

      console.log(`\nüíæ –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${reportPath}`);
    } catch (error) {
      console.log('\n‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç—á–µ—Ç');
    }

    console.log('\n' + '='.repeat(60));
    console.log('üéâ –¢–µ—Å—Ç FileStructureAnalyzer v3.4 –∑–∞–≤–µ—Ä—à–µ–Ω!');
    console.log(`‚úÖ –ê–Ω–∞–ª–∏–∑ ${result.metrics.fileStats.total} —Ñ–∞–π–ª–æ–≤ –∑–∞ ${duration} –º—Å`);
    console.log(`üéØ –û–±—â–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å: ${overallAccuracy.toFixed(1)}%`);
    console.log(`üìä –§–∏–Ω–∞–ª—å–Ω—ã–π –±–∞–ª–ª –ø—Ä–æ–µ–∫—Ç–∞: ${result.metrics.overallScore}/100`);

    return result;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
    console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:');
    console.error(error.stack || error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
runTest()
  .then(() => {
    console.log('\n‚ú® –¢–æ—á–Ω–∞—è –∫–∞–ª–∏–±—Ä–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    process.exit(0);
  })
  .catch(error => {
    console.error('\nüí• –¢–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω:', error.message);
    process.exit(1);
  });

async function runTest() {
  return await testAnalyzerV34();
}
