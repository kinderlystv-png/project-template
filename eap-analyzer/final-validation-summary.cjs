/**
 * –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –í–ê–õ–ò–î–ê–¶–ò–ò FileStructureAnalyzer v3.0
 * –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–Ω–∞–ª–∏–∑–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏ –ø—Ä–æ–µ–∫—Ç–∞ kinderly-events
 */

const fs = require('fs');
const path = require('path');

function generateValidationSummary() {
  console.log('üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –í–ê–õ–ò–î–ê–¶–ò–ò FileStructureAnalyzer v3.0');
  console.log('='.repeat(80));
  console.log('–ü—Ä–æ–µ–∫—Ç: kinderly-events');
  console.log('–î–∞—Ç–∞: 12 —Å–µ–Ω—Ç—è–±—Ä—è 2025');
  console.log('');

  // –î–∞–Ω–Ω—ã–µ –∏–∑ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞
  const analyzerResults = {
    totalFiles: 985,
    score: 88,
    architecture: 90,
    modularity: 80,
    maintainability: 95,
    complexity: 90,
    technicalDebt: 54,
    modules: 237,
    patterns: 3,
    nestingDepth: 8,
    priorityIssues: 16
  };

  // –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const realityResults = {
    totalFiles: 985,
    score: 74, // —Ä–µ–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
    architecture: 100,
    modularity: 90,
    maintainability: 48,
    complexity: 88,
    technicalDebt: 43,
    modules: 237, // –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å —Ñ–∞–π–ª–∞–º–∏
    patterns: 4, // src, tests, docs, package.json, README, config
    nestingDepth: 8,
    priorityIssues: 15 // backup + duplicate files
  };

  console.log('üîç –°–†–ê–í–ù–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–û–í:');
  console.log('-'.repeat(80));
  console.log('–ú–µ—Ç—Ä–∏–∫–∞                    | –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä | –†–µ–∞–ª—å–Ω–æ—Å—Ç—å | –¢–æ—á–Ω–æ—Å—Ç—å | –°—Ç–∞—Ç—É—Å');
  console.log('-'.repeat(80));

  const comparisons = [
    ['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤', analyzerResults.totalFiles, realityResults.totalFiles],
    ['–û–±—â–∏–π –±–∞–ª–ª', analyzerResults.score, realityResults.score],
    ['–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞', analyzerResults.architecture, realityResults.architecture],
    ['–ú–æ–¥—É–ª—å–Ω–æ—Å—Ç—å', analyzerResults.modularity, realityResults.modularity],
    ['–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ—Å—Ç—å', analyzerResults.maintainability, realityResults.maintainability],
    ['–°–ª–æ–∂–Ω–æ—Å—Ç—å', analyzerResults.complexity, realityResults.complexity],
    ['–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–æ–ª–≥', analyzerResults.technicalDebt, realityResults.technicalDebt],
    ['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–¥—É–ª–µ–π', analyzerResults.modules, realityResults.modules],
    ['–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã', analyzerResults.patterns, realityResults.patterns],
    ['–ì–ª—É–±–∏–Ω–∞ –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏', analyzerResults.nestingDepth, realityResults.nestingDepth],
    ['–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã', analyzerResults.priorityIssues, realityResults.priorityIssues]
  ];

  let totalAccuracy = 0;
  let accurateCount = 0;

  comparisons.forEach(([metric, analyzed, reality]) => {
    const accuracy = calculateAccuracy(analyzed, reality);
    const status = accuracy >= 90 ? '‚úÖ' : accuracy >= 70 ? '‚ö†Ô∏è' : '‚ùå';

    console.log(`${metric.padEnd(25)} | ${String(analyzed).padEnd(10)} | ${String(reality).padEnd(10)} | ${String(accuracy).padEnd(8)}% | ${status}`);

    totalAccuracy += accuracy;
    if (accuracy >= 80) accurateCount++;
  });

  const overallAccuracy = Math.round(totalAccuracy / comparisons.length);
  const detectionRate = Math.round((accurateCount / comparisons.length) * 100);

  console.log('-'.repeat(80));
  console.log(`–û–ë–©–ê–Ø –¢–û–ß–ù–û–°–¢–¨: ${overallAccuracy}%`);
  console.log(`–ö–ê–ß–ï–°–¢–í–û –û–ë–ù–ê–†–£–ñ–ï–ù–ò–Ø: ${detectionRate}%`);

  console.log('\nüéØ –ê–ù–ê–õ–ò–ó –ê–î–ï–ö–í–ê–¢–ù–û–°–¢–ò:');
  console.log('-'.repeat(50));

  // –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–π –º–µ—Ç—Ä–∏–∫–∏
  console.log('\nüìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤: –ò–î–ï–ê–õ–¨–ù–û ‚úÖ');
  console.log('   ‚Ä¢ –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Ç–æ—á–Ω–æ –ø–æ–¥—Å—á–∏—Ç–∞–ª 985 —Ñ–∞–π–ª–æ–≤');
  console.log('   ‚Ä¢ FileSystemScanner —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');

  console.log('\nüèóÔ∏è  –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã: –•–û–†–û–®–û ‚ö†Ô∏è');
  console.log('   ‚Ä¢ –û–±–Ω–∞—Ä—É–∂–∏–ª 3 –∏–∑ 4 –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ (75% —Ç–æ—á–Ω–æ—Å—Ç—å)');
  console.log('   ‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ –Ω–µ —É—á–µ–ª –≤—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã');

  console.log('\nüß© –ú–æ–¥—É–ª—å–Ω–æ—Å—Ç—å: –û–¢–õ–ò–ß–ù–û ‚úÖ');
  console.log('   ‚Ä¢ –¢–æ—á–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏–ª 237 –º–æ–¥—É–ª–µ–π');
  console.log('   ‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞—Å—Å—á–∏—Ç–∞–ª —Å—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä');

  console.log('\nüîß –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ—Å—Ç—å: –ü–†–û–ë–õ–ï–ú–ê ‚ùå');
  console.log('   ‚Ä¢ –ü–µ—Ä–µ–æ—Ü–µ–Ω–∏–ª –Ω–∞ 47 –ø—É–Ω–∫—Ç–æ–≤ (95 vs 48)');
  console.log('   ‚Ä¢ –ù–µ–¥–æ–æ—Ü–µ–Ω–∏–ª –≤–ª–∏—è–Ω–∏–µ backup —Ñ–∞–π–ª–æ–≤ –∏ –¥—É–±–ª–µ–π');
  console.log('   ‚Ä¢ –ù—É–∂–Ω–æ —É–ª—É—á—à–∏—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º –æ—Ü–µ–Ω–∫–∏ –ø—Ä–æ–±–ª–µ–º');

  console.log('\nüìä –°–ª–æ–∂–Ω–æ—Å—Ç—å: –•–û–†–û–®–û ‚úÖ');
  console.log('   ‚Ä¢ –¢–æ—á–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏–ª –≥–ª—É–±–∏–Ω—É –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏ (8)');
  console.log('   ‚Ä¢ –ê–¥–µ–∫–≤–∞—Ç–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã');

  console.log('\n‚ö†Ô∏è  –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–æ–ª–≥: –ù–ï–¢–û–ß–ù–û–°–¢–¨ ‚ö†Ô∏è');
  console.log('   ‚Ä¢ –ü–µ—Ä–µ–æ—Ü–µ–Ω–∏–ª –∫–∞—á–µ—Å—Ç–≤–æ (54 vs 43)');
  console.log('   ‚Ä¢ –û–±–Ω–∞—Ä—É–∂–∏–ª 16 vs 15 –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (—Ö–æ—Ä–æ—à–æ)');
  console.log('   ‚Ä¢ –ù—É–∂–Ω–æ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–µ—Å–æ–≤—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã');

  console.log('\nüìà –û–±—â–∏–π –±–∞–ª–ª: –ü–ï–†–ï–û–¶–ï–ù–ö–ê ‚ö†Ô∏è');
  console.log('   ‚Ä¢ –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä: 88/100 (–æ–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω–æ)');
  console.log('   ‚Ä¢ –†–µ–∞–ª—å–Ω–æ—Å—Ç—å: 74/100 (–±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–æ)');
  console.log('   ‚Ä¢ –†–∞–∑–Ω–∏—Ü–∞: +14 –ø—É–Ω–∫—Ç–æ–≤');

  console.log('\nüîß –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –£–õ–£–ß–®–ï–ù–ò–Æ:');
  console.log('-'.repeat(50));

  const improvements = [
    '1. –ö–†–ò–¢–ò–ß–ù–û: –ò—Å–ø—Ä–∞–≤–∏—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º –æ—Ü–µ–Ω–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–æ—Å—Ç–∏',
    '   ‚Ä¢ –£–≤–µ–ª–∏—á–∏—Ç—å —à—Ç—Ä–∞—Ñ—ã –∑–∞ backup —Ñ–∞–π–ª—ã –∏ –¥—É–±–ª–∏',
    '   ‚Ä¢ –£—á–µ—Å—Ç—å –ø—É—Å—Ç—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (28 –Ω–∞–π–¥–µ–Ω–æ)',
    '   ‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤',
    '',
    '2. –í–ê–ñ–ù–û: –°–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ü–µ–Ω–∫—É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–ª–≥–∞',
    '   ‚Ä¢ –ü–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–µ—Å–æ–≤—ã–µ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã',
    '   ‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –∞–Ω–∞–ª–∏–∑ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–æ–≤',
    '   ‚Ä¢ –£—á–µ—Å—Ç—å –Ω–∞–ª–∏—á–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
    '',
    '3. –ñ–ï–õ–ê–¢–ï–õ–¨–ù–û: –£–ª—É—á—à–∏—Ç—å –¥–µ—Ç–µ–∫—Ü–∏—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤',
    '   ‚Ä¢ –õ—É—á—à–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã',
    '   ‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É package.json',
    '   ‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ–≥–ª–∞—à–µ–Ω–∏–π –∏–º–µ–Ω–æ–≤–∞–Ω–∏—è',
    '',
    '4. –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø: –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –æ–±—â—É—é –æ—Ü–µ–Ω–∫—É',
    '   ‚Ä¢ –°–¥–µ–ª–∞—Ç—å –æ—Ü–µ–Ω–∫—É –±–æ–ª–µ–µ –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–æ–π',
    '   ‚Ä¢ –î–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –ø—Ä–æ–≤–µ—Ä–æ–∫ –∫–∞—á–µ—Å—Ç–≤–∞',
    '   ‚Ä¢ –£—á–µ—Å—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏–∫—É JavaScript/TypeScript –ø—Ä–æ–µ–∫—Ç–æ–≤'
  ];

  improvements.forEach(improvement => {
    console.log(improvement);
  });

  console.log('\nüéñÔ∏è  –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:');
  console.log('-'.repeat(50));

  if (overallAccuracy >= 85) {
    console.log('‚úÖ –ê–ù–ê–õ–ò–ó–ê–¢–û–† –†–ê–ë–û–¢–ê–ï–¢ –ê–î–ï–ö–í–ê–¢–ù–û!');
    console.log('   ‚Ä¢ –í—ã—Å–æ–∫–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –±–∞–∑–æ–≤—ã—Ö –º–µ—Ç—Ä–∏–∫');
    console.log('   ‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤');
    console.log('   ‚Ä¢ –ì–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ');
    console.log('   ‚Ä¢ –¢—Ä–µ–±—É—é—Ç—Å—è –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –¥–æ—Ä–∞–±–æ—Ç–∫–∏');
  } else if (overallAccuracy >= 70) {
    console.log('‚ö†Ô∏è  –ê–ù–ê–õ–ò–ó–ê–¢–û–† –¢–†–ï–ë–£–ï–¢ –î–û–†–ê–ë–û–¢–ö–ò');
    console.log('   ‚Ä¢ –•–æ—Ä–æ—à–∞—è –æ—Å–Ω–æ–≤–∞, –Ω–æ –µ—Å—Ç—å –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏');
    console.log('   ‚Ä¢ –ù—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º—ã –æ—Ü–µ–Ω–∫–∏');
    console.log('   ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö');
  } else {
    console.log('‚ùå –ê–ù–ê–õ–ò–ó–ê–¢–û–† –¢–†–ï–ë–£–ï–¢ –°–ï–†–¨–ï–ó–ù–´–• –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô');
    console.log('   ‚Ä¢ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏');
    console.log('   ‚Ä¢ –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤');
  }

  console.log(`\nüìä –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ –∞–¥–µ–∫–≤–∞—Ç–Ω–æ—Å—Ç–∏: ${overallAccuracy}/100`);
  console.log(`üéØ –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –§–∞–∑–µ 2: ${overallAccuracy >= 80 ? '–î–ê ‚úÖ' : '–ù–ï–¢ ‚ùå'}`);

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
  const report = {
    timestamp: new Date().toISOString(),
    project: 'kinderly-events',
    analyzer: 'FileStructureAnalyzer v3.0',
    overallAccuracy,
    detectionRate,
    analyzerResults,
    realityResults,
    comparisons: comparisons.map(([metric, analyzed, reality]) => ({
      metric,
      analyzed,
      reality,
      accuracy: calculateAccuracy(analyzed, reality),
      status: calculateAccuracy(analyzed, reality) >= 90 ? 'excellent' :
              calculateAccuracy(analyzed, reality) >= 70 ? 'good' : 'poor'
    })),
    improvements,
    recommendation: overallAccuracy >= 85 ? 'ready-for-production' :
                   overallAccuracy >= 70 ? 'needs-improvements' : 'needs-major-fixes',
    readyForPhase2: overallAccuracy >= 80
  };

  const reportPath = path.join(__dirname, 'reports', `final-validation-${Date.now()}.json`);
  fs.writeFileSync(reportPath, JSON.stringify(report, null, 2));
  console.log(`\nüíæ –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${reportPath}`);

  return report;
}

function calculateAccuracy(analyzed, reality) {
  if (reality === 0) return analyzed === 0 ? 100 : 0;
  const diff = Math.abs(analyzed - reality);
  const relative = diff / reality;
  return Math.max(0, Math.round(100 - (relative * 100)));
}

// –ó–∞–ø—É—Å–∫ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
if (require.main === module) {
  try {
    const result = generateValidationSummary();

    console.log('\nüéâ –í–ê–õ–ò–î–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!');

    if (result.readyForPhase2) {
      console.log('üöÄ FileStructureAnalyzer v3.0 –≥–æ—Ç–æ–≤ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –§–∞–∑–µ 2');
      console.log('   ‚Ä¢ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –∞–Ω–∞–ª–∏–∑–∞');
      console.log('   ‚Ä¢ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –¥—Ä—É–≥–∏–º–∏ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞–º–∏');
      console.log('   ‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –µ–¥–∏–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π');
    } else {
      console.log('‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –∫ –§–∞–∑–µ 2');
      console.log('   ‚Ä¢ –ò—Å–ø—Ä–∞–≤—å—Ç–µ –≤—ã—è–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—Ç–æ—á–Ω–æ—Å—Ç–∏');
      console.log('   ‚Ä¢ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –Ω–∞ –¥—Ä—É–≥–∏—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö');
      console.log('   ‚Ä¢ –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–∞–ª–∏–¥–∞—Ü–∏—é');
    }

    process.exit(0);

  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞:', error.message);
    process.exit(1);
  }
}

module.exports = { generateValidationSummary };
