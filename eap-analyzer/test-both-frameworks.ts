/**
 * –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç VitestChecker –∏ JestChecker —Å SimpleOrchestrator
 */

import { SimpleOrchestrator } from './simple-orchestrator.js';
import { VitestCheckerAdapter } from './src/checkers/testing/checkers/VitestCheckerAdapter.js';
import { JestCheckerAdapter } from './src/checkers/testing/checkers/JestCheckerAdapter.js';
import { CheckContext } from './src/core/types.js';

async function testBothFrameworks() {
  console.log('üîç –û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç Vitest –∏ Jest —á–µ–∫–µ—Ä–æ–≤\n');

  try {
    // 1. –°–æ–∑–¥–∞–µ–º SimpleOrchestrator
    console.log('üèóÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ SimpleOrchestrator...');
    const orchestrator = new SimpleOrchestrator();

    // 2. –°–æ–∑–¥–∞–µ–º –æ–±–∞ —á–µ–∫–µ—Ä–∞
    console.log('‚öôÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫–µ—Ä–æ–≤...');
    const vitestChecker = new VitestCheckerAdapter();
    const jestChecker = new JestCheckerAdapter();

    // 3. –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±–∞ —á–µ–∫–µ—Ä–∞
    console.log('\nüîó –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —á–µ–∫–µ—Ä–æ–≤...');
    orchestrator.registerChecker('vitest-framework', vitestChecker);
    orchestrator.registerChecker('jest-framework', jestChecker);

    console.log(`üìä –í—Å–µ–≥–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ —á–µ–∫–µ—Ä–æ–≤: ${orchestrator.getCheckerCount()}`);
    console.log(`üìã –°–ø–∏—Å–æ–∫ —á–µ–∫–µ—Ä–æ–≤: ${orchestrator.getCheckerNames().join(', ')}`);

    // 4. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    const testContext: CheckContext = {
      projectPath: process.cwd(),
      config: {},
    };

    console.log(`\nüìÇ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º—ã–π –ø—Ä–æ–µ–∫—Ç: ${testContext.projectPath}`);

    // 5. –¢–µ—Å—Ç —á–µ—Ä–µ–∑ SimpleOrchestrator
    console.log('\nüé≠ === –ö–û–ú–ü–õ–ï–ö–°–ù–´–ô –ê–ù–ê–õ–ò–ó –ß–ï–†–ï–ó SimpleOrchestrator ===');
    const startTime = Date.now();
    const fullAnalysis = await orchestrator.analyzeProject(testContext.projectPath);
    const endTime = Date.now();

    console.log(`‚è±Ô∏è  –û–±—â–µ–µ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${endTime - startTime}ms`);
    console.log(`üìã –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${Object.keys(fullAnalysis.checks).length}`);

    // 6. –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞–º
    console.log('\nüìä === –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–û –§–†–ï–ô–ú–í–û–†–ö–ê–ú ===');

    const vitestResults = Object.entries(fullAnalysis.checks).filter(
      ([key, result]) => key.includes('vitest') || result.checker.includes('vitest')
    );

    const jestResults = Object.entries(fullAnalysis.checks).filter(
      ([key, result]) => key.includes('jest') || result.checker.includes('jest')
    );

    console.log(`üîß Vitest —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: ${vitestResults.length}`);
    vitestResults.forEach(([key, result]) => {
      const status = result.passed ? '‚úÖ' : '‚ùå';
      console.log(`   ${status} ${key}: ${result.message} (${result.score}/100)`);

      if (result.details) {
        console.log(`      ‚Ä¢ Vitest —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${result.details.hasVitest ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log(`      ‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: ${result.details.hasConfig ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log(`      ‚Ä¢ –¢–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤: ${result.details.testFileCount || 0}`);
      }
    });

    console.log(`\nüß™ Jest —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: ${jestResults.length}`);
    jestResults.forEach(([key, result]) => {
      const status = result.passed ? '‚úÖ' : '‚ùå';
      console.log(`   ${status} ${key}: ${result.message} (${result.score}/100)`);

      if (result.details) {
        console.log(`      ‚Ä¢ Jest —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: ${result.details.hasJest ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log(`      ‚Ä¢ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: ${result.details.hasConfig ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log(`      ‚Ä¢ –¢–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤: ${result.details.testFileCount || 0}`);
      }
    });

    // 7. –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('\nüìà === –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê ===');

    const allResults = Object.values(fullAnalysis.checks);
    const totalScore = allResults.reduce((sum, result) => sum + result.score, 0);
    const averageScore = allResults.length > 0 ? Math.round(totalScore / allResults.length) : 0;
    const passedCount = allResults.filter(result => result.passed).length;
    const failedCount = allResults.length - passedCount;

    console.log(`   - –í—Å–µ–≥–æ –ø—Ä–æ–≤–µ—Ä–æ–∫: ${allResults.length}`);
    console.log(`   - –ü—Ä–æ–π–¥–µ–Ω–æ: ${passedCount}`);
    console.log(`   - –ù–µ –ø—Ä–æ–π–¥–µ–Ω–æ: ${failedCount}`);
    console.log(`   - –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: ${averageScore}/100`);
    console.log(`   - –û–±—â–∏–π –±–∞–ª–ª: ${totalScore}/${allResults.length * 100}`);

    // 8. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é
    console.log('\nüí° === –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –£–õ–£–ß–®–ï–ù–ò–Æ ===');

    const allRecommendations: string[] = [];
    allResults.forEach(result => {
      if (result.recommendations) {
        allRecommendations.push(...result.recommendations);
      }
    });

    const uniqueRecommendations = [...new Set(allRecommendations)];

    if (uniqueRecommendations.length > 0) {
      console.log('–î–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –ø—Ä–æ–µ–∫—Ç–µ:');
      uniqueRecommendations.forEach((rec, index) => {
        console.log(`   ${index + 1}. ${rec}`);
      });
    } else {
      console.log('‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã, –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–µ —Ç—Ä–µ–±—É—é—Ç—Å—è');
    }

    // 9. –í—ã–±–æ—Ä —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
    console.log('\nüéØ === –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –í–´–ë–û–†–£ –§–†–ï–ô–ú–í–û–†–ö–ê ===');

    const vitestScore = vitestResults.length > 0 ? vitestResults[0][1].score : 0;
    const jestScore = jestResults.length > 0 ? jestResults[0][1].score : 0;

    if (vitestScore === 0 && jestScore === 0) {
      console.log('üìã –í –ø—Ä–æ–µ–∫—Ç–µ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –Ω–∏ –æ–¥–∏–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫');
      console.log('üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞:');
      console.log('   ‚Ä¢ Vitest - —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π, –±—ã—Å—Ç—Ä—ã–π, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è Vite –ø—Ä–æ–µ–∫—Ç–æ–≤');
      console.log('   ‚Ä¢ Jest - –∑—Ä–µ–ª—ã–π, –ø–æ–ø—É–ª—è—Ä–Ω—ã–π, –±–æ–ª—å—à–∞—è —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞');
      console.log('   ‚Ä¢ –î–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è Vitest');
      console.log('   ‚Ä¢ –î–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ - –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–±–æ—Ä–∫–∏');
    } else if (vitestScore > jestScore) {
      console.log('‚úÖ Vitest –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª—É—á—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –¥–∞–Ω–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ');
    } else if (jestScore > vitestScore) {
      console.log('‚úÖ Jest –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ª—É—á—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –¥–∞–Ω–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ');
    } else {
      console.log('‚öñÔ∏è  –û–±–∞ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã');
    }

    // 10. –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
    console.log('\nüèÜ === –§–ò–ù–ê–õ–¨–ù–ê–Ø –û–¶–ï–ù–ö–ê –ò–ù–¢–ï–ì–†–ê–¶–ò–ò ===');

    const integrationSuccess = vitestResults.length > 0 && jestResults.length > 0;
    const bothWorkCorrectly =
      vitestResults.every(([_, result]) => typeof result.score === 'number') &&
      jestResults.every(([_, result]) => typeof result.score === 'number');

    console.log(`   - –û–±–∞ —á–µ–∫–µ—Ä–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã: ${integrationSuccess ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}`);
    console.log(`   - –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã: ${bothWorkCorrectly ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}`);
    console.log(`   - –ë—ã—Å—Ç—Ä–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ: ${endTime - startTime < 100 ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç'}`);

    if (integrationSuccess && bothWorkCorrectly) {
      console.log('\nüéâ –ü–û–õ–ù–´–ô –£–°–ü–ï–•: –ú–æ–¥—É–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–æ—Ç–æ–≤–∞!');
      console.log('‚úÖ VitestChecker –∏ JestChecker –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã');
      console.log('‚úÖ SimpleOrchestrator –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —á–µ–∫–µ—Ä—ã');
      console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –≤ EAP v4.0');
      console.log('\nüöÄ Phase 1 –º–æ–¥—É–ª—å–Ω–æ–π —Ç–µ—Å—Ç–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    } else {
      console.log('\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π');
      if (!integrationSuccess) console.log('   - –ù–µ –≤—Å–µ —á–µ–∫–µ—Ä—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã');
      if (!bothWorkCorrectly) console.log('   - –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç —á–µ–∫–µ—Ä–æ–≤');
    }

    return {
      integrationSuccess: integrationSuccess && bothWorkCorrectly,
      vitestScore,
      jestScore,
      averageScore,
      recommendations: uniqueRecommendations,
    };
  } catch (error) {
    console.error('\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê:', error);
    if (error instanceof Error) {
      console.error('   –°–æ–æ–±—â–µ–Ω–∏–µ:', error.message);
      console.error('   –°—Ç–µ–∫:', error.stack?.split('\n').slice(0, 10).join('\n'));
    }
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–π —Ç–µ—Å—Ç
console.log('üöÄ –ó–∞–ø—É—Å–∫ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–æ–≤...\n');
testBothFrameworks()
  .then(result => {
    console.log('\nüìä –§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢:');
    console.log(`   - –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: ${result.integrationSuccess}`);
    console.log(`   - Vitest –æ—Ü–µ–Ω–∫–∞: ${result.vitestScore}/100`);
    console.log(`   - Jest –æ—Ü–µ–Ω–∫–∞: ${result.jestScore}/100`);
    console.log(`   - –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞: ${result.averageScore}/100`);
    console.log(`   - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: ${result.recommendations.length}`);

    if (result.integrationSuccess) {
      console.log('\nüéØ –ú–æ–¥—É–ª—å–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ EAP v4.0 –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É!');
    }
  })
  .catch(error => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–º —Ç–µ—Å—Ç–µ:', error);
    process.exit(1);
  });
