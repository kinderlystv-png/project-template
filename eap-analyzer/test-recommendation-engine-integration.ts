import { RecommendationEngine } from './src/recommendations/RecommendationEngine';
import { SecurityChecker } from './src/checkers/security/SecurityChecker';
import { CheckContext } from './src/types/index.js';

/**
 * –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–µ–±-–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å RecommendationEngine
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–ª–Ω—ã–π –ø–æ—Ç–æ–∫: SecurityChecker ‚Üí WebSecurity ‚Üí RecommendationEngine
 */

async function testWebSecurityRecommendationEngineIntegration() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–µ–±-–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å RecommendationEngine...\n');

  const testCode = `
// XSS —É—è–∑–≤–∏–º–æ—Å—Ç–∏
function displayUserData(userData) {
  document.getElementById('content').innerHTML = userData.name;
  document.body.innerHTML += \`<p>\${userData.comment}</p>\`;

  // eval —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ –¥–∞–Ω–Ω—ã–º–∏
  eval('var x = ' + userData.value);
}

// CSRF —É—è–∑–≤–∏–º–æ—Å—Ç—å
function transferMoney(amount, to) {
  fetch('/api/transfer', {
    method: 'POST',
    body: JSON.stringify({ amount, to })
  });
}

// –ù–µ–±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
function createLink(url) {
  document.write('<a href="' + url + '">Click me</a>');
  return '<script>alert("' + url + '")</script>';
}
`;

  try {
    // 1. –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    console.log('1Ô∏è‚É£ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...');
    const context: CheckContext = {
      projectPath: process.cwd(),
      projectInfo: {
        name: 'test-project',
        version: '1.0.0',
        hasTypeScript: true,
        hasPackageJson: true,
        packageManager: 'npm',
        files: ['test.js'],
      },
      options: {
        includeTests: true,
        includeNodeModules: false,
        excludePatterns: [],
      },
    };

    // 2. –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    console.log('2Ô∏è‚É£ –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...');
    const securityResults = await SecurityChecker.checkComponent(context);

    console.log(`‚úÖ –û–±—â–∏–π –±–∞–ª–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: ${securityResults.overallScore || 0}`);
    console.log(`üîç –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º –∫–æ–¥–∞: ${securityResults.code?.issues?.length || 0}`);
    console.log(
      `üï∑Ô∏è –ù–∞–π–¥–µ–Ω–æ XSS —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π: ${securityResults.webSecurity?.xssResults?.length || 0}`
    );
    console.log(
      `üõ°Ô∏è –ù–∞–π–¥–µ–Ω–æ CSRF —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π: ${securityResults.webSecurity?.csrfResults?.length || 0}\n`
    );

    // 3. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ RecommendationEngine
    console.log('3Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —á–µ—Ä–µ–∑ RecommendationEngine...');

    let webRecommendations: any[] = [];
    if (securityResults.webSecurity) {
      webRecommendations = RecommendationEngine.generateRecommendations(
        securityResults.webSecurity
      );
    }

    console.log(`üìã –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –≤–µ–±-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: ${webRecommendations.length}\n`);

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    console.log('4Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ –∫–∞—á–µ—Å—Ç–≤–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...');

    const categories = [...new Set(webRecommendations.map((r: any) => r.category))];
    console.log(`üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: ${categories.join(', ')}`);

    const priorityStats = webRecommendations.reduce((stats: any, rec: any) => {
      stats[rec.priority] = (stats[rec.priority] || 0) + 1;
      return stats;
    }, {});
    console.log(`‚≠ê –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:`, priorityStats);

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ç–∞–ª–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    console.log('\n5Ô∏è‚É£ –î–µ—Ç–∞–ª–∏ –ø–µ—Ä–≤—ã—Ö 3 —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:');
    webRecommendations.slice(0, 3).forEach((rec: any, index: number) => {
      console.log(`\nüìå –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è ${index + 1}: ${rec.title}`);
      console.log(`   üí° –û–ø–∏—Å–∞–Ω–∏–µ: ${rec.description?.substring(0, 80)}...`);
      console.log(`   üéØ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${rec.category} | –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${rec.priority}`);
      console.log(`   ‚ö†Ô∏è –°–µ—Ä—å–µ–∑–Ω–æ—Å—Ç—å: ${rec.severity} | –°–ª–æ–∂–Ω–æ—Å—Ç—å: ${rec.difficulty}`);
      console.log(`   üîß –®–∞–≥–æ–≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${rec.fixTemplate?.steps?.length || 0}`);
      console.log(`   üìö –†–µ—Å—É—Ä—Å–æ–≤: ${rec.documentation?.links?.length || 0}`);
      console.log(`   üè∑Ô∏è –¢–µ–≥–∏: ${rec.tags?.join(', ') || '–Ω–µ—Ç'}`);
    });

    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫—É –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    console.log('\n6Ô∏è‚É£ –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º...');
    const grouped = RecommendationEngine.groupRecommendationsByCategory(webRecommendations);

    Object.entries(grouped).forEach(([category, recs]: [string, any]) => {
      console.log(`üìÇ ${category}: ${recs.length} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π`);
    });

    // 7. –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    console.log('\n7Ô∏è‚É£ –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...');

    const validationResults = webRecommendations.map((rec: any) => {
      const errors: string[] = [];

      if (!rec.id) errors.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç ID');
      if (!rec.title) errors.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫');
      if (!rec.description) errors.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ');
      if (!rec.category) errors.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏—è');
      if (!rec.severity) errors.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–µ—Ä—å–µ–∑–Ω–æ—Å—Ç—å');
      if (!rec.fixTemplate?.steps?.length) errors.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —à–∞–≥–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è');

      return { id: rec.id, valid: errors.length === 0, errors };
    });

    const validCount = validationResults.filter(v => v.valid).length;
    console.log(`‚úÖ –í–∞–ª–∏–¥–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: ${validCount}/${webRecommendations.length}`);

    const invalidRecs = validationResults.filter(v => !v.valid);
    if (invalidRecs.length > 0) {
      console.log('‚ùå –û—à–∏–±–∫–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:');
      invalidRecs.forEach(rec => {
        console.log(`   ${rec.id}: ${rec.errors.join(', ')}`);
      });
    }

    // 8. –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
    console.log(`üîç –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞: ${testCode.split('\n').length}`);
    console.log(`‚ö†Ô∏è –û–±—â–∏–π –±–∞–ª–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: ${securityResults.overallScore || 0}`);
    console.log(
      `üåê –ù–∞–π–¥–µ–Ω–æ –≤–µ–±-—É—è–∑–≤–∏–º–æ—Å—Ç–µ–π: ${(securityResults.webSecurity?.xssResults?.length || 0) + (securityResults.webSecurity?.csrfResults?.length || 0)}`
    );
    console.log(`üí° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: ${webRecommendations.length}`);
    console.log(`‚úÖ –í–∞–ª–∏–¥–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: ${validCount}`);
    console.log(`üè∑Ô∏è –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${categories.length}`);

    console.log('\nüéâ –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤–µ–±-–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Å RecommendationEngine —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!');
    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:', error);
    return false;
  }
} // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testWebSecurityRecommendationEngineIntegration()
  .then(success => {
    if (success) {
      console.log('\n‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!');
      process.exit(0);
    } else {
      console.log('\n‚ùå –¢–ï–°–¢–´ –ü–†–û–í–ê–õ–ò–õ–ò–°–¨!');
      process.exit(1);
    }
  })
  .catch(error => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });
