/**
 * –ü—Ä–æ—Å—Ç–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ—Ä–æ–∂–Ω—ã—Ö –∫–∞—Ä—Ç —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞
 * –¢–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
 */

console.log('üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç–æ–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞');
console.log('='.repeat(80));

// –ò–º–∏—Ç–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–µ–∫—Ç–∞
const mockBasicResults = {
  totalFiles: 156,
  totalLines: 15420,
  avgFileSize: 98.8,
  directoryDepth: 5,
  emptyFiles: 3,
  testFiles: 24,
  documentationFiles: 8,
  patterns: ['SvelteKit', 'TypeScript', 'Vite'],
  filesToRefactor: 12,
};

const mockAdvancedResults = {
  avgComplexity: 4.2,
  duplicationPercentage: 8.5,
  maintainabilityIndex: 72,
  technicalDebt: 145,
  hotspots: [
    { file: 'src/components/DataTable.svelte', complexity: 15, issues: 3 },
    { file: 'src/utils/validation.ts', complexity: 12, issues: 2 },
    { file: 'src/lib/api.ts', complexity: 10, issues: 2 },
  ],
  circularDependencies: [{ cycle: ['src/stores/user.ts', 'src/stores/app.ts'] }],
  cohesion: 0.65,
};

const mockRecommendations = [
  {
    type: 'cyclic-dependencies',
    priority: 'high',
    description: '–£—Å—Ç—Ä–∞–Ω–∏—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –º–µ–∂–¥—É stores',
    files: ['src/stores/user.ts', 'src/stores/app.ts'],
    effort: 8,
    impact: '–£–ª—É—á—à–∏—Ç –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –∏ —Ç–µ—Å—Ç–∏—Ä—É–µ–º–æ—Å—Ç—å',
  },
  {
    type: 'large-files',
    priority: 'high',
    description: '–†–∞–∑–¥–µ–ª–∏—Ç—å –±–æ–ª—å—à–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç DataTable',
    files: ['src/components/DataTable.svelte'],
    effort: 16,
    impact: '–ü–æ–≤—ã—Å–∏—Ç —á–∏—Ç–∞–µ–º–æ—Å—Ç—å –∏ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ',
  },
  {
    type: 'complex-functions',
    priority: 'medium',
    description: '–£–ø—Ä–æ—Å—Ç–∏—Ç—å —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏',
    files: ['src/utils/validation.ts'],
    effort: 6,
    impact: '–°–Ω–∏–∑–∏—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—à–∏–±–æ–∫',
  },
  {
    type: 'duplication',
    priority: 'medium',
    description: '–£—Å—Ç—Ä–∞–Ω–∏—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ API –º–æ–¥—É–ª—è—Ö',
    files: ['src/lib/api.ts', 'src/utils/fetch.ts'],
    effort: 4,
    impact: '–£–ø—Ä–æ—Å—Ç–∏—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è',
  },
  {
    type: 'empty-files',
    priority: 'low',
    description: '–£–¥–∞–ª–∏—Ç—å –ø—É—Å—Ç—ã–µ —Ñ–∞–π–ª—ã',
    files: ['src/temp/placeholder.ts', 'src/unused/old.ts'],
    effort: 1,
    impact: '–û—á–∏—Å—Ç–∏—Ç –ø—Ä–æ–µ–∫—Ç –æ—Ç –º—É—Å–æ—Ä–∞',
  },
];

/**
 * –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ –æ–±—â–µ–π –æ—Ü–µ–Ω–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
 */
function calculateStructureScore(basicResults, advancedResults) {
  let score = 100;

  // –®—Ç—Ä–∞—Ñ—ã –∑–∞ –ø—Ä–æ–±–ª–µ–º—ã
  if (basicResults.emptyFiles > 0) score -= basicResults.emptyFiles * 2;
  if (advancedResults.duplicationPercentage > 5)
    score -= (advancedResults.duplicationPercentage - 5) * 2;
  if (advancedResults.avgComplexity > 10) score -= (advancedResults.avgComplexity - 10) * 3;
  if (advancedResults.maintainabilityIndex < 80)
    score -= (80 - advancedResults.maintainabilityIndex) * 0.5;
  if (advancedResults.circularDependencies.length > 0)
    score -= advancedResults.circularDependencies.length * 10;

  // –ë–æ–Ω—É—Å—ã –∑–∞ —Ö–æ—Ä–æ—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏
  if (basicResults.testFiles > 0) score += Math.min(10, basicResults.testFiles);
  if (basicResults.documentationFiles > 0) score += Math.min(5, basicResults.documentationFiles);

  return Math.max(0, Math.min(100, Math.round(score)));
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –±—É–∫–≤–µ–Ω–Ω—É—é –æ—Ü–µ–Ω–∫—É
 */
function getGradeFromScore(score) {
  if (score >= 90) return 'A+';
  if (score >= 85) return 'A';
  if (score >= 80) return 'A-';
  if (score >= 75) return 'B+';
  if (score >= 70) return 'B';
  if (score >= 65) return 'B-';
  if (score >= 60) return 'C+';
  if (score >= 55) return 'C';
  if (score >= 50) return 'C-';
  return 'F';
}

/**
 * –°—Ç—Ä–æ–∏—Ç –¥–æ—Ä–æ–∂–Ω—É—é –∫–∞—Ä—Ç—É —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞
 */
function buildRefactoringRoadmap(basicResults, advancedResults, recommendations) {
  const tasks = recommendations.map(rec => ({
    title: rec.description,
    priority: rec.priority,
    effort: rec.effort,
    impact: rec.impact,
    files: rec.files,
  }));

  // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –ø–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏
  const priorityOrder = { high: 3, medium: 2, low: 1 };
  tasks.sort((a, b) => {
    const priorityDiff = priorityOrder[b.priority] - priorityOrder[a.priority];
    if (priorityDiff !== 0) return priorityDiff;
    return b.effort - a.effort; // –ë–æ–ª–µ–µ —Ç—Ä—É–¥–æ–∑–∞—Ç—Ä–∞—Ç–Ω—ã–µ –∑–∞–¥–∞—á–∏ –≤ —Ä–∞–º–∫–∞—Ö –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞
  });

  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∑–∞–¥–∞—á–∏ –ø–æ —Ñ–∞–∑–∞–º
  let currentEffort = 0;
  const phases = { immediate: [], shortTerm: [], longTerm: [] };

  for (const task of tasks) {
    if (task.priority === 'high' || currentEffort < 20) {
      phases.immediate.push(task);
    } else if (currentEffort < 40) {
      phases.shortTerm.push(task);
    } else {
      phases.longTerm.push(task);
    }
    currentEffort += task.effort;
  }

  return {
    tasks,
    phases,
    totalEffort: tasks.reduce((sum, task) => sum + task.effort, 0),
  };
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–æ—Ä–æ–∂–Ω—É—é –∫–∞—Ä—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown
 */
function generateRefactoringRoadmap(basicResults, advancedResults, recommendations) {
  const score = calculateStructureScore(basicResults, advancedResults);
  const grade = getGradeFromScore(score);
  const roadmap = buildRefactoringRoadmap(basicResults, advancedResults, recommendations);
  const criticalIssues = recommendations.filter(r => r.priority === 'high').length;

  const content = `# –î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–µ–∫—Ç–∞

## üìä –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ

**–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞:** ${grade} (${score}/100 –±–∞–ª–ª–æ–≤)
**–í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤:** ${basicResults.totalFiles}
**–°—Ç—Ä–æ–∫ –∫–æ–¥–∞:** ${basicResults.totalLines.toLocaleString()}
**–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º:** ${criticalIssues}
**–ù–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞:** ${score < 60 ? '–í–´–°–û–ö–ê–Ø' : score < 80 ? '–°–†–ï–î–ù–Ø–Ø' : '–ù–ò–ó–ö–ê–Ø'}

### –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:
${advancedResults.circularDependencies.length > 0 ? `- ${advancedResults.circularDependencies.length} —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π\n` : ''}${basicResults.emptyFiles > 0 ? `- ${basicResults.emptyFiles} –ø—É—Å—Ç—ã—Ö —Ñ–∞–π–ª–æ–≤\n` : ''}${advancedResults.duplicationPercentage > 5 ? `- ${advancedResults.duplicationPercentage.toFixed(1)}% –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞\n` : ''}${advancedResults.hotspots.length > 0 ? `- ${advancedResults.hotspots.length} –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤\n` : ''}

### –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã:
${basicResults.testFiles > 0 ? `- –ù–∞–ª–∏—á–∏–µ ${basicResults.testFiles} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤\n` : ''}${basicResults.documentationFiles > 0 ? `- –•–æ—Ä–æ—à–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (${basicResults.documentationFiles} —Ñ–∞–π–ª–æ–≤)\n` : ''}${advancedResults.cohesion > 0.7 ? `- –•–æ—Ä–æ—à–∞—è —Å–≤—è–∑–Ω–æ—Å—Ç—å –º–æ–¥—É–ª–µ–π (${(advancedResults.cohesion * 100).toFixed(1)}%)\n` : ''}

## üéØ –ü–ª–∞–Ω —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞

### –§–∞–∑–∞ 1: –ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è (0-2 –Ω–µ–¥–µ–ª–∏)
**–£—Å–∏–ª–∏—è:** ${roadmap.phases.immediate.reduce((sum, task) => sum + task.effort, 0)} —á–∞—Å–æ–≤

${roadmap.phases.immediate
  .map(
    (task, index) =>
      `${index + 1}. **${task.title}** (${task.effort}—á)
   - –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${task.priority.toUpperCase()}
   - –í–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ: ${task.impact}
   - –§–∞–π–ª—ã: ${task.files.slice(0, 2).join(', ')}${task.files.length > 2 ? ` –∏ –µ—â–µ ${task.files.length - 2}` : ''}
`
  )
  .join('\n')}

### –§–∞–∑–∞ 2: –ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è (2-4 –Ω–µ–¥–µ–ª–∏)
**–£—Å–∏–ª–∏—è:** ${roadmap.phases.shortTerm.reduce((sum, task) => sum + task.effort, 0)} —á–∞—Å–æ–≤

${roadmap.phases.shortTerm
  .map(
    (task, index) =>
      `${index + 1}. **${task.title}** (${task.effort}—á)
   - –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${task.priority.toUpperCase()}
   - –í–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ: ${task.impact}
   - –§–∞–π–ª—ã: ${task.files.slice(0, 2).join(', ')}${task.files.length > 2 ? ` –∏ –µ—â–µ ${task.files.length - 2}` : ''}
`
  )
  .join('\n')}

### –§–∞–∑–∞ 3: –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ (4-8 –Ω–µ–¥–µ–ª—å)
**–£—Å–∏–ª–∏—è:** ${roadmap.phases.longTerm.reduce((sum, task) => sum + task.effort, 0)} —á–∞—Å–æ–≤

${roadmap.phases.longTerm
  .map(
    (task, index) =>
      `${index + 1}. **${task.title}** (${task.effort}—á)
   - –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: ${task.priority.toUpperCase()}
   - –í–æ–∑–¥–µ–π—Å—Ç–≤–∏–µ: ${task.impact}
   - –§–∞–π–ª—ã: ${task.files.slice(0, 2).join(', ')}${task.files.length > 2 ? ` –∏ –µ—â–µ ${task.files.length - 2}` : ''}
`
  )
  .join('\n')}

## üìà –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã

–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞ –æ–∂–∏–¥–∞–µ—Ç—Å—è:

- **–ü–æ–≤—ã—à–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏** —Å ${grade} –¥–æ A- (80+ –±–∞–ª–ª–æ–≤)
- **–°–Ω–∏–∂–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–ª–≥–∞** –Ω–∞ 60-80%
- **–£–ª—É—á—à–µ–Ω–∏–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ–º–æ—Å—Ç–∏** –∫–æ–¥–∞ –¥–æ 85+
- **–£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º**
- **–ü–æ–≤—ã—à–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–º–∞–Ω–¥—ã** –Ω–∞ 25-40%

## üí∞ ROI –∞–Ω–∞–ª–∏–∑

**–û–±—â–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã:** ${roadmap.totalEffort} —á–∞—Å–æ–≤
**–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞:** ~${roadmap.totalEffort * 100} USD (–ø—Ä–∏ $100/—á–∞—Å)
**–û–∂–∏–¥–∞–µ–º–∞—è —ç–∫–æ–Ω–æ–º–∏—è:** ~${Math.round(roadmap.totalEffort * 200)} USD –≤ –≥–æ–¥
**ROI:** ${Math.round(((roadmap.totalEffort * 200) / (roadmap.totalEffort * 100)) * 100 - 100)}%
**–°—Ä–æ–∫ –æ–∫—É–ø–∞–µ–º–æ—Å—Ç–∏:** ${Math.round(((roadmap.totalEffort * 100) / ((roadmap.totalEffort * 200) / 12)) * 10) / 10} –º–µ—Å—è—Ü–µ–≤

## üìä –ú–µ—Ç—Ä–∏–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞

–î–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å:

1. **–û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã** (—Ü–µ–ª—å: 80+ –±–∞–ª–ª–æ–≤)
2. **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º** (—Ü–µ–ª—å: 0)
3. **–ü—Ä–æ—Ü–µ–Ω—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞** (—Ü–µ–ª—å: <5%)
4. **–ò–Ω–¥–µ–∫—Å —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ–º–æ—Å—Ç–∏** (—Ü–µ–ª—å: 80+)
5. **–ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏** (—Ü–µ–ª—å: 80%+)

## üß™ –°—Ç—Ä–∞—Ç–µ–≥–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

1. **–ü–µ—Ä–µ–¥ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–æ–º:** –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
2. **–í–æ –≤—Ä–µ–º—è —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞:** –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –ø–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ 80%+
3. **–ü–æ—Å–ª–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞:** –ü—Ä–æ–≤–µ—Å—Ç–∏ –ø–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ code review

---
*–î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏—Å—Ç–µ–º–æ–π –≠–ê–ü ${new Date().toLocaleDateString('ru-RU')}*`;

  return content;
}

// –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã
console.log('\nüîç –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...');
const score = calculateStructureScore(mockBasicResults, mockAdvancedResults);
const grade = getGradeFromScore(score);
const roadmap = buildRefactoringRoadmap(mockBasicResults, mockAdvancedResults, mockRecommendations);

console.log('\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê:');
console.log(`   –û—Ü–µ–Ω–∫–∞: ${grade} (${score}/100 –±–∞–ª–ª–æ–≤)`);
console.log(`   –§–∞–π–ª–æ–≤: ${mockBasicResults.totalFiles}`);
console.log(`   –°—Ç—Ä–æ–∫ –∫–æ–¥–∞: ${mockBasicResults.totalLines.toLocaleString()}`);
console.log(
  `   –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º: ${mockRecommendations.filter(r => r.priority === 'high').length}`
);

console.log('\nüó∫Ô∏è –î–û–†–û–ñ–ù–ê–Ø –ö–ê–†–¢–ê:');
console.log(`   –í—Å–µ–≥–æ –∑–∞–¥–∞—á: ${roadmap.tasks.length}`);
console.log(`   –û–±—â–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã: ${roadmap.totalEffort} —á–∞—Å–æ–≤`);
console.log(`   –§–∞–∑–∞ 1 (0-2 –Ω–µ–¥.): ${roadmap.phases.immediate.length} –∑–∞–¥–∞—á`);
console.log(`   –§–∞–∑–∞ 2 (2-4 –Ω–µ–¥.): ${roadmap.phases.shortTerm.length} –∑–∞–¥–∞—á`);
console.log(`   –§–∞–∑–∞ 3 (4-8 –Ω–µ–¥.): ${roadmap.phases.longTerm.length} –∑–∞–¥–∞—á`);

console.log('\nüí∞ ROI –ê–ù–ê–õ–ò–ó:');
const cost = roadmap.totalEffort * 100;
const benefit = roadmap.totalEffort * 200;
const roi = Math.round((benefit / cost - 1) * 100);
console.log(`   –°—Ç–æ–∏–º–æ—Å—Ç—å: $${cost.toLocaleString()}`);
console.log(`   –í—ã–≥–æ–¥–∞ –≤ –≥–æ–¥: $${benefit.toLocaleString()}`);
console.log(`   ROI: ${roi}%`);

console.log('\nüìã –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç—ã...');
const fullRoadmap = generateRefactoringRoadmap(
  mockBasicResults,
  mockAdvancedResults,
  mockRecommendations
);

console.log('\n‚úÖ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!');
console.log('üìÑ –î–æ—Ä–æ–∂–Ω–∞—è –∫–∞—Ä—Ç–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≠–ê–ü');
console.log('üîß –°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:');
console.log('   ‚úì –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤');
console.log('   ‚úì –†–∞—Å—á–µ—Ç —Ç—Ä—É–¥–æ–∑–∞—Ç—Ä–∞—Ç –∏ ROI');
console.log('   ‚úì –§–∞–∑–æ–≤–æ–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ');
console.log('   ‚úì –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞');
console.log('   ‚úì Markdown —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ');

console.log('\n' + '='.repeat(80));
console.log('üéØ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –æ—Å–Ω–æ–≤–Ω—ã–º –≠–ê–ü!');
