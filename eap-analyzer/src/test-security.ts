/**
 * SecurityChecker Test - Phase 5.1.1
 * –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ SecurityChecker
 */

import { SecurityChecker } from './checkers/security/SecurityChecker.js';

async function testSecurityChecker() {
  const projectPath = 'C:/alphacore/project-template';

  const context = {
    projectPath,
    projectInfo: {
      name: 'project-template',
      version: '2.0.0',
      hasTypeScript: true,
      hasTests: true,
      hasDocker: true,
      hasCICD: true,
      dependencies: { production: 0, development: 0, total: 0 },
    },
    options: {
      projectPath,
      verbose: true,
    },
  };

  try {
    console.log('üîí === SecurityChecker Phase 5.1.1 Test ===');
    console.log('üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ SecurityChecker...');

    const startTime = Date.now();
    const result = await SecurityChecker.checkComponent(context);
    const duration = Date.now() - startTime;

    console.log(`‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${duration}ms`);
    console.log(`üéØ –û–±—â–∏–π –±–∞–ª–ª: ${result.score}/${result.maxScore} (${result.percentage}%)`);
    console.log(`‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: ${result.passed.length}`);
    console.log(`‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫: ${result.failed.length}`);

    console.log('\nüìä === –î–ï–¢–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ ===');

    if (result.passed.length > 0) {
      console.log('\n‚úÖ –£–°–ü–ï–®–ù–´–ï –ü–†–û–í–ï–†–ö–ò:');
      result.passed.forEach(check => {
        console.log(`  ‚úì ${check.check.name}: ${check.score}/100`);
        console.log(`    üìù ${check.details}`);
      });
    }

    if (result.failed.length > 0) {
      console.log('\n‚ùå –ù–ï–£–î–ê–ß–ù–´–ï –ü–†–û–í–ï–†–ö–ò:');
      result.failed.forEach(check => {
        console.log(`  ‚ùå ${check.check.name}: ${check.score}/100`);
        console.log(`    üìù ${check.details}`);
        if (check.recommendations && check.recommendations.length > 0) {
          console.log(`    üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:`);
          check.recommendations.forEach(rec => console.log(`      - ${rec}`));
        }
      });
    }

    if (result.recommendations.length > 0) {
      console.log('\nüéØ –û–ë–©–ò–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
      result.recommendations.forEach(rec => console.log(`  üí° ${rec}`));
    }

    const success = result.percentage >= 50;
    console.log(`\n${success ? 'üéâ' : '‚ö†Ô∏è'} === –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ê ===`);
    console.log(`Phase 5.1.1: ${success ? '–£–°–ü–ï–®–ù–ê' : '–¢–†–ï–ë–£–ï–¢ –î–û–†–ê–ë–û–¢–ö–ò'}`);
    console.log(`SecurityChecker: ${success ? '–†–ê–ë–û–¢–ê–ï–¢' : '–ù–ï–ò–°–ü–†–ê–í–ï–ù'} (${result.percentage}%)`);

    if (success) {
      console.log('‚úÖ SecurityChecker –≥–æ—Ç–æ–≤ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å AnalysisOrchestrator');
      console.log('üöÄ –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ Phase 5.1.2');
    } else {
      console.log('‚ö†Ô∏è SecurityChecker —Ç—Ä–µ–±—É–µ—Ç –æ—Ç–ª–∞–¥–∫–∏');
    }

    return success;
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ SecurityChecker:', error);
    console.log('üí• Phase 5.1.1 FAILED - SecurityChecker –Ω–µ—Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–µ–Ω');
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testSecurityChecker()
  .then(success => {
    process.exit(success ? 0 : 1);
  })
  .catch(error => {
    console.error('üí• –§–∞—Ç–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error);
    process.exit(1);
  });
