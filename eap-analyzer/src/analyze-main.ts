#!/usr/bin/env node

/**
 * –ü—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞ SHINOMONTAGKA
 */

import * as path from 'path';
import { DockerChecker } from './checkers/docker.js';
import { EMTChecker } from './checkers/emt.js';

async function analyzeMainProject() {
  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –ø–∞–ø–∫—É (–æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–µ–∫—Ç)
  const projectPath = path.resolve(process.cwd(), '..');

  const context = {
    projectPath,
    projectInfo: {
      name: 'SHINOMONTAGKA',
      version: '2.0.0',
      hasTypeScript: true,
      hasTests: true,
      hasDocker: true,
      hasCICD: true,
      dependencies: { production: 0, development: 0, total: 0 },
    },
    options: {
      projectPath,
      verbose: true,
    },
  };

  try {
    // eslint-disable-next-line no-console
    console.log('üîç –ê–Ω–∞–ª–∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ SHINOMONTAGKA...');
    // eslint-disable-next-line no-console
    console.log(`üìÇ –ü—É—Ç—å: ${projectPath}`);
    // eslint-disable-next-line no-console
    console.log('');

    // –¢–µ—Å—Ç EMT
    // eslint-disable-next-line no-console
    console.log('üìã –ê–Ω–∞–ª–∏–∑ –≠–ú–¢ (–≠—Ç–∞–ª–æ–Ω–Ω—ã–π –ú–æ–¥—É–ª—å –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)...');
    const emtResult = await EMTChecker.checkComponent(context);
    // eslint-disable-next-line no-console
    console.log(
      `‚úÖ –≠–ú–¢: ${emtResult.percentage}% (${emtResult.passed.length}/${emtResult.passed.length + emtResult.failed.length} –ø—Ä–æ–≤–µ—Ä–æ–∫)`
    );

    if (emtResult.failed.length > 0) {
      // eslint-disable-next-line no-console
      console.log('   ‚ùå –ù–µ –ø—Ä–æ–π–¥–µ–Ω—ã:');
      emtResult.failed.slice(0, 3).forEach(fail => {
        // eslint-disable-next-line no-console
        console.log(`      ‚Ä¢ ${fail.check.name}`);
      });
    }
    // eslint-disable-next-line no-console
    console.log('');

    // –¢–µ—Å—Ç Docker
    // eslint-disable-next-line no-console
    console.log('üìã –ê–Ω–∞–ª–∏–∑ Docker Infrastructure...');
    const dockerResult = await DockerChecker.checkComponent(context);
    // eslint-disable-next-line no-console
    console.log(
      `üê≥ Docker: ${dockerResult.percentage}% (${dockerResult.passed.length}/${dockerResult.passed.length + dockerResult.failed.length} –ø—Ä–æ–≤–µ—Ä–æ–∫)`
    );

    if (dockerResult.failed.length > 0) {
      // eslint-disable-next-line no-console
      console.log('   ‚ùå –ù–µ –ø—Ä–æ–π–¥–µ–Ω—ã:');
      dockerResult.failed.slice(0, 3).forEach(fail => {
        // eslint-disable-next-line no-console
        console.log(`      ‚Ä¢ ${fail.check.name}`);
      });
    }
    // eslint-disable-next-line no-console
    console.log('');

    const totalScore = emtResult.score + dockerResult.score;
    const maxScore = emtResult.maxScore + dockerResult.maxScore;
    const overallPercentage = Math.round((totalScore / maxScore) * 100);

    // eslint-disable-next-line no-console
    console.log('üéØ –û–ë–©–ò–ô –†–ï–ó–£–õ–¨–¢–ê–¢:');
    // eslint-disable-next-line no-console
    console.log(`   –û—Ü–µ–Ω–∫–∞: ${overallPercentage}% (${totalScore}/${maxScore} –±–∞–ª–ª–æ–≤)`);

    let grade = 'F';
    if (overallPercentage >= 90) grade = 'A+';
    else if (overallPercentage >= 85) grade = 'A';
    else if (overallPercentage >= 80) grade = 'B+';
    else if (overallPercentage >= 75) grade = 'B';
    else if (overallPercentage >= 70) grade = 'C+';
    else if (overallPercentage >= 65) grade = 'C';
    else if (overallPercentage >= 60) grade = 'D';

    // eslint-disable-next-line no-console
    console.log(`   –û—Ü–µ–Ω–∫–∞: ${grade}`);

    if (overallPercentage >= 85) {
      // eslint-disable-next-line no-console
      console.log('üéâ –û—Ç–ª–∏—á–Ω–æ! –ü—Ä–æ–µ–∫—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –≤—ã—Å–æ–∫–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º!');
    } else if (overallPercentage >= 70) {
      // eslint-disable-next-line no-console
      console.log('üëç –•–æ—Ä–æ—à–æ! –ï—Å—Ç—å –æ–±–ª–∞—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è.');
    } else {
      // eslint-disable-next-line no-console
      console.log('‚ö†Ô∏è –ü—Ä–æ–µ–∫—Ç —Ç—Ä–µ–±—É–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π.');
    }

    return { emtResult, dockerResult, overallPercentage, grade };
  } catch (error) {
    // eslint-disable-next-line no-console
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫
analyzeMainProject().catch(console.error);
