#!/usr/bin/env node

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∞–ª–∏–∑–∞ v3.0 —Å AI –∏–Ω—Å–∞–π—Ç–∞–º–∏
 */

import { AnalysisOrchestrator } from '../core/orchestrator.js';
import { UltimateReportGenerator } from '../core/ultimate-report-generator.js';
import * as fs from 'fs';
import * as path from 'path';

class EAPAnalyzerDemo {
  private orchestrator: AnalysisOrchestrator;
  private ultimateGenerator: UltimateReportGenerator;

  constructor() {
    this.orchestrator = new AnalysisOrchestrator(6); // 6 –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–æ–≤
    this.ultimateGenerator = new UltimateReportGenerator();
  }

  async runFullDemo(): Promise<void> {
    console.log('üöÄ === –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø EAP ANALYZER v3.0 ===');
    console.log('üß† AI –∞–Ω–∞–ª–∏–∑ + üí∞ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–æ–ª–≥ + üìä ROI —Ä–∞—Å—á–µ—Ç—ã');
    console.log('');

    const projectPath = process.cwd();

    try {
      // –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞
      console.log('1Ô∏è‚É£ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–µ–∫—Ç–∞...');
      const startTime = Date.now();

      const { analysis, report } = await this.orchestrator.analyzeProjectWithReport(projectPath);

      const duration = Date.now() - startTime;
      console.log(`‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ ${duration}–º—Å`);
      console.log('');

      // –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      await this.demonstrateResults(analysis, report);

      // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤
      await this.saveReports(analysis, report);

      console.log('üéâ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏:', error);
      process.exit(1);
    }
  }

  private async demonstrateResults(analysis: any, report: any): Promise<void> {
    console.log('üìã === –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê ===');

    // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    this.showGeneralStats(analysis);

    // AI –∞–Ω–∞–ª–∏–∑
    this.showAIInsights(report);

    // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–æ–ª–≥
    this.showTechnicalDebt(report);

    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    this.showRecommendations(report);
  }

  private showGeneralStats(analysis: any): void {
    console.log('üìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
    console.log(`   üéØ –û–±—â–∞—è –æ—Ü–µ–Ω–∫–∞: ${analysis.summary.overallScore}/100`);
    console.log(`   üìÅ –§–∞–π–ª–æ–≤ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: ${analysis.metadata.modulesUsed.length}`);
    console.log(`   ‚ö†Ô∏è  –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º: ${analysis.summary.criticalIssues.length}`);
    console.log(`   üîß –ú–æ–¥—É–ª–µ–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ: ${analysis.metadata.modulesUsed.join(', ')}`);
    console.log('');
  }

  private showAIInsights(report: any): void {
    console.log('üß† AI –ê–ù–ê–õ–ò–ó –ò –ò–ù–°–ê–ô–¢–´:');

    if (report.aiInsights?.patterns?.length > 0) {
      console.log('   üé® –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã:');
      report.aiInsights.patterns.slice(0, 3).forEach((pattern: any) => {
        console.log(`      ‚Ä¢ ${pattern.name} (${pattern.confidence}% —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏)`);
      });
    }

    if (report.aiInsights?.quality) {
      console.log(`   üìà –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞: ${report.aiInsights.quality.score}/100`);
      console.log(`   üìä –¢—Ä–µ–Ω–¥: ${report.aiInsights.quality.trend}`);
    }

    if (report.aiInsights?.duplication) {
      console.log(`   üîÑ –î—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞: ${report.aiInsights.duplication.percentage}%`);
    }

    if (report.aiInsights?.complexity) {
      console.log(`   üß© –°—Ä–µ–¥–Ω—è—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å: ${report.aiInsights.complexity.average}`);
    }

    console.log('');
  }

  private showTechnicalDebt(report: any): void {
    console.log('üí∞ –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ô –î–û–õ–ì –ò ROI:');

    if (report.technicalDebtAnalysis) {
      const debt = report.technicalDebtAnalysis;
      console.log(`   üí∏ –û–±—â–∏–π –¥–æ–ª–≥: ${debt.totalDebt} —á–∞—Å–æ–≤`);
      console.log(`   üìÖ –ï–∂–µ–º–µ—Å—è—á–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã: ${debt.monthlyInterest} —á–∞—Å–æ–≤`);

      if (debt.roiAnalysis) {
        console.log(`   üíπ ROI —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞: ${debt.roiAnalysis.roi}%`);
        console.log(`   ‚è±Ô∏è  –û–∫—É–ø–∞–µ–º–æ—Å—Ç—å: ${debt.roiAnalysis.paybackPeriod} –º–µ—Å—è—Ü–µ–≤`);
        console.log(`   üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: ${debt.roiAnalysis.recommendation}`);
      }

      if (debt.categories?.length > 0) {
        console.log('   üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–æ–ª–≥–∞:');
        debt.categories.slice(0, 3).forEach((cat: any) => {
          console.log(`      ‚Ä¢ ${cat.name}: ${cat.debt} —á–∞—Å–æ–≤ (${cat.impact})`);
        });
      }

      if (debt.hotspots?.length > 0) {
        console.log('   üî• –ì–æ—Ä—è—á–∏–µ —Ç–æ—á–∫–∏:');
        debt.hotspots.slice(0, 3).forEach((hotspot: any) => {
          console.log(`      ‚Ä¢ ${hotspot.file}: ${hotspot.debt} —á–∞—Å–æ–≤`);
        });
      }
    }

    console.log('');
  }

  private showRecommendations(report: any): void {
    console.log('üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –£–õ–£–ß–®–ï–ù–ò–Æ:');

    if (report.ultimateAnalysis?.aiInsights?.aiRecommendations?.length > 0) {
      console.log('   üéØ AI —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
      report.ultimateAnalysis.aiInsights.aiRecommendations.slice(0, 3).forEach((rec: string) => {
        console.log(`      ‚Ä¢ ${rec}`);
      });
    }

    if (report.refactoringRecommendations?.opportunities?.length > 0) {
      console.log('   üîß –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞:');
      report.refactoringRecommendations.opportunities.slice(0, 3).forEach((opp: any) => {
        console.log(`      ‚Ä¢ ${opp.type} –≤ ${opp.file} (${opp.priority} –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç)`);
      });
    }

    if (report.technicalDebtAnalysis?.payoffPlan?.length > 0) {
      console.log('   üìã –ü–ª–∞–Ω –ø–æ–≥–∞—à–µ–Ω–∏—è –¥–æ–ª–≥–∞:');
      report.technicalDebtAnalysis.payoffPlan.slice(0, 3).forEach((plan: any) => {
        console.log(`      ‚Ä¢ ${plan.category}: ${plan.refactoringTime} —á–∞—Å–æ–≤ (${plan.priority})`);
      });
    }

    console.log('');
  }

  private async saveReports(analysis: any, report: any): Promise<void> {
    console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç—á–µ—Ç–æ–≤...');

    const reportsDir = path.join(process.cwd(), 'reports');

    try {
      await fs.promises.mkdir(reportsDir, { recursive: true });

      // –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑
      const analysisPath = path.join(reportsDir, 'full-analysis.json');
      await fs.promises.writeFile(analysisPath, JSON.stringify(analysis, null, 2));
      console.log(`   üìÑ –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑: ${analysisPath}`);

      // Comprehensive –æ—Ç—á–µ—Ç
      const reportPath = path.join(reportsDir, 'comprehensive-report.json');
      await fs.promises.writeFile(reportPath, JSON.stringify(report, null, 2));
      console.log(`   üìä Comprehensive –æ—Ç—á–µ—Ç: ${reportPath}`);

      // Ultimate –æ—Ç—á–µ—Ç
      if (report.ultimateAnalysis) {
        const ultimatePath = path.join(reportsDir, 'ultimate-report.json');
        await fs.promises.writeFile(ultimatePath, JSON.stringify(report.ultimateAnalysis, null, 2));
        console.log(`   üöÄ Ultimate –æ—Ç—á–µ—Ç: ${ultimatePath}`);
      }

      // AI –∏–Ω—Å–∞–π—Ç—ã
      if (report.aiInsights) {
        const aiPath = path.join(reportsDir, 'ai-insights.json');
        await fs.promises.writeFile(aiPath, JSON.stringify(report.aiInsights, null, 2));
        console.log(`   üß† AI –∏–Ω—Å–∞–π—Ç—ã: ${aiPath}`);
      }

      // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–æ–ª–≥
      if (report.technicalDebtAnalysis) {
        const debtPath = path.join(reportsDir, 'technical-debt.json');
        await fs.promises.writeFile(
          debtPath,
          JSON.stringify(report.technicalDebtAnalysis, null, 2)
        );
        console.log(`   üí∞ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–æ–ª–≥: ${debtPath}`);
      }

      // –ö—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ MD
      await this.generateMarkdownSummary(report, reportsDir);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤:', error);
    }

    console.log('');
  }

  private async generateMarkdownSummary(report: any, dir: string): Promise<void> {
    const mdPath = path.join(dir, 'ANALYSIS-SUMMARY.md');

    let md = '# üöÄ EAP Analyzer v3.0 - –û—Ç—á–µ—Ç\n\n';
    md += `**–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞:** ${new Date().toLocaleString()}\n\n`;

    // AI –∞–Ω–∞–ª–∏–∑
    if (report.aiInsights) {
      md += '## üß† AI –ê–Ω–∞–ª–∏–∑\n\n';

      if (report.aiInsights.quality) {
        md += `**–ö–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞:** ${report.aiInsights.quality.score}/100\n`;
        md += `**–¢—Ä–µ–Ω–¥:** ${report.aiInsights.quality.trend}\n\n`;
      }

      if (report.aiInsights.patterns?.length > 0) {
        md += '**–û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã:**\n';
        report.aiInsights.patterns.forEach((pattern: any) => {
          md += `- ${pattern.name} (${pattern.confidence}% —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏)\n`;
        });
        md += '\n';
      }
    }

    // –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–æ–ª–≥
    if (report.technicalDebtAnalysis) {
      md += '## üí∞ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–æ–ª–≥\n\n';
      const debt = report.technicalDebtAnalysis;

      md += `**–û–±—â–∏–π –¥–æ–ª–≥:** ${debt.totalDebt} —á–∞—Å–æ–≤\n`;
      md += `**–ï–∂–µ–º–µ—Å—è—á–Ω—ã–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã:** ${debt.monthlyInterest} —á–∞—Å–æ–≤\n`;

      if (debt.roiAnalysis) {
        md += `**ROI —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞:** ${debt.roiAnalysis.roi}%\n`;
        md += `**–û–∫—É–ø–∞–µ–º–æ—Å—Ç—å:** ${debt.roiAnalysis.paybackPeriod} –º–µ—Å—è—Ü–µ–≤\n\n`;
      }
    }

    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    md += '## üí° –ì–ª–∞–≤–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏\n\n';

    if (report.ultimateAnalysis?.aiInsights?.aiRecommendations?.length > 0) {
      report.ultimateAnalysis.aiInsights.aiRecommendations.slice(0, 5).forEach((rec: string) => {
        md += `- ${rec}\n`;
      });
    }

    md += '\n---\n*–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ EAP Analyzer v3.0*';

    await fs.promises.writeFile(mdPath, md);
    console.log(`   üìù –ö—Ä–∞—Ç–∫–∏–π –æ—Ç—á–µ—Ç (MD): ${mdPath}`);
  }
}

// –ó–∞–ø—É—Å–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
try {
  if (import.meta.url === `file://${process.argv[1]}`) {
    const demo = new EAPAnalyzerDemo();
    demo.runFullDemo().catch(console.error);
  }
} catch (e) {
  // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤ CJS —Å—Ä–µ–¥–µ
}

export { EAPAnalyzerDemo };
