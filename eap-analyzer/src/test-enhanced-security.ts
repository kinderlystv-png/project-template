/**
 * Test Enhanced SecurityChecker with RecommendationEngine
 * Phase 5.2.1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
 */

import { SecurityChecker } from './checkers/security/SecurityChecker.js';
import { CheckContext } from './types/index.js';

async function testEnhancedSecurityChecker() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º Enhanced SecurityChecker —Å RecommendationEngine...');

  const context: CheckContext = {
    projectPath: process.cwd(),
    projectInfo: {
      name: 'test-project',
      version: '1.0.0',
      hasTypeScript: true,
      hasTests: true,
      hasDocker: false,
      hasCICD: false,
      dependencies: {
        production: 0,
        development: 0,
        total: 0,
      },
    },
    options: {
      projectPath: process.cwd(),
      verbose: true,
    },
  };

  try {
    // 1. –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    console.log('\n1Ô∏è‚É£ –ó–∞–ø—É—Å–∫ –±–∞–∑–æ–≤–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...');
    const result = await SecurityChecker.checkComponent(context);
    console.log('‚úÖ –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    console.log(`üìä –û–±—â–∏–π –±–∞–ª–ª: ${result.score}/${result.maxScore} (${result.percentage}%)`);
    console.log(`‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º: ${result.failed.length}, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${result.warnings.length}`);

    // 2. –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    console.log('\n2Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...');
    const detailedRecommendations = await SecurityChecker.generateDetailedRecommendations(context);

    console.log('üìã –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:');
    console.log(`   ‚Ä¢ –í—Å–µ–≥–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: ${detailedRecommendations.summary.totalRecommendations}`);
    console.log(`   ‚Ä¢ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö: ${detailedRecommendations.summary.criticalRecommendations}`);
    console.log(`   ‚Ä¢ –í—Ä–µ–º—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${detailedRecommendations.summary.estimatedTimeToFix}`);

    console.log(`   ‚Ä¢ Dependencies: ${detailedRecommendations.dependencies.length} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π`);
    console.log(`   ‚Ä¢ Code Security: ${detailedRecommendations.code.length} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π`);
    console.log(`   ‚Ä¢ Config Security: ${detailedRecommendations.config.length} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π`);

    // 3. –¢–µ—Å—Ç –±—ã—Å—Ç—Ä—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º
    console.log('\n3Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±—ã—Å—Ç—Ä—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º...');
    const quickRecommendations = await SecurityChecker.generateQuickRecommendations(context);

    console.log(`üö® –ù–∞–π–¥–µ–Ω–æ ${quickRecommendations.length} –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π`);

    // 4. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    if (quickRecommendations.length > 0) {
      console.log('\n4Ô∏è‚É£ –ü—Ä–∏–º–µ—Ä—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:');
      for (let i = 0; i < Math.min(3, quickRecommendations.length); i++) {
        const rec = quickRecommendations[i];
        console.log(`\n   üìå ${rec.title}`);
        console.log(`   üéØ –°–ª–æ–∂–Ω–æ—Å—Ç—å: ${rec.difficulty}`);
        console.log(`   ‚è±Ô∏è  –í—Ä–µ–º—è: ${rec.estimatedTime}`);
        console.log(`   üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${rec.description}`);

        if (rec.fixTemplate.steps && rec.fixTemplate.steps.length > 0) {
          console.log(`   üîß –ü–µ—Ä–≤—ã–π —à–∞–≥: ${rec.fixTemplate.steps[0]}`);
        }
      }
    }

    // 5. –ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    console.log('\n5Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ SecurityChecker...');
    const effectivenessScore = calculateEffectivenessScore(result, detailedRecommendations);
    console.log(`üìà –û—Ü–µ–Ω–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: ${effectivenessScore}%`);

    if (effectivenessScore >= 70) {
      console.log('üéâ –£–°–ü–ï–•! SecurityChecker –¥–æ—Å—Ç–∏–≥ —Ü–µ–ª–µ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ 70%+');
    } else {
      console.log('‚ö° –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–∞–ª—å–Ω–µ–π—à–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è 70%+ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏');
    }

    return {
      success: true,
      baseScore: result.score,
      effectivenessScore,
      totalRecommendations: detailedRecommendations.summary.totalRecommendations,
      criticalRecommendations: detailedRecommendations.summary.criticalRecommendations,
    };
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
    };
  }
}

/**
 * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å SecurityChecker
 */
function calculateEffectivenessScore(baseResult: any, recommendations: any): number {
  let score = 0;

  // –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª (30%)
  if (baseResult.success) {
    score += 30;
  }

  // –ö–∞—á–µ—Å—Ç–≤–æ –∞–Ω–∞–ª–∏–∑–∞ (25%)
  const issueCount = baseResult.failed.length + baseResult.warnings.length;
  if (issueCount > 0) {
    score += 25; // –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã = —Ö–æ—Ä–æ—à–∏–π –∞–Ω–∞–ª–∏–∑
  } else {
    score += 15; // –ü—Ä–æ–±–ª–µ–º –Ω–µ—Ç = —á–∞—Å—Ç–∏—á–Ω—ã–π –±–∞–ª–ª
  }

  // –ü—Ä–∞–∫—Ç–∏—á–Ω–æ—Å—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π (30%)
  const recCount = recommendations.summary.totalRecommendations;
  if (recCount > 0) {
    score += 30;
  }

  // –í—Ä–µ–º—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—Ü–µ–Ω–µ–Ω–æ (15%)
  if (recommendations.summary.estimatedTimeToFix !== '0h') {
    score += 15;
  }

  return Math.min(score, 100);
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (process.argv[1] === __filename || process.argv[1].endsWith('test-enhanced-security.ts')) {
  testEnhancedSecurityChecker()
    .then(result => {
      console.log('\nüèÅ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω:', result);
      process.exit(result.success ? 0 : 1);
    })
    .catch(error => {
      console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

export { testEnhancedSecurityChecker };
