/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ FileStructureAnalyzer v3.0
 *
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é —Ä–∞–±–æ—Ç—É –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –±–µ–∑ —Ö–∞—Ä–¥–∫–æ–¥–∞
 */

import { FileStructureAnalyzer } from './FileStructureAnalyzer.js';

async function testFileStructureAnalyzer() {
  console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ FileStructureAnalyzer v3.0...\n');

  try {
    // –¢–µ—Å—Ç 1: –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
    console.log('üìä –¢–µ—Å—Ç 1: –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞');

    const context = {
      projectPath: 'C:\\alphacore\\project-template',
      config: { detailed: true },
    };

    const startTime = Date.now();
    const result = await FileStructureAnalyzer.checkComponent(context);
    const duration = Date.now() - startTime;

    console.log(`‚è±Ô∏è  –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ ${duration}ms (–æ–∂–∏–¥–∞–µ—Ç—Å—è <5000ms)`);
    console.log(`üìà –û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${result.percentage}% (${result.score}/${result.maxScore})`);
    console.log(`üìÅ –§–∞–π–ª–æ–≤ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: ${result.metadata?.filesAnalyzed || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
    console.log(`üì¶ –†–∞–∑–º–µ—Ä –ø—Ä–æ–µ–∫—Ç–∞: ${Math.round((result.metadata?.totalSize || 0) / 1024)} KB`);
    console.log(`üîß –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π: ${result.metadata?.uniqueExtensions || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
    console.log(`üìä –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –≥–ª—É–±–∏–Ω–∞: ${result.metadata?.deepestNesting || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);

    // –ü—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞
    console.log('\nüîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–æ–∫:');
    result.passed.forEach(check => {
      console.log(
        `‚úÖ ${check.check.name}: ${check.score}/${check.maxScore} (${Math.round((check.score / check.maxScore) * 100)}%)`
      );
    });

    result.failed.forEach(check => {
      console.log(
        `‚ùå ${check.check.name}: ${check.score}/${check.maxScore} (${Math.round((check.score / check.maxScore) * 100)}%)`
      );
    });

    // –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if (result.recommendations.length > 0) {
      console.log('\nüí° –¢–æ–ø —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:');
      result.recommendations.slice(0, 5).forEach((rec, i) => {
        console.log(`${i + 1}. ${rec}`);
      });
    }

    // –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
    if (result.warnings.length > 0) {
      console.log('\n‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:');
      result.warnings.forEach(warning => {
        console.log(`   ${warning}`);
      });
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —ç—Ç–æ –ù–ï –¥–µ–º–æ
    console.log('\nüî¨ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑–∞:');

    const isRealAnalysis =
      (result.metadata?.filesAnalyzed || 0) > 50 &&
      result.recommendations.length > 0 &&
      result.duration > 100 &&
      result.component.name.includes('v3.0');

    if (isRealAnalysis) {
      console.log('‚úÖ –ê–Ω–∞–ª–∏–∑ –†–ï–ê–õ–¨–ù–´–ô - –Ω–µ –¥–µ–º–æ –≤–µ—Ä—Å–∏—è');
      console.log('‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞');
      console.log('‚úÖ –ì–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏');
    } else {
      console.log('‚ùå –û–®–ò–ë–ö–ê: –ê–Ω–∞–ª–∏–∑ –ø–æ—Ö–æ–∂ –Ω–∞ –¥–µ–º–æ –≤–µ—Ä—Å–∏—é!');
      console.log(`   - –§–∞–π–ª–æ–≤: ${result.metadata?.filesAnalyzed || 0} (–æ–∂–∏–¥–∞–µ—Ç—Å—è >50)`);
      console.log(`   - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: ${result.recommendations.length} (–æ–∂–∏–¥–∞–µ—Ç—Å—è >0)`);
      console.log(`   - –í—Ä–µ–º—è: ${result.duration}ms (–æ–∂–∏–¥–∞–µ—Ç—Å—è >100ms)`);
    }

    // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å optimized-analyzer.cjs
    console.log('\nüìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –¥–µ–º–æ –≤–µ—Ä—Å–∏–µ–π:');
    console.log('–î–µ–º–æ (optimized-analyzer.cjs):');
    console.log('   - –õ–æ–≥–∏–∫–∞: 58% (—Ö–∞—Ä–¥–∫–æ–¥)');
    console.log('   - –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: 45% (–ø—Ä–∏–º–∏—Ç–∏–≤–Ω–∞—è)');
    console.log('   - –û–±—â–∏–π —Å—á–µ—Ç: 51.5% (—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π)');
    console.log('');
    console.log('–ù–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä v3.0:');
    console.log(`   - –†–µ–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑: ${result.percentage}% (–¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π)`);
    console.log(`   - –ü—Ä–æ–≤–µ—Ä–æ–∫: ${result.passed.length + result.failed.length}`);
    console.log(`   - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: ${result.recommendations.length}`);

    const improvement = result.percentage - 51.5;
    if (improvement > 0) {
      console.log(`‚úÖ –£–ª—É—á—à–µ–Ω–∏–µ –Ω–∞ ${improvement.toFixed(1)}% –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å –¥–µ–º–æ`);
    } else {
      console.log(`‚ö†Ô∏è  –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∏–∂–µ –¥–µ–º–æ –Ω–∞ ${Math.abs(improvement).toFixed(1)}%`);
    }

    console.log('\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç: FileStructureAnalyzer v3.0 —É—Å–ø–µ—à–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    console.log('üöÄ –ì–æ—Ç–æ–≤ –∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å AnalysisOrchestrator');

    return result;
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    console.error('–°—Ç–µ–∫:', error instanceof Error ? error.stack : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
    throw error;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
if (import.meta.url === `file://${process.argv[1].replace(/\\/g, '/')}`) {
  testFileStructureAnalyzer()
    .then(result => {
      console.log('\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!');
      process.exit(0);
    })
    .catch(error => {
      console.error('\n‚ùå –¢–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–∏–ª–∏—Å—å:', error.message);
      process.exit(1);
    });
}

export { testFileStructureAnalyzer };
