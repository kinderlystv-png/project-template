/**
 * SecurityChecker v2.0 - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 *
 * –ö–ª—é—á–µ–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è:
 * - –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞ –≤ –º–µ—Ç–æ–¥–∞—Ö —Ä–∞—Å—á–µ—Ç–∞ –æ—á–∫–æ–≤
 * - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π
 * - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ-—É–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 * - –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å –±–∞–∑–æ–≤—ã–º–∏ –∫–ª–∞—Å—Å–∞–º–∏
 */

import type { CheckContext, ComponentResult, CheckResult } from '../../types/index.js';
import { ProcessIsolatedAnalyzer } from '../../orchestrator/ProcessIsolatedAnalyzer.js';
import { DependenciesSecurityChecker } from './DependenciesSecurityChecker.js';
import { CodeSecurityChecker } from './CodeSecurityChecker.js';
import { ConfigSecurityChecker } from './ConfigSecurityChecker.js';
import { WebSecurityChecker } from './WebSecurityChecker.js';

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø—Ä–∞–≤–∏–ª —Ä–∞—Å—á–µ—Ç–∞ –æ—á–∫–æ–≤
 */
interface SecurityScoreRule {
  critical: number;
  high: number;
  medium: number;
  low?: number;
}

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 */
interface SecurityRulesConfig {
  dependencies: SecurityScoreRule;
  code: SecurityScoreRule;
  config: SecurityScoreRule;
  webSecurity: SecurityScoreRule;
}

/**
 * –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 */
interface SecurityAnalysisResult {
  dependencies?: any;
  code?: any;
  config?: any;
  webSecurity?: any;
  overall: {
    score: number;
    issues: number;
    recommendation: string;
  };
}

/**
 * –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∞–≤–∏–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 */
abstract class BaseSecurityProcessor {
  /**
   * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –æ—á–∫–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∞–≤–∏–ª
   */
  protected static calculateScore(
    issues: any[] = [],
    rules: SecurityScoreRule,
    severityExtractor: (issue: any) => string = issue => issue.severity
  ): number {
    let score = 100;

    const severityCounts = issues.reduce(
      (acc, issue) => {
        const severity = severityExtractor(issue);
        acc[severity] = (acc[severity] || 0) + 1;
        return acc;
      },
      {} as Record<string, number>
    );

    score -= (severityCounts.critical || 0) * rules.critical;
    score -= (severityCounts.high || 0) * rules.high;
    score -= (severityCounts.medium || 0) * rules.medium;
    if (rules.low) {
      score -= (severityCounts.low || 0) * rules.low;
    }

    return Math.max(0, score);
  }

  /**
   * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
   */
  protected static generateRecommendationsFromTemplate(
    data: any,
    templates: Record<string, (count: number, data: any) => string[]>
  ): string[] {
    const recommendations: string[] = [];

    for (const [key, template] of Object.entries(templates)) {
      const count = this.extractCount(data, key);
      if (count > 0) {
        recommendations.push(...template(count, data));
      }
    }

    return recommendations;
  }

  /**
   * –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–ª–µ–º –∏–∑ –¥–∞–Ω–Ω—ã—Ö
   */
  private static extractCount(data: any, key: string): number {
    const paths = {
      critical: ['auditSummary.critical', 'summary.critical', 'issues.critical'],
      secrets: ['summary.secrets'],
      corsIssues: ['summary.corsIssues'],
      xssVulns: ['xss.vulnerabilities.length', 'xss.length'],
      csrfIssues: ['csrf.issues.length', 'csrf.length'],
    };

    const keyPaths = paths[key as keyof typeof paths] || [key];

    for (const path of keyPaths) {
      const value = this.getNestedValue(data, path);
      if (typeof value === 'number') return value;
    }

    return 0;
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –≤–ª–æ–∂–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –ø—É—Ç–∏
   */
  private static getNestedValue(obj: any, path: string): any {
    return path.split('.').reduce((current, key) => {
      if (key === 'length' && Array.isArray(current)) {
        return current.length;
      }
      return current?.[key];
    }, obj);
  }
}

/**
 * –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SecurityChecker
 */
export class SecurityChecker extends BaseSecurityProcessor {
  private static analyzer = new ProcessIsolatedAnalyzer();
  private static dependenciesChecker = new DependenciesSecurityChecker();
  private static codeChecker = new CodeSecurityChecker();
  private static configChecker = new ConfigSecurityChecker();
  private static webSecurityChecker = new WebSecurityChecker();

  /**
   * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   */
  private static readonly SECURITY_RULES: SecurityRulesConfig = {
    dependencies: { critical: 25, high: 15, medium: 5, low: 1 },
    code: { critical: 20, high: 10, medium: 5 },
    config: { critical: 15, high: 8, medium: 0 },
    webSecurity: { critical: 20, high: 12, medium: 6 },
  };

  /**
   * –®–∞–±–ª–æ–Ω—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
   */
  private static readonly RECOMMENDATION_TEMPLATES = {
    dependencies: {
      critical: (count: number) =>
        count > 0
          ? [
              '–ó–∞–ø—É—Å—Ç–∏—Ç–µ npm audit fix –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
              '–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±–Ω–æ–≤–∏—Ç–µ –ø–∞–∫–µ—Ç—ã —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ —É—è–∑–≤–∏–º–æ—Å—Ç—è–º–∏',
            ]
          : [],
    },
    code: {
      secrets: (count: number) =>
        count > 0 ? ['–£–¥–∞–ª–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç—ã –∏–∑ –∫–æ–¥–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è'] : [],
      unsafeFunctions: (count: number) =>
        count > 0 ? ['–ó–∞–º–µ–Ω–∏—Ç–µ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∞–Ω–∞–ª–æ–≥–∏'] : [],
    },
    config: {
      corsIssues: (count: number) => (count > 0 ? ['–ù–∞—Å—Ç—Ä–æ–π—Ç–µ CORS –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è production'] : []),
      envExposure: (count: number) =>
        count > 0 ? ['–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ exposure —Å–µ–∫—Ä–µ—Ç–æ–≤'] : [],
    },
    webSecurity: {
      xssVulns: (count: number) =>
        count > 0 ? ['–£—Å—Ç—Ä–∞–Ω–∏—Ç–µ XSS —É—è–∑–≤–∏–º–æ—Å—Ç–∏: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏—é HTML'] : [],
      csrfIssues: (count: number) => (count > 0 ? ['–†–µ–∞–ª–∏–∑—É–π—Ç–µ CSRF –∑–∞—â–∏—Ç—É –≤–æ –≤—Å–µ—Ö —Ñ–æ—Ä–º–∞—Ö'] : []),
    },
  };

  /**
   * –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å AnalysisOrch–µ—Å—Çrator
   */
  static async checkComponent(context: CheckContext): Promise<ComponentResult> {
    const startTime = Date.now();

    try {
      console.log('üîí –ó–∞–ø—É—Å–∫ SecurityAnalyzer —á–µ—Ä–µ–∑ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å...');

      const analysisResult = await this.runSecurityAnalysis(context);
      const checkResults = this.convertToCheckResults(analysisResult);

      return this.createComponentResult(checkResults, startTime);
    } catch (error) {
      console.error('‚ùå SecurityChecker: –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:', error);
      return this.createErrorResult(startTime, error);
    }
  }

  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç –∞–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   */
  private static async runSecurityAnalysis(context: CheckContext): Promise<SecurityAnalysisResult> {
    const results = await Promise.allSettled([
      this.dependenciesChecker.checkDependencies(context),
      this.codeChecker.checkCode(context),
      this.configChecker.checkConfig(context),
      this.webSecurityChecker.checkWebSecurity(context),
    ]);

    const [dependencies, code, config, webSecurity] = results.map(result =>
      result.status === 'fulfilled' ? result.value : null
    );

    const overall = this.calculateOverallScore({
      dependencies,
      code,
      config,
      webSecurity,
    });

    return {
      dependencies,
      code,
      config,
      webSecurity,
      overall,
    };
  }

  /**
   * –í—ã—á–∏—Å–ª—è–µ—Ç –æ–±—â–∏–π –±–∞–ª–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   */
  private static calculateOverallScore(results: {
    dependencies?: any;
    code?: any;
    config?: any;
    webSecurity?: any;
  }): { score: number; issues: number; recommendation: string } {
    const scores = {
      dependencies: results.dependencies
        ? this.calculateDependenciesScore(results.dependencies)
        : 100,
      code: results.code ? this.calculateCodeScore(results.code) : 100,
      config: results.config ? this.calculateConfigScore(results.config) : 100,
      webSecurity: results.webSecurity ? this.calculateWebSecurityScore(results.webSecurity) : 100,
    };

    const totalScore = Math.round(
      (scores.dependencies + scores.code + scores.config + scores.webSecurity) / 4
    );

    const totalIssues = Object.values(results).reduce((sum, result) => {
      if (!result) return sum;
      return sum + this.countIssues(result);
    }, 0);

    let recommendation = '–û—Ç–ª–∏—á–Ω–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å!';
    if (totalScore < 50) {
      recommendation = '–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - —Ç—Ä–µ–±—É–µ—Ç—Å—è –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ';
    } else if (totalScore < 70) {
      recommendation = '–°–µ—Ä—å–µ–∑–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è';
    } else if (totalScore < 85) {
      recommendation = '–ï—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏';
    }

    return {
      score: totalScore,
      issues: totalIssues,
      recommendation,
    };
  }

  /**
   * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Ä–∞—Å—á–µ—Ç–∞ –æ—á–∫–æ–≤
   */
  private static calculateDependenciesScore(deps: any): number {
    if (!deps?.auditSummary) return 100;

    const issues = Object.entries(deps.auditSummary)
      .filter(([key]) => ['critical', 'high', 'moderate', 'low'].includes(key))
      .flatMap(([severity, count]) =>
        Array(count as number).fill({ severity: severity === 'moderate' ? 'medium' : severity })
      );

    return this.calculateScore(issues, this.SECURITY_RULES.dependencies);
  }

  private static calculateCodeScore(code: any): number {
    if (!code?.issues) return 100;
    return this.calculateScore(code.issues, this.SECURITY_RULES.code);
  }

  private static calculateConfigScore(config: any): number {
    if (!config?.issues) return 100;
    return this.calculateScore(config.issues, this.SECURITY_RULES.config);
  }

  private static calculateWebSecurityScore(webSecurity: any): number {
    if (!webSecurity?.summary) return 100;

    const xssVulns = webSecurity.xss?.vulnerabilities || [];
    const csrfIssues = webSecurity.csrf?.issues || [];
    const allIssues = [...xssVulns, ...csrfIssues];

    return this.calculateScore(allIssues, this.SECURITY_RULES.webSecurity);
  }

  /**
   * –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–ª–µ–º
   */
  private static countIssues(result: any): number {
    if (result?.auditSummary) {
      return Object.values(result.auditSummary).reduce(
        (sum: number, count) => sum + (count as number),
        0
      );
    }
    if (result?.issues) {
      return result.issues.length;
    }
    if (result?.xss || result?.csrf) {
      return (result.xss?.vulnerabilities?.length || 0) + (result.csrf?.issues?.length || 0);
    }
    return 0;
  }

  /**
   * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
   */
  private static getDependenciesRecommendations(deps: any): string[] {
    return this.generateRecommendationsFromTemplate(
      deps,
      this.RECOMMENDATION_TEMPLATES.dependencies
    );
  }

  private static getCodeRecommendations(code: any): string[] {
    return this.generateRecommendationsFromTemplate(code, this.RECOMMENDATION_TEMPLATES.code);
  }

  private static getConfigRecommendations(config: any): string[] {
    return this.generateRecommendationsFromTemplate(config, this.RECOMMENDATION_TEMPLATES.config);
  }

  private static getWebSecurityRecommendations(webSecurity: any): string[] {
    if (!webSecurity?.summary) {
      return ['–í–µ–±-–∞–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω'];
    }
    return this.generateRecommendationsFromTemplate(
      webSecurity,
      this.RECOMMENDATION_TEMPLATES.webSecurity
    );
  }

  /**
   * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç CheckResult[]
   */
  private static convertToCheckResults(analysisResult: SecurityAnalysisResult): CheckResult[] {
    const results: CheckResult[] = [];

    // Dependencies security check
    if (analysisResult.dependencies) {
      results.push({
        check: {
          id: 'dependencies-security',
          name: 'Dependencies Security',
          description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π',
          category: 'security',
          score: 100,
          critical: true,
          level: 'high',
          tags: ['dependencies', 'security', 'npm'],
        },
        passed: this.calculateDependenciesScore(analysisResult.dependencies) >= 70,
        score: this.calculateDependenciesScore(analysisResult.dependencies),
        maxScore: 100,
        details: this.formatDependenciesDetails(analysisResult.dependencies),
        recommendations: this.getDependenciesRecommendations(analysisResult.dependencies),
      });
    }

    // Code security check
    if (analysisResult.code) {
      results.push({
        check: {
          id: 'code-security',
          name: 'Code Security',
          description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ–¥–∞',
          category: 'security',
          score: 100,
          critical: true,
          level: 'high',
          tags: ['code', 'security', 'static-analysis'],
        },
        passed: this.calculateCodeScore(analysisResult.code) >= 70,
        score: this.calculateCodeScore(analysisResult.code),
        maxScore: 100,
        details: this.formatCodeDetails(analysisResult.code),
        recommendations: this.getCodeRecommendations(analysisResult.code),
      });
    }

    // Config security check
    if (analysisResult.config) {
      results.push({
        check: {
          id: 'config-security',
          name: 'Configuration Security',
          description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏',
          category: 'security',
          score: 100,
          critical: false,
          level: 'medium',
          tags: ['config', 'security'],
        },
        passed: this.calculateConfigScore(analysisResult.config) >= 70,
        score: this.calculateConfigScore(analysisResult.config),
        maxScore: 100,
        details: this.formatConfigDetails(analysisResult.config),
        recommendations: this.getConfigRecommendations(analysisResult.config),
      });
    }

    // Web security check
    if (analysisResult.webSecurity) {
      results.push({
        check: {
          id: 'web-security',
          name: 'Web Security',
          description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ–±-–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
          category: 'security',
          score: 100,
          critical: true,
          level: 'high',
          tags: ['web', 'security', 'xss', 'csrf'],
        },
        passed: this.calculateWebSecurityScore(analysisResult.webSecurity) >= 70,
        score: this.calculateWebSecurityScore(analysisResult.webSecurity),
        maxScore: 100,
        details: this.formatWebSecurityDetails(analysisResult.webSecurity),
        recommendations: this.getWebSecurityRecommendations(analysisResult.webSecurity),
      });
    }

    return results;
  }

  /**
   * –ú–µ—Ç–æ–¥—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π
   */
  private static formatDependenciesDetails(deps: any): string {
    if (!deps?.auditSummary) return '–ê–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω';

    const { critical, high, moderate, low, total } = deps.auditSummary;
    return `–ù–∞–π–¥–µ–Ω–æ ${total} —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π: –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö - ${critical}, –≤—ã—Å–æ–∫–∏—Ö - ${high}, —Å—Ä–µ–¥–Ω–∏—Ö - ${moderate}, –Ω–∏–∑–∫–∏—Ö - ${low}`;
  }

  private static formatCodeDetails(code: any): string {
    if (!code?.summary) return '–ê–Ω–∞–ª–∏–∑ –∫–æ–¥–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω';

    const { secrets, unsafeFunctions, total } = code.summary;
    return `–ù–∞–π–¥–µ–Ω–æ ${total} –ø—Ä–æ–±–ª–µ–º: —Å–µ–∫—Ä–µ—Ç–æ–≤ –≤ –∫–æ–¥–µ - ${secrets}, –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π - ${unsafeFunctions}`;
  }

  private static formatConfigDetails(config: any): string {
    if (!config?.summary) return '–ê–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω';

    const { corsIssues, envExposure, total } = config.summary;
    return `–ù–∞–π–¥–µ–Ω–æ ${total} –ø—Ä–æ–±–ª–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: CORS - ${corsIssues}, env exposure - ${envExposure}`;
  }

  private static formatWebSecurityDetails(webSecurity: any): string {
    if (!webSecurity?.summary) return '–í–µ–±-–∞–Ω–∞–ª–∏–∑ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω';

    const xssCount = webSecurity.xss?.vulnerabilities?.length || 0;
    const csrfCount = webSecurity.csrf?.issues?.length || 0;
    return `–ù–∞–π–¥–µ–Ω–æ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π: XSS - ${xssCount}, CSRF - ${csrfCount}`;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç ComponentResult
   */
  private static createComponentResult(
    checkResults: CheckResult[],
    startTime: number
  ): ComponentResult {
    const totalScore = checkResults.reduce((sum, result) => sum + result.score, 0);
    const maxScore = checkResults.reduce((sum, result) => sum + result.maxScore, 0);
    const avgScore = maxScore > 0 ? Math.round((totalScore / maxScore) * 100) : 0;

    const failed = checkResults.filter(result => !result.passed);
    const recommendations = this.generateGlobalRecommendations(failed);

    return {
      name: 'SecurityChecker',
      category: 'security',
      score: avgScore,
      maxScore: 100,
      details: `–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û–±—â–∏–π –±–∞–ª–ª: ${avgScore}/100`,
      recommendations,
      executionTime: Date.now() - startTime,
      checks: checkResults,
    };
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
   */
  private static createErrorResult(startTime: number, error: any): ComponentResult {
    return {
      name: 'SecurityChecker',
      category: 'security',
      score: 0,
      maxScore: 100,
      details: `–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è SecurityChecker: ${error?.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`,
      recommendations: ['–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏'],
      executionTime: Date.now() - startTime,
      checks: [],
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
   */
  private static generateGlobalRecommendations(failed: CheckResult[]): string[] {
    const recommendations = new Set<string>();

    failed.forEach(result => {
      result.recommendations?.forEach(rec => recommendations.add(rec));
    });

    if (failed.length > 2) {
      recommendations.add('–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞—É–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏');
    }

    return Array.from(recommendations);
  }

  /**
   * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏
   */
  private static calculateEstimatedTime(recommendations: string[]): string {
    const baseTime = recommendations.length * 30; // 30 –º–∏–Ω—É—Ç –Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
    if (baseTime < 60) return `${baseTime} –º–∏–Ω—É—Ç`;
    const hours = Math.round(baseTime / 60);
    return `${hours} ${hours === 1 ? '—á–∞—Å' : '—á–∞—Å–æ–≤'}`;
  }
}

export default SecurityChecker;
