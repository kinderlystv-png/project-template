/**
 * SecurityChecker v2.0 - –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 *
 * –ö–ª—é—á–µ–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è:
 * - –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞ –≤ –º–µ—Ç–æ–¥–∞—Ö —Ä–∞—Å—á–µ—Ç–∞ –æ—á–∫–æ–≤
 * - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π
 * - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ-—É–ø—Ä–∞–≤–ª—è–µ–º—ã–µ –ø—Ä–∞–≤–∏–ª–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 * - –ú–æ–¥—É–ª—å–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å –±–∞–∑–æ–≤—ã–º–∏ –∫–ª–∞—Å—Å–∞–º–∏
 */

import { CheckContext, ComponentResult, CheckResult } from '../../types/index.js';
import { ProcessIsolatedAnalyzer } from '../../orchestrator/ProcessIsolatedAnalyzer.js';
import { DependenciesSecurityChecker } from './DependenciesSecurityChecker.js';
import { CodeSecurityChecker } from './CodeSecurityChecker.js';
import { ConfigSecurityChecker } from './ConfigSecurityChecker.js';
import { WebSecurityChecker } from './WebSecurityChecker.js';

/**
 * –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∞–≤–∏–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 */
interface SecurityScoreRule {
  critical: number;
  high: number;
  medium: number;
  low?: number;
}

/**
 * –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∞–≤–∏–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
 */
abstract class BaseSecurityProcessor {
  /**
   * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –æ—á–∫–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–∞–≤–∏–ª
   */
  protected static calculateScore(
    issuesData: any,
    rules: SecurityScoreRule,
    issueExtractor: (data: any) => any[] = data => data.issues || []
  ): number {
    let score = 100;
    const issues = issueExtractor(issuesData);

    if (!Array.isArray(issues)) return score;

    const severityCounts = issues.reduce(
      (acc, issue) => {
        const severity = issue.severity || 'low';
        acc[severity] = (acc[severity] || 0) + 1;
        return acc;
      },
      {} as Record<string, number>
    );

    score -= (severityCounts.critical || 0) * rules.critical;
    score -= (severityCounts.high || 0) * rules.high;
    score -= (severityCounts.medium || 0) * rules.medium;
    if (rules.low) {
      score -= (severityCounts.low || 0) * rules.low;
    }

    return Math.max(0, score);
  }

  /**
   * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
   */
  protected static generateRecommendationsFromRules(
    data: any,
    rules: Record<string, (data: any) => string[]>
  ): string[] {
    const recommendations: string[] = [];

    for (const [key, generator] of Object.entries(rules)) {
      const recs = generator(data);
      if (recs.length > 0) {
        recommendations.push(...recs);
      }
    }

    return recommendations;
  }
}

export class SecurityChecker {
  private static analyzer = new ProcessIsolatedAnalyzer();
  private static dependenciesChecker = new DependenciesSecurityChecker();
  private static codeChecker = new CodeSecurityChecker();
  private static configChecker = new ConfigSecurityChecker();
  private static webSecurityChecker = new WebSecurityChecker();

  /**
   * –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å AnalysisOrch–µ—Å—Çrator
   */
  static async checkComponent(context: CheckContext): Promise<ComponentResult> {
    const startTime = Date.now();

    try {
      console.log('üîí –ó–∞–ø—É—Å–∫ SecurityAnalyzer —á–µ—Ä–µ–∑ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å...');

      // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø—Ä–æ—Ü–µ—Å—Å–µ
      const analysisResult = await this.runSecurityAnalysis(context);

      // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ñ–æ—Ä–º–∞—Ç CheckResult[]
      const checkResults = this.convertToCheckResults(analysisResult);

      // –°–æ–∑–¥–∞–µ–º ComponentResult
      return this.createComponentResult(checkResults, startTime);
    } catch (error) {
      console.error('‚ùå SecurityChecker: –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:', error);

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º fallback —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
      return this.createErrorResult(startTime, error);
    }
  }

  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç –∞–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   */
  private static async runSecurityAnalysis(context: CheckContext): Promise<{
    dependencies: any;
    code: any;
    config: any;
    webSecurity: any;
    overallScore: number;
  }> {
    try {
      // –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–∏–ø—ã –∞–Ω–∞–ª–∏–∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
      const [dependenciesResult, codeResult, configResult, webSecurityResult] = await Promise.all([
        this.dependenciesChecker.checkDependencies(context.projectPath),
        this.codeChecker.checkCodeSecurity(context.projectPath),
        this.configChecker.checkConfigSecurity(context.projectPath),
        this.webSecurityChecker.analyzeWebSecurity(context),
      ]);

      // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–∏–π –±–∞–ª–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
      const overallScore = this.calculateOverallScore(
        dependenciesResult,
        codeResult,
        configResult,
        webSecurityResult
      );

      return {
        dependencies: dependenciesResult,
        code: codeResult,
        config: configResult,
        webSecurity: webSecurityResult,
        overallScore,
      };
    } catch (error) {
      console.error('SecurityChecker: –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:', error);
      throw error;
    }
  }

  /**
   * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –æ–±—â–∏–π –±–∞–ª–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   */
  private static calculateOverallScore(
    deps: any,
    code: any,
    config: any,
    webSecurity: any
  ): number {
    let score = 100;

    // –°–Ω–∏–∂–∞–µ–º –±–∞–ª–ª –∑–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è—Ö
    if (deps.auditSummary) {
      score -= deps.auditSummary.critical * 20;
      score -= deps.auditSummary.high * 10;
      score -= deps.auditSummary.moderate * 5;
      score -= deps.auditSummary.low * 1;
    }

    // –°–Ω–∏–∂–∞–µ–º –±–∞–ª–ª –∑–∞ –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–¥–µ
    if (code.issues) {
      const criticalCodeIssues = code.issues.filter((i: any) => i.severity === 'critical').length;
      const highCodeIssues = code.issues.filter((i: any) => i.severity === 'high').length;

      score -= criticalCodeIssues * 15;
      score -= highCodeIssues * 8;
    }

    // –°–Ω–∏–∂–∞–µ–º –±–∞–ª–ª –∑–∞ –ø—Ä–æ–±–ª–µ–º—ã –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if (config.issues) {
      const criticalConfigIssues = config.issues.filter(
        (i: any) => i.severity === 'critical'
      ).length;
      const highConfigIssues = config.issues.filter((i: any) => i.severity === 'high').length;

      score -= criticalConfigIssues * 10;
      score -= highConfigIssues * 5;
    }

    // –°–Ω–∏–∂–∞–µ–º –±–∞–ª–ª –∑–∞ –≤–µ–±-—É—è–∑–≤–∏–º–æ—Å—Ç–∏
    if (webSecurity && webSecurity.summary) {
      const totalWebIssues = webSecurity.summary.totalIssues || 0;
      const criticalWebIssues =
        webSecurity.xss?.vulnerabilities?.filter((v: any) => v.severity === 'critical').length || 0;
      const highWebIssues =
        webSecurity.xss?.vulnerabilities?.filter((v: any) => v.severity === 'high').length || 0;

      score -= criticalWebIssues * 12;
      score -= highWebIssues * 6;
      score -= Math.max(0, totalWebIssues - criticalWebIssues - highWebIssues) * 3;
    }

    return Math.max(0, Math.min(100, score));
  }

  /**
   * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ –≤ —Ñ–æ—Ä–º–∞—Ç CheckResult[]
   */
  private static convertToCheckResults(analysisResult: any): CheckResult[] {
    const checkResults: CheckResult[] = [];

    // Dependencies Security Check
    checkResults.push({
      check: {
        id: 'security-dependencies',
        name: 'Dependencies Security',
        description: '–ê–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø—Ä–æ–µ–∫—Ç–∞',
        category: 'security',
        score: 100,
        critical: true,
        level: 'critical',
        tags: ['dependencies', 'npm-audit', 'vulnerabilities'],
      },
      passed: analysisResult.dependencies.auditSummary.critical === 0,
      score: this.calculateDependenciesScore(analysisResult.dependencies),
      maxScore: 100,
      details: `–ù–∞–π–¥–µ–Ω–æ —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π: ${analysisResult.dependencies.auditSummary.total}`,
      recommendations: this.getDependenciesRecommendations(analysisResult.dependencies),
    });

    // Code Security Check
    checkResults.push({
      check: {
        id: 'security-code',
        name: 'Code Security',
        description: '–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫–æ–¥–∞ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –ø—Ä–æ–±–ª–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
        category: 'security',
        score: 100,
        critical: true,
        level: 'high',
        tags: ['static-analysis', 'secrets', 'code-security'],
      },
      passed: analysisResult.code.issues.length === 0,
      score: this.calculateCodeScore(analysisResult.code),
      maxScore: 100,
      details: `–ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º –≤ –∫–æ–¥–µ: ${analysisResult.code.issues.length}`,
      recommendations: this.getCodeRecommendations(analysisResult.code),
    });

    // Config Security Check
    checkResults.push({
      check: {
        id: 'security-config',
        name: 'Configuration Security',
        description: '–ê–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤',
        category: 'security',
        score: 100,
        critical: false,
        level: 'high',
        tags: ['configuration', 'cors', 'env-security'],
      },
      passed: analysisResult.config.issues.length === 0,
      score: this.calculateConfigScore(analysisResult.config),
      maxScore: 100,
      details: `–ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${analysisResult.config.issues.length}`,
      recommendations: this.getConfigRecommendations(analysisResult.config),
    });

    // Web Security Check
    const webSecurityPassed =
      !analysisResult.webSecurity ||
      (analysisResult.webSecurity.summary && analysisResult.webSecurity.summary.totalIssues === 0);

    const totalWebIssues =
      analysisResult.webSecurity?.summary?.totalIssues ||
      (analysisResult.webSecurity?.xss?.vulnerabilities?.length || 0) +
        (analysisResult.webSecurity?.csrf?.issues?.length || 0);

    checkResults.push({
      check: {
        id: 'security-web',
        name: 'Web Security',
        description: '–ê–Ω–∞–ª–∏–∑ XSS, CSRF –∏ –¥—Ä—É–≥–∏—Ö –≤–µ–±-—É—è–∑–≤–∏–º–æ—Å—Ç–µ–π',
        category: 'security',
        score: 100,
        critical: true,
        level: 'high',
        tags: ['web-security', 'xss', 'csrf', 'injection'],
      },
      passed: webSecurityPassed,
      score: this.calculateWebSecurityScore(analysisResult.webSecurity),
      maxScore: 100,
      details: analysisResult.webSecurity?.summary
        ? `–ù–∞–π–¥–µ–Ω–æ –≤–µ–±-—É—è–∑–≤–∏–º–æ—Å—Ç–µ–π: ${totalWebIssues} (XSS: ${analysisResult.webSecurity.xss?.vulnerabilities?.length || 0}, CSRF: ${analysisResult.webSecurity.csrf?.issues?.length || 0})`
        : '–í–µ–±-–∞–Ω–∞–ª–∏–∑ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω',
      recommendations: this.getWebSecurityRecommendations(analysisResult.webSecurity),
    }); // Overall Security Score
    checkResults.push({
      check: {
        id: 'security-overall',
        name: 'Overall Security',
        description: '–û–±—â–∏–π –±–∞–ª–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞',
        category: 'security',
        score: 100,
        critical: true,
        level: 'critical',
        tags: ['overall', 'security-score'],
      },
      passed: analysisResult.overallScore >= 70,
      score: analysisResult.overallScore,
      maxScore: 100,
      details: `–û–±—â–∏–π –±–∞–ª–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: ${analysisResult.overallScore}%`,
      recommendations:
        analysisResult.overallScore < 70
          ? ['–£–ª—É—á—à–∏—Ç–µ –æ–±—â—É—é –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞', '–ò—Å–ø—Ä–∞–≤—å—Ç–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —É—è–∑–≤–∏–º–æ—Å—Ç–∏']
          : ['–°–∏—Å—Ç–µ–º–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ'],
    });

    return checkResults;
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç ComponentResult
   */
  private static createComponentResult(
    checkResults: CheckResult[],
    startTime: number
  ): ComponentResult {
    const passed = checkResults.filter(r => r.passed);
    const failed = checkResults.filter(r => !r.passed);
    const score = passed.reduce((sum, r) => sum + r.score, 0);
    const maxScore = checkResults.reduce((sum, r) => sum + r.maxScore, 0);
    const percentage = maxScore > 0 ? Math.round((score / maxScore) * 100) : 0;

    return {
      component: 'security-analysis' as any,
      score,
      maxScore,
      percentage,
      passed,
      failed,
      warnings: [],
      recommendations: this.generateRecommendations(failed),
      duration: Date.now() - startTime,
    };
  }

  /**
   * –°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
   */
  private static createErrorResult(startTime: number, error: any): ComponentResult {
    const errorCheck: CheckResult = {
      check: {
        id: 'security-error',
        name: 'Security Analysis Error',
        description: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
        category: 'security',
        score: 0,
        critical: true,
        level: 'critical',
        tags: ['error'],
      },
      passed: false,
      score: 0,
      maxScore: 100,
      details: `–û—à–∏–±–∫–∞: ${error.message || error}`,
      recommendations: [
        '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é SecurityChecker',
        '–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ npm audit –¥–æ—Å—Ç—É–ø–µ–Ω',
      ],
    };

    return {
      component: 'security-analysis' as any,
      score: 0,
      maxScore: 100,
      percentage: 0,
      passed: [],
      failed: [errorCheck],
      warnings: [],
      recommendations: ['–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ SecurityChecker –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏'],
      duration: Date.now() - startTime,
    };
  }

  // Helper methods –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ scores
  private static calculateDependenciesScore(deps: any): number {
    let score = 100;
    if (deps.auditSummary) {
      score -= deps.auditSummary.critical * 25;
      score -= deps.auditSummary.high * 15;
      score -= deps.auditSummary.moderate * 5;
      score -= deps.auditSummary.low * 1;
    }
    return Math.max(0, score);
  }

  private static calculateCodeScore(code: any): number {
    let score = 100;
    if (code.issues) {
      const critical = code.issues.filter((i: any) => i.severity === 'critical').length;
      const high = code.issues.filter((i: any) => i.severity === 'high').length;
      const medium = code.issues.filter((i: any) => i.severity === 'medium').length;

      score -= critical * 20;
      score -= high * 10;
      score -= medium * 5;
    }
    return Math.max(0, score);
  }

  private static calculateConfigScore(config: any): number {
    let score = 100;
    if (config.issues) {
      const critical = config.issues.filter((i: any) => i.severity === 'critical').length;
      const high = config.issues.filter((i: any) => i.severity === 'high').length;

      score -= critical * 15;
      score -= high * 8;
    }
    return Math.max(0, score);
  }

  private static calculateWebSecurityScore(webSecurity: any): number {
    let score = 100;
    if (!webSecurity || !webSecurity.summary) {
      return score; // –ï—Å–ª–∏ –≤–µ–±-–∞–Ω–∞–ª–∏–∑ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω, —Å—á–∏—Ç–∞–µ–º —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º
    }

    const xssVulns = webSecurity.xss?.vulnerabilities || [];
    const csrfIssues = webSecurity.csrf?.issues || [];

    // –°–Ω–∏–∂–∞–µ–º –±–∞–ª–ª –∑–∞ XSS —É—è–∑–≤–∏–º–æ—Å—Ç–∏
    const criticalXSS = xssVulns.filter((v: any) => v.severity === 'critical').length;
    const highXSS = xssVulns.filter((v: any) => v.severity === 'high').length;
    const mediumXSS = xssVulns.filter((v: any) => v.severity === 'medium').length;

    score -= criticalXSS * 20;
    score -= highXSS * 12;
    score -= mediumXSS * 6;

    // –°–Ω–∏–∂–∞–µ–º –±–∞–ª–ª –∑–∞ CSRF –ø—Ä–æ–±–ª–µ–º—ã
    const criticalCSRF = csrfIssues.filter((i: any) => i.severity === 'high').length;
    const mediumCSRF = csrfIssues.filter((i: any) => i.severity === 'medium').length;

    score -= criticalCSRF * 15;
    score -= mediumCSRF * 8;

    return Math.max(0, score);
  }

  // Helper methods –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
  private static getDependenciesRecommendations(deps: any): string[] {
    const recommendations = [];
    if (deps.auditSummary.total > 0) {
      recommendations.push('–ó–∞–ø—É—Å—Ç–∏—Ç–µ npm audit fix –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è');
      if (deps.auditSummary.critical > 0) {
        recommendations.push('–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±–Ω–æ–≤–∏—Ç–µ –ø–∞–∫–µ—Ç—ã —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ —É—è–∑–≤–∏–º–æ—Å—Ç—è–º–∏');
      }
    }
    return recommendations;
  }

  private static getCodeRecommendations(code: any): string[] {
    const recommendations = [];
    if (code.summary.secrets > 0) {
      recommendations.push('–£–¥–∞–ª–∏—Ç–µ —Å–µ–∫—Ä–µ—Ç—ã –∏–∑ –∫–æ–¥–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    }
    if (code.summary.unsafeFunctions > 0) {
      recommendations.push('–ó–∞–º–µ–Ω–∏—Ç–µ –Ω–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∞–Ω–∞–ª–æ–≥–∏');
    }
    return recommendations;
  }

  private static getConfigRecommendations(config: any): string[] {
    const recommendations = [];
    if (config.summary.corsIssues > 0) {
      recommendations.push('–ù–∞—Å—Ç—Ä–æ–π—Ç–µ CORS –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–ª—è production');
    }
    if (config.summary.envExposure > 0) {
      recommendations.push('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞ exposure —Å–µ–∫—Ä–µ—Ç–æ–≤');
    }
    return recommendations;
  }

  private static getWebSecurityRecommendations(webSecurity: any): string[] {
    const recommendations = [];

    if (!webSecurity || !webSecurity.summary) {
      return ['–í–µ–±-–∞–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω'];
    }

    const xssVulns = webSecurity.xss?.vulnerabilities || [];
    const csrfIssues = webSecurity.csrf?.issues || [];

    if (xssVulns.length > 0) {
      recommendations.push('–£—Å—Ç—Ä–∞–Ω–∏—Ç–µ XSS —É—è–∑–≤–∏–º–æ—Å—Ç–∏: –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏—é HTML');

      const dangerousHTML = xssVulns.filter((v: any) => v.type === 'dangerous_html').length;
      const unsafeJS = xssVulns.filter((v: any) => v.type === 'unsafe_js_execution').length;

      if (dangerousHTML > 0) {
        recommendations.push(
          '–ó–∞–º–µ–Ω–∏—Ç–µ {@html} –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ —Å–∞–Ω–∏—Ç–∏–∑–∞—Ü–∏—é'
        );
      }
      if (unsafeJS > 0) {
        recommendations.push('–ò–∑–±–µ–≥–∞–π—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ JS –∫–æ–¥–∞');
      }
    }

    if (csrfIssues.length > 0) {
      recommendations.push('–î–æ–±–∞–≤—å—Ç–µ CSRF –∑–∞—â–∏—Ç—É: —Ç–æ–∫–µ–Ω—ã, SameSite cookies');

      const unprotectedForms = csrfIssues.filter((i: any) => i.type === 'unprotected_form').length;
      const cookieIssues = csrfIssues.filter((i: any) => i.type === 'cookie_security').length;

      if (unprotectedForms > 0) {
        recommendations.push('–î–æ–±–∞–≤—å—Ç–µ CSRF —Ç–æ–∫–µ–Ω—ã –≤–æ –≤—Å–µ —Ñ–æ—Ä–º—ã');
      }
      if (cookieIssues > 0) {
        recommendations.push('–ù–∞—Å—Ç—Ä–æ–π—Ç–µ SameSite –∏ Secure —Ñ–ª–∞–≥–∏ –¥–ª—è cookies');
      }
    }

    return recommendations;
  }

  private static generateRecommendations(failed: CheckResult[]): string[] {
    return failed.flatMap(check => check.recommendations || []);
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
   */
  static async generateDetailedRecommendations(context: CheckContext): Promise<{
    dependencies: any[];
    code: any[];
    config: any[];
    summary: {
      totalRecommendations: number;
      criticalRecommendations: number;
      estimatedTimeToFix: string;
    };
  }> {
    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞
      const analysisResult = await this.runSecurityAnalysis(context);

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –æ—Ç –∫–∞–∂–¥–æ–≥–æ checker'–∞
      const [dependenciesRecommendations, codeRecommendations, configRecommendations] =
        await Promise.all([
          this.dependenciesChecker.generateDetailedRecommendations(
            analysisResult.dependencies.vulnerabilities || []
          ),
          this.codeChecker.generateDetailedRecommendations(analysisResult.code.issues || []),
          this.configChecker.generateDetailedRecommendations(analysisResult.config.issues || []),
        ]);

      // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      const allRecommendations = [
        ...dependenciesRecommendations,
        ...codeRecommendations,
        ...configRecommendations,
      ];

      const criticalCount = allRecommendations.filter(
        r => r.severity === 'critical' || r.severity === 'high'
      ).length;

      // –û—Ü–µ–Ω–∏–≤–∞–µ–º –≤—Ä–µ–º—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
      const estimatedTime = this.calculateEstimatedTime(allRecommendations);

      return {
        dependencies: dependenciesRecommendations,
        code: codeRecommendations,
        config: configRecommendations,
        summary: {
          totalRecommendations: allRecommendations.length,
          criticalRecommendations: criticalCount,
          estimatedTimeToFix: estimatedTime,
        },
      };
    } catch (error) {
      console.error('SecurityChecker: –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:', error);
      return {
        dependencies: [],
        code: [],
        config: [],
        summary: {
          totalRecommendations: 0,
          criticalRecommendations: 0,
          estimatedTimeToFix: '0h',
        },
      };
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –±—ã—Å—Ç—Ä—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º
   */
  static async generateQuickRecommendations(context: CheckContext): Promise<any[]> {
    try {
      const analysisResult = await this.runSecurityAnalysis(context);

      const [dependenciesQuick, codeQuick, configQuick] = await Promise.all([
        this.dependenciesChecker.generateQuickRecommendations(
          analysisResult.dependencies.vulnerabilities || []
        ),
        this.codeChecker.generateQuickRecommendations(analysisResult.code.issues || []),
        this.configChecker.generateQuickRecommendations(analysisResult.config.issues || []),
      ]);

      return [...dependenciesQuick, ...codeQuick, ...configQuick];
    } catch (error) {
      console.error('SecurityChecker: –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±—ã—Å—Ç—Ä—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:', error);
      return [];
    }
  }

  /**
   * –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
   */
  private static calculateEstimatedTime(recommendations: any[]): string {
    let totalMinutes = 0;

    for (const rec of recommendations) {
      // –ü–∞—Ä—Å–∏–º –≤—Ä–µ–º—è –∏–∑ —Å—Ç—Ä–æ–∫–∏ —Ç–∏–ø–∞ "10-15 –º–∏–Ω—É—Ç" –∏–ª–∏ "1-2 —á–∞—Å–∞"
      const timeStr = rec.timeEstimate || '15 –º–∏–Ω—É—Ç';
      const minutes = this.parseTimeToMinutes(timeStr);
      totalMinutes += minutes;
    }

    if (totalMinutes < 60) {
      return `${totalMinutes}–º`;
    } else {
      const hours = Math.round((totalMinutes / 60) * 10) / 10;
      return `${hours}—á`;
    }
  }

  /**
   * –ü–∞—Ä—Å–∏—Ç —Å—Ç—Ä–æ–∫—É –≤—Ä–µ–º–µ–Ω–∏ –≤ –º–∏–Ω—É—Ç—ã
   */
  private static parseTimeToMinutes(timeStr: string): number {
    if (timeStr.includes('—á–∞—Å')) {
      const match = timeStr.match(/(\d+)/);
      return match ? parseInt(match[1]) * 60 : 60;
    } else if (timeStr.includes('–º–∏–Ω—É—Ç')) {
      const match = timeStr.match(/(\d+)/);
      return match ? parseInt(match[1]) : 15;
    }
    return 15; // Default
  }
}
