/**
 * FileStructureChecker - –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ FileStructureAnalyzer —Å –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
 */
/* eslint-disable no-console */

import { BaseChecker } from '../core/checker.js';
import type { CheckContext, CheckResult } from '../core/types.js';
import { FileStructureAnalyzer } from '../analyzers/structure/FileStructureAnalyzer.js';

/**
 * –ß–µ–∫–µ—Ä –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞
 * –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç FileStructureAnalyzer v3.0 –≤ —Å–∏—Å—Ç–µ–º—É –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 */
export class FileStructureChecker extends BaseChecker {
  readonly name = 'FileStructureChecker';
  readonly category = 'structure' as const;
  readonly description =
    '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞ —Å –ø–æ–º–æ—â—å—é FileStructureAnalyzer v3.0';

  async check(context: CheckContext): Promise<CheckResult> {
    try {
      console.log('üîç FileStructureChecker: –ó–∞–ø—É—Å–∫ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤...');

      // –í—ã–∑—ã–≤–∞–µ–º FileStructureAnalyzer
      const result = await FileStructureAnalyzer.checkComponent(context);

      // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–¥ CheckResult
      const passed = result.percentage >= 70; // –ü–æ—Ä–æ–≥ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è
      const score = Math.round(result.percentage);

      const recommendations = result.recommendations || [];
      const details = {
        analyzer: 'FileStructureAnalyzer v3.0',
        filesAnalyzed: result.metadata?.filesAnalyzed || 0,
        metrics: result.metadata?.metrics || {},
        duration: result.duration,
        rawResult: result,
      };

      console.log(
        `üéØ FileStructureChecker: –ó–∞–≤–µ—Ä—à–µ–Ω. –û—Ü–µ–Ω–∫–∞: ${score}%, –§–∞–π–ª–æ–≤: ${details.filesAnalyzed}`
      );

      return this.createResult(
        passed,
        score,
        `–ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω. –û—Ü–µ–Ω–∫–∞: ${score}%. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: ${details.filesAnalyzed}`,
        details,
        recommendations
      );
    } catch (error) {
      console.error('‚ùå FileStructureChecker: –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞:', error);

      return this.createResult(
        false,
        0,
        `–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ñ–∞–π–ª–æ–≤: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`,
        { error: error instanceof Error ? error.message : String(error) },
        ['–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø—É—Ç–∏ –∫ –ø—Ä–æ–µ–∫—Ç—É', '–£–±–µ–¥–∏—Ç–µ—Å—å –≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞']
      );
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∏–º–µ–Ω–∏–º–æ—Å—Ç—å —á–µ–∫–µ—Ä–∞
   */
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  isApplicable(_context: CheckContext): boolean {
    // –ü—Ä–∏–º–µ–Ω–∏–º –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
    return true;
  }

  /**
   * –í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
   */
  get priority(): number {
    return 2; // –í—ã—Å–æ–∫–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
  }

  /**
   * –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏
   */
  getName(): string {
    return this.name;
  }
}
