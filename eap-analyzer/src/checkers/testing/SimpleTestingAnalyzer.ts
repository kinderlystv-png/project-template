/**
 * –í—Ä–µ–º–µ–Ω–Ω—ã–π –ø—Ä–æ—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏
 */

import { BaseChecker } from '../../core/base/BaseChecker';
import { Project } from '../../types/Project';
import { CheckResult } from '../../types/CheckResult';
import { AnalysisCategory } from '../../types/AnalysisCategory';
import { SeverityLevel } from '../../types/SeverityLevel';
import { createCheckResult } from './utils/CheckResultUtils';

export class UnifiedTestingAnalyzer extends BaseChecker {
  readonly name = 'UnifiedTestingAnalyzer';
  readonly version = '3.0.0';
  readonly category: AnalysisCategory = AnalysisCategory.TESTING;
  readonly description = '–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–µ—Å—Ç–æ–≤–æ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–µ–∫—Ç–∞';
  readonly standard = 'EAP-3.0';
  readonly severity = SeverityLevel.MEDIUM;

  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç –∞–Ω–∞–ª–∏–∑ —Ç–µ—Å—Ç–æ–≤–æ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã –ø—Ä–æ–µ–∫—Ç–∞
   */
  async check(project: Project): Promise<CheckResult[]> {
    try {
      console.log('üîç –ù–∞—á–∏–Ω–∞—é –∞–Ω–∞–ª–∏–∑ —Ç–µ—Å—Ç–æ–≤–æ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã...');

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
      const files = await project.getFileList();
      const testFiles = files.filter(
        file => /\.(test|spec)\.(js|ts|jsx|tsx)$/i.test(file) || file.includes('__tests__')
      );

      const hasTestFramework = await this.checkTestFramework(project);
      const hasTestFiles = testFiles.length > 0;

      const results: CheckResult[] = [];

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞
      results.push(
        createCheckResult({
          id: 'testing-framework',
          name: '–¢–µ—Å—Ç–æ–≤—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫',
          description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞',
          passed: hasTestFramework,
          message: hasTestFramework
            ? '–¢–µ—Å—Ç–æ–≤—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'
            : '–¢–µ—Å—Ç–æ–≤—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω',
          details: { frameworkFound: hasTestFramework },
          recommendations: hasTestFramework
            ? []
            : [
                '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ (Jest, Vitest, –∏–ª–∏ –¥—Ä—É–≥–æ–π)',
                '–î–æ–±–∞–≤—å—Ç–µ —Å–∫—Ä–∏–ø—Ç—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤ –≤ package.json',
              ],
        })
      );

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
      results.push(
        createCheckResult({
          id: 'test-files',
          name: '–¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã',
          description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–µ',
          passed: hasTestFiles,
          message: hasTestFiles
            ? `–ù–∞–π–¥–µ–Ω–æ ${testFiles.length} —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤`
            : '–¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã',
          details: {
            testFiles: testFiles,
            testFilesCount: testFiles.length,
          },
          recommendations: hasTestFiles
            ? []
            : [
                '–°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏ .test.js, .spec.js –∏–ª–∏ –≤ –ø–∞–ø–∫–µ __tests__',
                '–ü–æ–∫—Ä–æ–π—Ç–µ –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å unit-—Ç–µ—Å—Ç–∞–º–∏',
              ],
        })
      );

      console.log(`‚úÖ –ê–Ω–∞–ª–∏–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω. –ù–∞–π–¥–µ–Ω–æ ${results.length} –ø—Ä–æ–≤–µ—Ä–æ–∫`);
      return results;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);

      return [
        createCheckResult({
          id: 'testing-analysis-error',
          name: '–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
          description: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Ç–µ—Å—Ç–æ–≤–æ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã',
          passed: false,
          message: `–û—à–∏–±–∫–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`,
          details: { error: error instanceof Error ? error.message : 'Unknown error' },
        }),
      ];
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ –≤ –ø—Ä–æ–µ–∫—Ç–µ
   */
  private async checkTestFramework(project: Project): Promise<boolean> {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      const packageJsonPath = project.resolvePath('package.json');
      if (await project.exists(packageJsonPath)) {
        const packageContent = await project.readFile(packageJsonPath);
        const packageJson = JSON.parse(packageContent);

        const testFrameworks = [
          'jest',
          'vitest',
          'mocha',
          'jasmine',
          'cypress',
          'playwright',
          '@testing-library',
          'karma',
        ];

        const dependencies = {
          ...packageJson.dependencies,
          ...packageJson.devDependencies,
        };

        return testFrameworks.some(framework =>
          Object.keys(dependencies).some(dep => dep.includes(framework))
        );
      }

      return false;
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞:', error);
      return false;
    }
  }
}
