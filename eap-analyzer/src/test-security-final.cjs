/**
 * –¢–µ—Å—Ç SecurityChecker - CommonJS –≤–µ—Ä—Å–∏—è
 */

const fs = require('fs');
const path = require('path');

console.log('üîí –¢–µ—Å—Ç–∏—Ä—É–µ–º SecurityChecker —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏...');

// –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞
function analyzeProject() {
  console.log('\nüìÇ –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞:');

  const projectPath = process.cwd();
  console.log(`   üìÅ –ü—É—Ç—å: ${projectPath}`);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json
  const packageJsonPath = path.join(projectPath, 'package.json');
  if (fs.existsSync(packageJsonPath)) {
    console.log('   ‚úÖ package.json –Ω–∞–π–¥–µ–Ω');

    try {
      const pkg = JSON.parse(fs.readFileSync(packageJsonPath, 'utf-8'));
      console.log(`   üì¶ –ü—Ä–æ–µ–∫—Ç: ${pkg.name || 'Unnamed'}`);

      const deps = pkg.dependencies || {};
      const devDeps = pkg.devDependencies || {};
      const totalDeps = Object.keys(deps).length + Object.keys(devDeps).length;
      console.log(`   üìä –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: ${totalDeps}`);

      return { hasPackageJson: true, dependencies: deps, devDependencies: devDeps };
    } catch (error) {
      console.log('   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è package.json');
      return { hasPackageJson: false };
    }
  } else {
    console.log('   ‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω');
    return { hasPackageJson: false };
  }
}

// –ü–æ–∏—Å–∫ –ø—Ä–æ–±–ª–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
function findSecurityIssues(projectData) {
  console.log('\nüîç –ü–æ–∏—Å–∫ –ø—Ä–æ–±–ª–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏:');

  const issues = [];

  // 1. –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  if (projectData.dependencies) {
    Object.keys(projectData.dependencies).forEach(dep => {
      const version = projectData.dependencies[dep];

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∏–∑–≤–µ—Å—Ç–Ω—ã–µ —É—è–∑–≤–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã
      if (dep === 'lodash' && version.includes('4.17.')) {
        const versionNum = version.replace(/[^0-9.]/g, '');
        if (versionNum < '4.17.21') {
          issues.push({
            type: 'dependency-vulnerability',
            severity: 'high',
            package: dep,
            version: version,
            description: '–£—Å—Ç–∞—Ä–µ–≤—à–∞—è –≤–µ—Ä—Å–∏—è lodash —Å —É—è–∑–≤–∏–º–æ—Å—Ç—è–º–∏',
          });
        }
      }

      if (dep === 'express' && version.includes('4.')) {
        issues.push({
          type: 'dependency-check',
          severity: 'medium',
          package: dep,
          version: version,
          description: '–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–µ—Ä—Å–∏—é Express –Ω–∞ —É—è–∑–≤–∏–º–æ—Å—Ç–∏',
        });
      }
    });
  }

  // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  const configFiles = [
    'vite.config.ts',
    'vite.config.js',
    'next.config.js',
    'next.config.ts',
    'svelte.config.js',
  ];

  configFiles.forEach(configFile => {
    const configPath = path.join(process.cwd(), configFile);
    if (fs.existsSync(configPath)) {
      console.log(`   üìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º: ${configFile}`);

      try {
        const content = fs.readFileSync(configPath, 'utf-8');

        if (content.includes('cors: true')) {
          issues.push({
            type: 'cors-misconfiguration',
            severity: 'medium',
            file: configFile,
            description: 'CORS –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å–ª–∏—à–∫–æ–º —Ä–∞–∑—Ä–µ—à–∏—Ç–µ–ª—å–Ω–æ',
          });
        }

        if (content.includes('process.env') && !content.includes('dotenv')) {
          issues.push({
            type: 'env-exposure-risk',
            severity: 'low',
            file: configFile,
            description: '–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π —Ä–∏—Å–∫ exposure –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è',
          });
        }
      } catch (error) {
        console.log(`   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è ${configFile}`);
      }
    }
  });

  // 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  const securityFiles = ['.gitignore', '.env.example'];
  securityFiles.forEach(file => {
    if (!fs.existsSync(path.join(process.cwd(), file))) {
      issues.push({
        type: 'missing-security-file',
        severity: file === '.gitignore' ? 'high' : 'medium',
        file: file,
        description: `–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤–∞–∂–Ω—ã–π —Ñ–∞–π–ª –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: ${file}`,
      });
    }
  });

  console.log(`   üîç –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ–±–ª–µ–º: ${issues.length}`);
  return issues;
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
function generateRecommendations(issues) {
  console.log('\nüí° –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:');

  const recommendations = issues.map((issue, index) => {
    const rec = {
      id: index + 1,
      title: '',
      severity: issue.severity,
      timeEstimate: '15-30 –º–∏–Ω—É—Ç',
      steps: [],
      category: issue.type.split('-')[0],
    };

    switch (issue.type) {
      case 'dependency-vulnerability':
        rec.title = `–û–±–Ω–æ–≤–∏—Ç—å ${issue.package} (${issue.version} ‚Üí latest)`;
        rec.timeEstimate = '10-15 –º–∏–Ω—É—Ç';
        rec.steps = [
          `–ü—Ä–æ–≤–µ—Ä—å—Ç–µ changelog: npm info ${issue.package}`,
          `–û–±–Ω–æ–≤–∏—Ç–µ: npm update ${issue.package}`,
          '–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã: npm test',
          '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞—É–¥–∏—Ç: npm audit',
        ];
        rec.commands = [`npm update ${issue.package}`, 'npm test', 'npm audit'];
        break;

      case 'cors-misconfiguration':
        rec.title = '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å CORS –±–µ–∑–æ–ø–∞—Å–Ω–æ';
        rec.timeEstimate = '5-10 –º–∏–Ω—É—Ç';
        rec.steps = [
          `–û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª: ${issue.file}`,
          '–ó–∞–º–µ–Ω–∏—Ç–µ cors: true –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ–º–µ–Ω–æ–≤',
          '–£–∫–∞–∂–∏—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ origins',
          '–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
        ];
        rec.codeExample = {
          before: 'cors: true',
          after: 'cors: { origin: ["http://localhost:3000", "http://localhost:5173"] }',
        };
        break;

      case 'missing-security-file':
        rec.title = `–°–æ–∑–¥–∞—Ç—å ${issue.file}`;
        rec.timeEstimate = '5 –º–∏–Ω—É—Ç';
        if (issue.file === '.gitignore') {
          rec.steps = [
            '–°–æ–∑–¥–∞–π—Ç–µ .gitignore –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞',
            '–î–æ–±–∞–≤—å—Ç–µ node_modules/',
            '–î–æ–±–∞–≤—å—Ç–µ .env*',
            '–î–æ–±–∞–≤—å—Ç–µ dist/, build/',
            '–î–æ–±–∞–≤—å—Ç–µ *.log',
          ];
          rec.codeExample = {
            content: 'node_modules/\n.env*\ndist/\nbuild/\n*.log',
          };
        } else {
          rec.steps = [
            `–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª ${issue.file}`,
            '–î–æ–±–∞–≤—å—Ç–µ –ø—Ä–∏–º–µ—Ä—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è',
            '–ó–∞–¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞–∂–¥–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π',
          ];
        }
        break;

      default:
        rec.title = `–ò—Å–ø—Ä–∞–≤–∏—Ç—å: ${issue.description}`;
        rec.steps = [
          '–ò–∑—É—á–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–¥—Ä–æ–±–Ω–µ–µ',
          '–ü—Ä–∏–º–µ–Ω–∏—Ç–µ —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
          '–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è',
        ];
    }

    return rec;
  });

  console.log(`   üí° –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: ${recommendations.length} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π`);
  return recommendations;
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function showResults(issues, recommendations) {
  console.log('\nüìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ê–ù–ê–õ–ò–ó–ê:');

  if (issues.length === 0) {
    console.log('üéâ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!');
    console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–∞–∑–æ–≤—ã–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏');
    return true;
  }

  // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤–∞–∂–Ω–æ—Å—Ç–∏
  const critical = recommendations.filter(r => r.severity === 'critical');
  const high = recommendations.filter(r => r.severity === 'high');
  const medium = recommendations.filter(r => r.severity === 'medium');
  const low = recommendations.filter(r => r.severity === 'low');

  console.log(`üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö: ${critical.length}`);
  console.log(`‚ö†Ô∏è  –í—ã—Å–æ–∫–∏—Ö: ${high.length}`);
  console.log(`üìã –°—Ä–µ–¥–Ω–∏—Ö: ${medium.length}`);
  console.log(`‚ÑπÔ∏è  –ù–∏–∑–∫–∏—Ö: ${low.length}`);

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  const topRecommendations = [...critical, ...high, ...medium].slice(0, 3);

  if (topRecommendations.length > 0) {
    console.log('\nüéØ –ü–†–ò–û–†–ò–¢–ï–¢–ù–´–ï –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');

    topRecommendations.forEach((rec, index) => {
      console.log(`\n${index + 1}. ${rec.title}`);
      console.log(`   üö© –í–∞–∂–Ω–æ—Å—Ç—å: ${rec.severity}`);
      console.log(`   ‚è±Ô∏è  –í—Ä–µ–º—è: ${rec.timeEstimate}`);
      console.log(`   üîß –î–µ–π—Å—Ç–≤–∏—è:`);

      rec.steps.forEach((step, i) => {
        console.log(`      ${i + 1}. ${step}`);
      });

      if (rec.codeExample) {
        if (rec.codeExample.before && rec.codeExample.after) {
          console.log(`   üìù –ö–æ–¥:`);
          console.log(`      –ë—ã–ª–æ: ${rec.codeExample.before}`);
          console.log(`      –°—Ç–∞–ª–æ: ${rec.codeExample.after}`);
        } else if (rec.codeExample.content) {
          console.log(`   üìù –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞:`);
          console.log(`      ${rec.codeExample.content.replace(/\n/g, '\\n')}`);
        }
      }

      if (rec.commands) {
        console.log(`   üíª –ö–æ–º–∞–Ω–¥—ã: ${rec.commands.join(' && ')}`);
      }
    });
  }

  return false; // –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
}

// –û—Ü–µ–Ω–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã
function evaluateEffectiveness(recommendations) {
  console.log('\nüìä –û–¶–ï–ù–ö–ê –≠–§–§–ï–ö–¢–ò–í–ù–û–°–¢–ò –°–ò–°–¢–ï–ú–´:');

  let score = 0;

  // –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏
  const hasRecommendations = recommendations.length > 0;
  const hasSteps = recommendations.every(r => r.steps && r.steps.length > 0);
  const hasTimeEstimates = recommendations.every(r => r.timeEstimate);
  const hasCodeExamples = recommendations.some(r => r.codeExample);
  const hasCommands = recommendations.some(r => r.commands);

  if (hasRecommendations) {
    score += 20;
    console.log('   ‚úÖ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: +20%');
  }

  if (hasSteps) {
    score += 25;
    console.log('   ‚úÖ –ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: +25%');
  }

  if (hasTimeEstimates) {
    score += 20;
    console.log('   ‚úÖ –û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏: +20%');
  }

  if (hasCodeExamples) {
    score += 20;
    console.log('   ‚úÖ –ü—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞: +20%');
  }

  if (hasCommands) {
    score += 15;
    console.log('   ‚úÖ –ì–æ—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã: +15%');
  }

  console.log(`\nüìà –ò–¢–û–ì–û–í–ê–Ø –≠–§–§–ï–ö–¢–ò–í–ù–û–°–¢–¨: ${score}%`);

  if (score >= 70) {
    console.log('üéâ –¶–ï–õ–¨ –î–û–°–¢–ò–ì–ù–£–¢–ê! –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å 70%+');
    console.log('‚úÖ SecurityChecker –≥–æ—Ç–æ–≤ –∫ production');
    return true;
  } else {
    console.log('‚ö° –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è 70%+');
    return false;
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
function runSecurityTest() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ SecurityChecker...\n');

  try {
    // 1. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–µ–∫—Ç–∞
    const projectData = analyzeProject();

    if (!projectData.hasPackageJson) {
      console.log('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: package.json –Ω–µ –Ω–∞–π–¥–µ–Ω');
      return false;
    }

    // 2. –ü–æ–∏—Å–∫ –ø—Ä–æ–±–ª–µ–º
    const issues = findSecurityIssues(projectData);

    // 3. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    const recommendations = generateRecommendations(issues);

    // 4. –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    const allClear = showResults(issues, recommendations);

    // 5. –û—Ü–µ–Ω–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    const isEffective = evaluateEffectiveness(recommendations);

    // –ò—Ç–æ–≥–æ–≤–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ
    console.log('\nüéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:');
    if (allClear) {
      console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç –±–µ–∑–æ–ø–∞—Å–µ–Ω, –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ—Ç');
    } else {
      console.log(`üìã –ù–∞–π–¥–µ–Ω–æ ${issues.length} –ø—Ä–æ–±–ª–µ–º —Å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏`);
    }

    if (isEffective) {
      console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ');
      console.log('üöÄ –ì–æ—Ç–æ–≤ –∫ –ø–µ—Ä–µ—Ö–æ–¥—É –Ω–∞ Phase 5.2.2');
    }

    return isEffective;
  } catch (error) {
    console.error('üí• –û—à–∏–±–∫–∞:', error.message);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫
console.log('='.repeat(60));
console.log('üîí –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò –ò –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ô');
console.log('='.repeat(60));

const success = runSecurityTest();

console.log('\n' + '='.repeat(60));
console.log(`üèÅ –†–ï–ó–£–õ–¨–¢–ê–¢: ${success ? 'SUCCESS' : 'NEEDS_WORK'}`);
console.log('='.repeat(60));

process.exit(success ? 0 : 1);
