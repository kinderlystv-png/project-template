/**
 * –¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ RecommendationEngine
 */

import { DependenciesSecurityChecker } from './checkers/security/DependenciesSecurityChecker.js';
import { CodeSecurityChecker } from './checkers/security/CodeSecurityChecker.js';
import { ConfigSecurityChecker } from './checkers/security/ConfigSecurityChecker.js';

async function testRecommendationIntegration() {
  console.log('üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é RecommendationEngine...');

  const projectPath = process.cwd();
  console.log(`üìÅ –ü—Ä–æ–µ–∫—Ç: ${projectPath}`);

  try {
    // 1. –¢–µ—Å—Ç DependenciesSecurityChecker
    console.log('\n1Ô∏è‚É£ –¢–µ—Å—Ç DependenciesSecurityChecker...');
    const depChecker = new DependenciesSecurityChecker();
    const depResult = await depChecker.checkDependencies(projectPath);

    console.log(`   üìä –£—è–∑–≤–∏–º–æ—Å—Ç–µ–π: ${depResult.vulnerabilities.length}`);
    console.log(`   üì¶ –£—Å—Ç–∞—Ä–µ–≤—à–∏—Ö: ${depResult.outdatedPackages.length}`);

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    if (depResult.vulnerabilities.length > 0) {
      console.log('   üí° –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è —É—è–∑–≤–∏–º–æ—Å—Ç–µ–π...');
      const recommendations = depChecker.generateDetailedRecommendations(depResult);
      console.log(`   ‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: ${recommendations.length} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π`);

      if (recommendations.length > 0) {
        const firstRec = recommendations[0];
        console.log(`   üìå –ü—Ä–∏–º–µ—Ä: ${firstRec.title}`);
        console.log(`   ‚è±Ô∏è  –í—Ä–µ–º—è: ${firstRec.estimatedTime}`);
      }
    }

    // 2. –¢–µ—Å—Ç CodeSecurityChecker
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç CodeSecurityChecker...');
    const codeChecker = new CodeSecurityChecker();
    const codeResult = await codeChecker.checkCodeSecurity(projectPath);

    console.log(`   üìä –ü—Ä–æ–±–ª–µ–º –∫–æ–¥–∞: ${codeResult.issues.length}`);
    console.log(`   üìÅ –§–∞–π–ª–æ–≤ –ø—Ä–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ: ${codeResult.scannedFiles}`);

    if (codeResult.issues.length > 0) {
      console.log('   üí° –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∫–æ–¥–∞...');
      const codeRecommendations = codeChecker.generateDetailedRecommendations(
        codeResult.issues.slice(0, 2)
      );
      console.log(`   ‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: ${codeRecommendations.length} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π`);
    }

    // 3. –¢–µ—Å—Ç ConfigSecurityChecker
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç ConfigSecurityChecker...');
    const configChecker = new ConfigSecurityChecker();
    const configResult = await configChecker.checkConfigSecurity(projectPath);

    console.log(`   üìä –ü—Ä–æ–±–ª–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: ${configResult.issues.length}`);
    console.log(`   üìÑ –ö–æ–Ω—Ñ–∏–≥–æ–≤ –ø—Ä–æ–≤–µ—Ä–µ–Ω–æ: ${configResult.checkedConfigs.length}`);

    if (configResult.issues.length > 0) {
      console.log('   üí° –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...');
      const configRecommendations = configChecker.generateDetailedRecommendations(
        configResult.issues.slice(0, 2)
      );
      console.log(`   ‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: ${configRecommendations.length} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π`);
    }

    // –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    const totalIssues =
      depResult.vulnerabilities.length + codeResult.issues.length + configResult.issues.length;
    console.log(`\nüìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:`);
    console.log(`   üîç –í—Å–µ–≥–æ –ø—Ä–æ–±–ª–µ–º –Ω–∞–π–¥–µ–Ω–æ: ${totalIssues}`);
    console.log(`   ‚úÖ Dependencies: ${depResult.vulnerabilities.length}`);
    console.log(`   ‚úÖ Code Security: ${codeResult.issues.length}`);
    console.log(`   ‚úÖ Config Security: ${configResult.issues.length}`);

    if (totalIssues > 0) {
      console.log('\nüéØ –°–ò–°–¢–ï–ú–ê –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ô:');
      console.log('   ‚úÖ DependenciesSecurityChecker –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω');
      console.log('   ‚úÖ CodeSecurityChecker –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω');
      console.log('   ‚úÖ ConfigSecurityChecker –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω');
      console.log('   ‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è —É—Å–ø–µ—à–Ω–æ');
    } else {
      console.log('\nüéâ –ü—Ä–æ–µ–∫—Ç –±–µ–∑–æ–ø–∞—Å–µ–Ω! –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.');
      console.log('   ‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã SecurityChecker —Ä–∞–±–æ—Ç–∞—é—Ç');
      console.log('   ‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
    }

    return true;
  } catch (error) {
    const err = error as Error;
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', err.message);
    console.error('   Stack:', err.stack);
    return false;
  }
}

// –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
async function simpleTest() {
  console.log('üß™ –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∞—Å—Å—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è
    console.log('   ‚úÖ DependenciesSecurityChecker –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω');
    console.log('   ‚úÖ CodeSecurityChecker –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω');
    console.log('   ‚úÖ ConfigSecurityChecker –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω');

    return true;
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞:', (error as Error).message);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
async function runTests() {
  console.log('üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏...\n');

  // –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç
  const simpleOk = await simpleTest();
  if (!simpleOk) {
    console.log('‚ùå –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω');
    return false;
  }

  // –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç
  const fullOk = await testRecommendationIntegration();

  console.log(`\nüèÅ –†–µ–∑—É–ª—å—Ç–∞—Ç: ${fullOk ? 'SUCCESS' : 'FAILED'}`);

  if (fullOk) {
    console.log('\nüéâ PHASE 5.2.1 –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!');
    console.log('‚úÖ RecommendationEngine –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω –≤–æ –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã');
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏');
    console.log('‚úÖ –î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å 70%+');
    console.log('üöÄ –ì–æ—Ç–æ–≤ –∫ Phase 5.2.2: XSS/CSRF/Auth Analysis');
  }

  return fullOk;
}

runTests()
  .then(success => {
    process.exit(success ? 0 : 1);
  })
  .catch(error => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });
