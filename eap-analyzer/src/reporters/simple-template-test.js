/**
 * –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –æ—Ç–¥–µ–ª—å–Ω–æ
 */

console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤ EAP v4.0');
console.log('='.repeat(50));

// –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤
console.log('1. ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ TypeScript —Ç–∏–ø–æ–≤');
try {
  const { TemplateFormat, TemplateCategory, TemplateComplexity } = require('./templates/types');
  console.log(`   üìù TemplateFormat: ${Object.keys(TemplateFormat).join(', ')}`);
  console.log(`   üìÇ TemplateCategory: ${Object.keys(TemplateCategory).join(', ')}`);
  console.log(`   üéØ TemplateComplexity: ${Object.keys(TemplateComplexity).join(', ')}`);
} catch (error) {
  console.log(`   ‚ùå –û—à–∏–±–∫–∞ —Ç–∏–ø–æ–≤: ${error.message}`);
}

// –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ TemplateRegistry
console.log('\n2. ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ TemplateRegistry');
try {
  const { TemplateRegistry } = require('./templates/TemplateRegistry');
  const registry = TemplateRegistry.getInstance();
  const stats = registry.getRegistryStats();
  console.log(
    `   üìä –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: ${stats.totalTemplates} —à–∞–±–ª–æ–Ω–æ–≤, ${stats.totalSections} —Å–µ–∫—Ü–∏–π`
  );

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —à–∞–±–ª–æ–Ω
  const testTemplate = {
    metadata: {
      id: 'test-template',
      name: 'Test Template',
      description: 'Simple test template',
      format: 'markdown',
      category: 'standard',
      complexity: 'simple',
      version: '1.0.0',
    },
    content: '# {{title}}\n\nHello {{name}}!',
  };

  registry.registerTemplate(testTemplate);
  const newStats = registry.getRegistryStats();
  console.log(`   üìà –ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: ${newStats.totalTemplates} —à–∞–±–ª–æ–Ω–æ–≤`);

  const retrieved = registry.getTemplate('test-template');
  console.log(`   üîç –ü–æ–∏—Å–∫ —à–∞–±–ª–æ–Ω–∞: ${retrieved ? '–Ω–∞–π–¥–µ–Ω' : '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`);
} catch (error) {
  console.log(`   ‚ùå –û—à–∏–±–∫–∞ TemplateRegistry: ${error.message}`);
}

// –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ TemplateEngine –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
console.log('\n3. ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å TemplateEngine');
try {
  const { TemplateEngine } = require('./TemplateEngine');
  const engine = new TemplateEngine();

  const template = 'Hello {{name}}! Score: {{score}}/100';
  const variables = { name: 'EAP', score: 95 };
  const result = engine.render(template, variables);

  console.log(`   üìù –®–∞–±–ª–æ–Ω: "${template}"`);
  console.log(`   üìä –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: ${JSON.stringify(variables)}`);
  console.log(`   ‚ú® –†–µ–∑—É–ª—å—Ç–∞—Ç: "${result}"`);
} catch (error) {
  console.log(`   ‚ùå –û—à–∏–±–∫–∞ TemplateEngine: ${error.message}`);
}

console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç: –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
console.log('='.repeat(50));
