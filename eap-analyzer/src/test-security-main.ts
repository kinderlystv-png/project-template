/**
 * –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç SecurityChecker —Å RecommendationEngine
 */

import { SecurityChecker } from './checkers/security/SecurityChecker.js';
import type { CheckContext } from './types/index.js';

async function testMainSecurityChecker() {
  console.log('üîí –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—ã–π SecurityChecker...');

  const context: CheckContext = {
    projectPath: process.cwd(),
    projectInfo: {
      name: 'eap-analyzer',
      version: '3.0.0',
      hasTypeScript: true,
      hasTests: true,
      hasDocker: false,
      hasCICD: false,
      dependencies: {
        production: 10,
        development: 12,
        total: 22,
      },
    },
    options: {
      projectPath: process.cwd(),
      verbose: true,
    },
  };

  try {
    console.log('\n1Ô∏è‚É£ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...');
    const result = await SecurityChecker.checkComponent(context);

    console.log(`‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
    console.log(
      `üìä –û–±—â–∏–π –±–∞–ª–ª: ${result.score}/${result.maxScore} (${result.percentage.toFixed(1)}%)`
    );
    console.log(`‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: ${result.passed.length} –ø—Ä–æ–≤–µ—Ä–æ–∫`);
    console.log(`‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: ${result.failed.length} –ø—Ä–æ–≤–µ—Ä–æ–∫`);
    console.log(`‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π: ${result.warnings.length}`);

    console.log('\n2Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏...');
    const detailedRecommendations = await SecurityChecker.generateDetailedRecommendations(context);

    console.log(`üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:`);
    console.log(`   üì¶ Dependencies: ${detailedRecommendations.dependencies.length}`);
    console.log(`   üîí Code Security: ${detailedRecommendations.code.length}`);
    console.log(`   ‚öôÔ∏è  Config Security: ${detailedRecommendations.config.length}`);
    console.log(`   üìä –í—Å–µ–≥–æ: ${detailedRecommendations.summary.totalRecommendations}`);
    console.log(`   üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö: ${detailedRecommendations.summary.criticalRecommendations}`);
    console.log(`   ‚è±Ô∏è  –í—Ä–µ–º—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è: ${detailedRecommendations.summary.estimatedTimeToFix}`);

    console.log('\n3Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±—ã—Å—Ç—Ä—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º...');
    const quickRecommendations = await SecurityChecker.generateQuickRecommendations(context);

    console.log(`üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: ${quickRecommendations.length}`);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    if (quickRecommendations.length > 0) {
      console.log('\n4Ô∏è‚É£ –ü—Ä–∏–º–µ—Ä—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:');

      quickRecommendations.slice(0, 3).forEach((rec, index) => {
        console.log(`\n   ${index + 1}. ${rec?.title || 'Untitled'}`);
        console.log(`      üéØ –°–ª–æ–∂–Ω–æ—Å—Ç—å: ${rec?.difficulty || 'unknown'}`);
        console.log(`      ‚è±Ô∏è  –í—Ä–µ–º—è: ${rec?.estimatedTime || 'unknown'}`);

        const description = rec?.description || '–û–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ';
        const shortDesc =
          description.length > 80 ? description.substring(0, 80) + '...' : description;
        console.log(`      üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${shortDesc}`);

        if (rec?.fixTemplate?.steps && rec.fixTemplate.steps.length > 0) {
          console.log(`      üîß –ü–µ—Ä–≤—ã–π —à–∞–≥: ${rec.fixTemplate.steps[0]}`);
        }
      });
    } else {
      console.log('\nüéâ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!');
    }

    // –û—Ü–µ–Ω–∫–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    console.log('\n5Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ SecurityChecker...');

    let effectivenessScore = 0;

    // –ë–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª (30%)
    if (result.score > 0) {
      effectivenessScore += 30;
      console.log('   ‚úÖ –ë–∞–∑–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑: +30%');
    }

    // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π (30%)
    if (detailedRecommendations.summary.totalRecommendations > 0) {
      effectivenessScore += 30;
      console.log('   ‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: +30%');
    }

    // –û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ (20%)
    if (detailedRecommendations.summary.estimatedTimeToFix !== '0h') {
      effectivenessScore += 20;
      console.log('   ‚úÖ –û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏: +20%');
    }

    // –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (20%)
    if (detailedRecommendations.summary.criticalRecommendations > 0) {
      effectivenessScore += 20;
      console.log('   ‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏: +20%');
    } else {
      effectivenessScore += 10; // –ß–∞—Å—Ç–∏—á–Ω—ã–π –±–∞–ª–ª –∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º
      console.log('   ‚úÖ –ù–µ—Ç –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º: +10%');
    }

    console.log(`\nüìà –ò–¢–û–ì–û–í–ê–Ø –≠–§–§–ï–ö–¢–ò–í–ù–û–°–¢–¨: ${effectivenessScore}%`);

    if (effectivenessScore >= 70) {
      console.log('üéâ –£–°–ü–ï–•! SecurityChecker –¥–æ—Å—Ç–∏–≥ —Ü–µ–ª–µ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ 70%+');
      console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç');
      console.log('‚úÖ –ì–æ—Ç–æ–≤ –∫ production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é');
      console.log('üöÄ Phase 5.2.1 –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û');
      return true;
    } else {
      console.log('‚ö° –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–∞–ª—å–Ω–µ–π—à–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è');
      return false;
    }
  } catch (error) {
    const err = error as Error;
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', err.message);
    console.error('   –î–µ—Ç–∞–ª–∏:', err.stack);
    return false;
  }
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
async function validateComponents() {
  console.log('üîç –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã...');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã RecommendationEngine
    const fs = await import('fs');
    const path = await import('path');

    const recommendationFiles = [
      'src/recommendations/RecommendationEngine.ts',
      'src/recommendations/DependencyFixTemplates.ts',
      'src/recommendations/CodeSecurityFixTemplates.ts',
      'src/recommendations/ConfigFixTemplates.ts',
      'src/recommendations/types.ts',
    ];

    let allFilesExist = true;
    for (const file of recommendationFiles) {
      const filePath = path.default.join(process.cwd(), file);
      if (fs.default.existsSync(filePath)) {
        console.log(`   ‚úÖ ${file}`);
      } else {
        console.log(`   ‚ùå ${file} - –ù–ï –ù–ê–ô–î–ï–ù`);
        allFilesExist = false;
      }
    }

    if (allFilesExist) {
      console.log('‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã RecommendationEngine –Ω–∞ –º–µ—Å—Ç–µ');
      return true;
    } else {
      console.log('‚ùå –ù–µ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã');
      return false;
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏:', (error as Error).message);
    return false;
  }
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function runFinalTest() {
  console.log('üöÄ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç SecurityChecker —Å RecommendationEngine\n');
  console.log('='.repeat(60));

  // 1. –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
  const validationOk = await validateComponents();
  if (!validationOk) {
    console.log('‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–≤–∞–ª–µ–Ω–∞');
    return false;
  }

  console.log('');

  // 2. –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç
  const testOk = await testMainSecurityChecker();

  console.log('\n' + '='.repeat(60));
  console.log(`üèÅ –§–ò–ù–ê–õ–¨–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: ${testOk ? 'SUCCESS' : 'FAILED'}`);

  if (testOk) {
    console.log('\nüéä –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! PHASE 5.2.1 –ó–ê–í–ï–†–®–ï–ù–ê!');
    console.log('‚úÖ RecommendationEngine –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω');
    console.log('‚úÖ SecurityChecker –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏');
    console.log('‚úÖ –î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å 70%+');
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ production');
    console.log('\nüéØ –°–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø: Phase 5.2.2 - XSS/CSRF/Auth Analysis');
  } else {
    console.log('\n‚ö†Ô∏è  –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º –∫ Phase 5.2.2');
  }

  console.log('='.repeat(60));

  return testOk;
}

runFinalTest()
  .then(success => {
    process.exit(success ? 0 : 1);
  })
  .catch(error => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });
