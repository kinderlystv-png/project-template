/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—Ä–æ—Å—Ç–æ–π –∑–∞–ø—É—Å–∫ EAP Debugger —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π FileStructureChecker
 */
/* eslint-disable no-console */
/* eslint-disable @typescript-eslint/no-explicit-any */

import { AnalysisOrchestrator } from './eap-analyzer/src/core/orchestrator.js';
import { FileStructureChecker } from './eap-analyzer/src/checkers/structure.checker.js';
import { EapDebugger } from './eap-debugger/src/EapDebugger.js';

const runFixedDebugger = async () => {
  console.log('üîç –ó–∞–ø—É—Å–∫ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û EAP Debugger —Å FileStructureChecker...\n');

  try {
    // –°–æ–∑–¥–∞–µ–º –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π
    console.log('üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å FileStructureChecker...');
    const orchestrator = new AnalysisOrchestrator();

    // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º FileStructureChecker
    const structureChecker = new FileStructureChecker();
    orchestrator.registerChecker(structureChecker.getName(), structureChecker);

    console.log('üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:');
    console.log(`  - –ß–µ–∫–µ—Ä–æ–≤: ${(orchestrator as any).checkers.size}`);
    console.log(`  - –ú–æ–¥—É–ª–µ–π: ${(orchestrator as any).modules.size}\n`);

    // –î–µ—Ç–∞–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    console.log('üîß –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —á–µ–∫–µ—Ä—ã:');
    for (const [name, checker] of (orchestrator as any).checkers) {
      console.log(`  - ${name}: ${checker.constructor.name} (${(checker as any).category})`);
    }

    console.log('\nüì¶ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏:');
    for (const [name, module] of (orchestrator as any).modules) {
      console.log(`  - ${name}: ${module.constructor.name}`);
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–±–∞–≥–≥–µ—Ä —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ—Ç–∫—Ä—ã—Ç–∏–µ–º –±—Ä–∞—É–∑–µ—Ä–∞
    console.log('\nüåê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è HTML –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞...');

    const html = await EapDebugger.quickGenerateAndOpen(
      orchestrator as any,
      './eap-fixed-orchestrator-debug.html'
    );

    console.log(`‚úÖ HTML —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: ${html.length} —Å–∏–º–≤–æ–ª–æ–≤`);
    console.log('üìÅ –§–∞–π–ª: eap-fixed-orchestrator-debug.html');
    console.log('üåê –ë—Ä–∞—É–∑–µ—Ä –¥–æ–ª–∂–µ–Ω –æ—Ç–∫—Ä—ã—Ç—å—Å—è —Å FileStructureChecker –≤ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏!');

    // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    const eapDebugger = new EapDebugger();
    await eapDebugger.generateComponentsHtml(orchestrator as any);

    const stats = eapDebugger.getComponentStats();
    console.log('\nüìà –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:');
    console.log(JSON.stringify(stats, null, 2));

    const state = eapDebugger.getState();
    console.log('\nüîç –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –¥–µ–±–∞–≥–≥–µ—Ä–∞:');
    console.log(`  - –í—Å–µ–≥–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: ${state.components.totalCount}`);
    console.log(
      `  - –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${state.components.lastUpdated.toLocaleString('ru-RU')}`
    );
    console.log(
      `  - –ï—Å—Ç—å FileStructureChecker: ${(orchestrator as any).checkers.has('FileStructureChecker') ? '–î–ê ‚úÖ' : '–ù–ï–¢ ‚ùå'}`
    );
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –¥–µ–±–∞–≥–≥–µ—Ä–∞:', error);
  }
};

console.log('üöÄ –ó–∞–ø—É—Å–∫ –ò–°–ü–†–ê–í–õ–ï–ù–ù–û–ì–û –æ—Ç–ª–∞–¥—á–∏–∫–∞ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä–∞...\n');
runFixedDebugger().catch(console.error);
